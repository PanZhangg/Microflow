!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BOOL	src/mf_utilities.h	/^typedef signed   char     BOOL;$/;"	t
COPT	src/httpserver/Makefile	/^COPT=	-W -Os -s -D_POSIX_SOURCE -D_BSD_SOURCE$/;"	m
CgiExt	src/httpserver/wrlib/http.h	/^static const char *CgiExt = ".cgi" ;$/;"	v
DBG	src/httpserver/wrlib/misc.c	/^void DBG(const char *fmt, ...)$/;"	f
DEFAULT_PORT	src/mf_socket.h	6;"	d
DIRSEP	src/httpserver/wrlib/mg_compat.h	66;"	d
DISPOSIBILE	src/mf_timer.h	/^	DISPOSIBILE,$/;"	e	enum:STOPWATCH_TYPE
ECHO_REQUEST_HANDLER_FUNC	src/mf_msg_handler.h	/^	ECHO_REQUEST_HANDLER_FUNC,$/;"	e	enum:MSG_HANDLER_TYPE
EPOLL_EVENTS_NUM	src/mf_socket.h	7;"	d
ERRNO	src/httpserver/wrlib/mg_compat.h	70;"	d
ETHER_ARP	src/mf_utilities.h	/^    ETHER_ARP = 0x0806,$/;"	e	enum:ether_type
ETHER_IP	src/mf_utilities.h	/^    ETHER_IP = 0x0800,$/;"	e	enum:ether_type
ETHER_IPV6	src/mf_utilities.h	/^    ETHER_IPV6 = 0x86DD,$/;"	e	enum:ether_type
ETHER_LLDP	src/mf_utilities.h	/^    ETHER_LLDP = 0x88cc,$/;"	e	enum:ether_type
ETHER_MPLS	src/mf_utilities.h	/^    ETHER_MPLS = 0x8847$/;"	e	enum:ether_type
ETHER_VLAN	src/mf_utilities.h	/^    ETHER_VLAN = 0x8100,$/;"	e	enum:ether_type
EWOULDBLOCK	src/httpserver/wrlib/mg_compat.h	34;"	d
ExpireTime	src/httpserver/wrlib/http.h	/^static long ExpireTime = 24*60*60 ;$/;"	v
FEATURE_REPLY_HANDLER_FUNC	src/mf_msg_handler.h	/^	FEATURE_REPLY_HANDLER_FUNC,$/;"	e	enum:MSG_HANDLER_TYPE
FIRST_SOCKET_FD	tests/socket_array_test.c	5;"	d	file:
HELLO_MSG_HANDLER_FUNC	src/mf_msg_handler.h	/^	HELLO_MSG_HANDLER_FUNC,$/;"	e	enum:MSG_HANDLER_TYPE
HOST_CACHE_ARRAY	src/mf_devicemgr.c	/^static struct host_hash_value HOST_CACHE_ARRAY[MAX_HOST_NUM];$/;"	v	typeref:struct:host_hash_value	file:
HOST_HASH_MAP	src/mf_devicemgr.c	/^static struct host_hash_value * HOST_HASH_MAP[HOST_HASH_MAP_SIZE];$/;"	v	typeref:struct:host_hash_value	file:
HOST_HASH_MAP_SIZE	src/mf_devicemgr.h	17;"	d
HOST_IMG	webui/odl-webui.js	/^var HOST_IMG = "icons\/host.svg";$/;"	v
HOST_MUTEX_SLOT_SIZE	src/mf_devicemgr.h	15;"	d
HOST_SIZE	webui/odl-webui.js	/^var HOST_SIZE = 40;$/;"	v
HOST_X	webui/odl-webui.js	/^var HOST_X = -8;$/;"	v
HOST_Y	webui/odl-webui.js	/^var HOST_Y = -8;$/;"	v
HPL_VENDOR_ID	src/Openflow/openflow-common.h	97;"	d
HTTP_OBJECTS	src/Makefile	/^HTTP_OBJECTS = analysis.o http.o cgi.o mg_compat.o misc.o request.o wrhash.o wrio.o wrmpool.o wrstring.o $/;"	m
HTTP_SOURCE	src/Makefile	/^HTTP_SOURCE = .\/httpserver\/wrlib\/wrmpool.c .\/httpserver\/wrlib\/wrhash.c .\/httpserver\/wrlib\/wrstring.c .\/httpserver\/wrlib\/misc.c .\/httpserver\/wrlib\/wrio.c \\$/;"	m
INT1	src/mf_utilities.h	/^typedef char              INT1;$/;"	t
INT2	src/mf_utilities.h	/^typedef short             INT2;$/;"	t
INT4	src/mf_utilities.h	/^typedef int               INT4;$/;"	t
INT8	src/mf_utilities.h	/^typedef long              INT8;$/;"	t
INVALID_SOCKET	src/httpserver/wrlib/mg_compat.h	71;"	d
IS_DIRSEP_CHAR	src/httpserver/wrlib/mg_compat.h	67;"	d
IndexFile	src/httpserver/wrlib/http.h	/^static const char *IndexFile = "index.html" ;$/;"	v
LIBS	src/Makefile	/^LIBS = httpserver.a$/;"	m
LINK_NODE_CACHE_ARRAY	src/mf_topomgr.c	/^static struct link_node * LINK_NODE_CACHE_ARRAY; $/;"	v	typeref:struct:link_node	file:
LINK_NODE_NUM	src/mf_topomgr.h	14;"	d
LLDP_CHASSIS_ID_LOCALLY_ASSIGNED	src/mf_utilities.h	/^    LLDP_CHASSIS_ID_LOCALLY_ASSIGNED = 7$/;"	e	enum:lldp_chassis_id_subtype
LLDP_CHASSIS_ID_TLV	src/mf_utilities.h	/^    LLDP_CHASSIS_ID_TLV = 1,$/;"	e	enum:lldp_tlv_type
LLDP_CHASSIS_IP_MAC	src/mf_utilities.h	/^    LLDP_CHASSIS_IP_MAC              = 4,$/;"	e	enum:lldp_chassis_id_subtype
LLDP_END_OF_LLDPDU_TLV	src/mf_utilities.h	/^    LLDP_END_OF_LLDPDU_TLV = 0,$/;"	e	enum:lldp_tlv_type
LLDP_MGMT_ADDR_TLV	src/mf_utilities.h	/^    LLDP_MGMT_ADDR_TLV = 8$/;"	e	enum:lldp_tlv_type
LLDP_PORT_DESC_TLV	src/mf_utilities.h	/^    LLDP_PORT_DESC_TLV = 4,$/;"	e	enum:lldp_tlv_type
LLDP_PORT_ID_COMPONENT	src/mf_utilities.h	/^    LLDP_PORT_ID_COMPONENT        = 2,$/;"	e	enum:lldp_port_id_subtype
LLDP_PORT_ID_LOCALLY_ASSIGNED	src/mf_utilities.h	/^    LLDP_PORT_ID_LOCALLY_ASSIGNED = 7$/;"	e	enum:lldp_port_id_subtype
LLDP_PORT_ID_TLV	src/mf_utilities.h	/^    LLDP_PORT_ID_TLV = 2,$/;"	e	enum:lldp_tlv_type
LLDP_SYSTEM_CAPABILITY_TLV	src/mf_utilities.h	/^    LLDP_SYSTEM_CAPABILITY_TLV = 7,$/;"	e	enum:lldp_tlv_type
LLDP_SYSTEM_DESC_TLV	src/mf_utilities.h	/^    LLDP_SYSTEM_DESC_TLV = 6,$/;"	e	enum:lldp_tlv_type
LLDP_SYSTEM_NAME_TLV	src/mf_utilities.h	/^    LLDP_SYSTEM_NAME_TLV = 5,$/;"	e	enum:lldp_tlv_type
LLDP_TTL_TLV	src/mf_utilities.h	/^    LLDP_TTL_TLV = 3,$/;"	e	enum:lldp_tlv_type
LONGEST_PATH_LINK_NUM	src/mf_topomgr.h	13;"	d
MAX	src/httpserver/wrlib/mg_compat.h	84;"	d
MAXLINE	tests/socket_client.c	9;"	d	file:
MAX_HEADER_SIZE	src/httpserver/wrlib/http.h	42;"	d
MAX_HOST_NUM	src/mf_devicemgr.h	13;"	d
MAX_HTTP_HEADERS	src/httpserver/wrlib/http.h	33;"	d
MAX_MF_SWITCH_NUM	src/mf_devicemgr.h	11;"	d
MAX_MF_SWITCH_PORT_NUM	src/mf_switch.h	10;"	d
MAX_NETWORK_LINK_NUM	src/mf_topomgr.h	11;"	d
MAX_NETWORK_LINK_NUM_PER_SWITCH	src/mf_topomgr.h	12;"	d
MAX_PKT	src/mf_utilities.h	53;"	d
MAX_POST_SIZE	src/httpserver/wrlib/http.h	52;"	d
MF_API_H__	src/mf_api.h	2;"	d
MF_DEVICE_MGR	src/mf_devicemgr.c	/^struct mf_devicemgr MF_DEVICE_MGR;$/;"	v	typeref:struct:mf_devicemgr
MF_LF_LIST_H__	src/mf_lf_list.h	2;"	d
MF_LOG_FILE	src/mf_logger.c	/^FILE* MF_LOG_FILE;$/;"	v
MF_MEMPOOL_H__	src/mf_mempool.h	2;"	d
MF_QUEUE_NODE_MEMPOOL_SIZE	src/mf_mempool.h	7;"	d
MF_SOURCE	src/Makefile	/^MF_SOURCE = main.c ..\/src\/mf_socket.c ..\/src\/mf_logger.c \\$/;"	m
MF_STOPWATCH_LIST	src/mf_timer.c	/^struct stopwatch_list * MF_STOPWATCH_LIST;$/;"	v	typeref:struct:stopwatch_list
MF_TOPOMGR_H__	src/mf_topomgr.h	2;"	d
MF_TOPO_MGR	src/mf_topomgr.c	/^static struct mf_topomgr MF_TOPO_MGR;$/;"	v	typeref:struct:mf_topomgr	file:
MF_UTILITIES_H__	src/mf_utilities.h	2;"	d
MF_WRAPPER_H__	src/mf_wrapper.h	2;"	d
MIN	src/httpserver/wrlib/mg_compat.h	80;"	d
MSG_HANDLERS	src/mf_msg_handler.c	/^struct msg_handlers * MSG_HANDLERS;$/;"	v	typeref:struct:msg_handlers
MSG_HANDLER_TYPE	src/mf_msg_handler.h	/^enum MSG_HANDLER_TYPE{$/;"	g
MSG_RX_QUEUE	src/mf_socket.c	/^struct mf_queue_node_mempool * MSG_RX_QUEUE[WORKER_THREADS_NUM];$/;"	v	typeref:struct:mf_queue_node_mempool
NDEBUG	src/minunit.h	1;"	d
NETWORK_LINK_CACHE_ARRAY	src/mf_topomgr.c	/^static struct network_link NETWORK_LINK_CACHE_ARRAY[MAX_NETWORK_LINK_NUM];$/;"	v	typeref:struct:network_link	file:
NET_RECEIVE_WORKER_NUMBER	src/mf_controller.h	8;"	d
NTR_VENDOR_ID	src/Openflow/openflow-common.h	98;"	d
NX_VENDOR_ID	src/Openflow/openflow-common.h	99;"	d
NetEdges	webui/odl-rest.js	/^var NetEdges = [];$/;"	v
NetNodes	webui/odl-rest.js	/^var NetNodes = [];$/;"	v
ODL_BASE_URL	webui/odl-rest.js	/^var ODL_BASE_URL = "http:\/\/" + ODL_ADDR + ":8080\/controller\/nb\/v2\/"$/;"	v
ODP_PORT_C	src/Openflow/types.h	106;"	d
OFFSETOF	src/mf_lf_list.h	6;"	d
OFP10_VLAN_NONE	src/Openflow/openflow-1.0.h	231;"	d
OFP11_INSTRUCTION_ALIGN	src/Openflow/openflow-1.1.h	265;"	d
OFP11_PORT_C	src/Openflow/types.h	107;"	d
OFPACPT_FLOW_REMOVED_MASTER	src/Openflow/openflow-1.4.h	/^    OFPACPT_FLOW_REMOVED_MASTER   = 5, \/* Flow removed mask for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_FLOW_REMOVED_SLAVE	src/Openflow/openflow-1.4.h	/^    OFPACPT_FLOW_REMOVED_SLAVE    = 4, \/* Flow removed mask for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_PACKET_IN_MASTER	src/Openflow/openflow-1.4.h	/^    OFPACPT_PACKET_IN_MASTER      = 1, \/* Packet-in mask for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_PACKET_IN_SLAVE	src/Openflow/openflow-1.4.h	/^    OFPACPT_PACKET_IN_SLAVE       = 0, \/* Packet-in mask for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_PORT_STATUS_MASTER	src/Openflow/openflow-1.4.h	/^    OFPACPT_PORT_STATUS_MASTER    = 3, \/* Port-status mask for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_PORT_STATUS_SLAVE	src/Openflow/openflow-1.4.h	/^    OFPACPT_PORT_STATUS_SLAVE     = 2, \/* Port-status mask for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_REQUESTFORWARD_MASTER	src/Openflow/openflow-1.4.h	/^    OFPACPT_REQUESTFORWARD_MASTER = 11, \/* RequestForward mask for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_REQUESTFORWARD_SLAVE	src/Openflow/openflow-1.4.h	/^    OFPACPT_REQUESTFORWARD_SLAVE  = 10, \/* RequestForward mask for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_ROLE_STATUS_MASTER	src/Openflow/openflow-1.4.h	/^    OFPACPT_ROLE_STATUS_MASTER    = 7, \/* Role status mask for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_ROLE_STATUS_SLAVE	src/Openflow/openflow-1.4.h	/^    OFPACPT_ROLE_STATUS_SLAVE     = 6, \/* Role status mask for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_TABLE_STATUS_MASTER	src/Openflow/openflow-1.4.h	/^    OFPACPT_TABLE_STATUS_MASTER   = 9, \/* Table status mask for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_TABLE_STATUS_SLAVE	src/Openflow/openflow-1.4.h	/^    OFPACPT_TABLE_STATUS_SLAVE    = 8, \/* Table status mask for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPBCT_CLOSE_REPLY	src/Openflow/openflow-1.4.h	/^    OFPBCT_CLOSE_REPLY     = 3,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_CLOSE_REQUEST	src/Openflow/openflow-1.4.h	/^    OFPBCT_CLOSE_REQUEST   = 2,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_COMMIT_REPLY	src/Openflow/openflow-1.4.h	/^    OFPBCT_COMMIT_REPLY    = 5,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_COMMIT_REQUEST	src/Openflow/openflow-1.4.h	/^    OFPBCT_COMMIT_REQUEST  = 4,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_DISCARD_REPLY	src/Openflow/openflow-1.4.h	/^    OFPBCT_DISCARD_REPLY   = 7,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_DISCARD_REQUEST	src/Openflow/openflow-1.4.h	/^    OFPBCT_DISCARD_REQUEST = 6,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_OPEN_REPLY	src/Openflow/openflow-1.4.h	/^    OFPBCT_OPEN_REPLY      = 1,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_OPEN_REQUEST	src/Openflow/openflow-1.4.h	/^    OFPBCT_OPEN_REQUEST    = 0,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBF_ATOMIC	src/Openflow/openflow-1.4.h	/^    OFPBF_ATOMIC  = 1 << 0,  \/* Execute atomically. *\/$/;"	e	enum:ofp14_bundle_flags
OFPBF_ORDERED	src/Openflow/openflow-1.4.h	/^    OFPBF_ORDERED = 1 << 1,  \/* Execute in specified order. *\/$/;"	e	enum:ofp14_bundle_flags
OFPC10_RESERVED	src/Openflow/openflow-1.0.h	/^    OFPC10_RESERVED       = 1 << 4,  \/* Reserved, must not be set. *\/$/;"	e	enum:ofp10_capabilities
OFPC10_STP	src/Openflow/openflow-1.0.h	/^    OFPC10_STP            = 1 << 3,  \/* 802.1d spanning tree. *\/$/;"	e	enum:ofp10_capabilities
OFPC11_GROUP_STATS	src/Openflow/openflow-1.1.h	/^    OFPC11_GROUP_STATS    = 1 << 3,  \/* Group statistics. *\/$/;"	e	enum:ofp11_capabilities
OFPC12_PORT_BLOCKED	src/Openflow/openflow-1.2.h	/^    OFPC12_PORT_BLOCKED   = 1 << 8   \/* Switch will block looping ports. *\/$/;"	e	enum:ofp12_capabilities
OFPCML12_MAX	src/Openflow/openflow-1.2.h	/^    OFPCML12_MAX       = 0xffe5, \/* maximum max_len value which can be used$/;"	e	enum:ofp12_controller_max_len
OFPCML12_NO_BUFFER	src/Openflow/openflow-1.2.h	/^    OFPCML12_NO_BUFFER = 0xffff  \/* indicates that no buffering should be$/;"	e	enum:ofp12_controller_max_len
OFPCR12_ROLE_EQUAL	src/Openflow/openflow-1.2.h	/^    OFPCR12_ROLE_EQUAL,       \/* Default role, full access. *\/$/;"	e	enum:ofp12_controller_role
OFPCR12_ROLE_MASTER	src/Openflow/openflow-1.2.h	/^    OFPCR12_ROLE_MASTER,      \/* Full access, at most one master. *\/$/;"	e	enum:ofp12_controller_role
OFPCR12_ROLE_NOCHANGE	src/Openflow/openflow-1.2.h	/^    OFPCR12_ROLE_NOCHANGE,    \/* Don't change current role. *\/$/;"	e	enum:ofp12_controller_role
OFPCR12_ROLE_SLAVE	src/Openflow/openflow-1.2.h	/^    OFPCR12_ROLE_SLAVE,       \/* Read-only access. *\/$/;"	e	enum:ofp12_controller_role
OFPCRR_CONFIG	src/Openflow/openflow-1.4.h	/^    OFPCRR_CONFIG         = 1,  \/* Configuration changed on the switch. *\/$/;"	e	enum:ofp14_controller_role_reason
OFPCRR_EXPERIMENTER	src/Openflow/openflow-1.4.h	/^    OFPCRR_EXPERIMENTER   = 2,  \/* Experimenter data changed. *\/$/;"	e	enum:ofp14_controller_role_reason
OFPCRR_MASTER_REQUEST	src/Openflow/openflow-1.4.h	/^    OFPCRR_MASTER_REQUEST = 0,  \/* Another controller asked to be master. *\/$/;"	e	enum:ofp14_controller_role_reason
OFPC_ARP_MATCH_IP	src/Openflow/openflow-common.h	/^    OFPC_ARP_MATCH_IP   = 1 << 7   \/* Match IP addresses in ARP$/;"	e	enum:ofp_capabilities
OFPC_FLOW_STATS	src/Openflow/openflow-common.h	/^    OFPC_FLOW_STATS     = 1 << 0,  \/* Flow statistics. *\/$/;"	e	enum:ofp_capabilities
OFPC_IP_REASM	src/Openflow/openflow-common.h	/^    OFPC_IP_REASM       = 1 << 5,  \/* Can reassemble IP fragments. *\/$/;"	e	enum:ofp_capabilities
OFPC_PORT_STATS	src/Openflow/openflow-common.h	/^    OFPC_PORT_STATS     = 1 << 2,  \/* Port statistics. *\/$/;"	e	enum:ofp_capabilities
OFPC_QUEUE_STATS	src/Openflow/openflow-common.h	/^    OFPC_QUEUE_STATS    = 1 << 6,  \/* Queue statistics. *\/$/;"	e	enum:ofp_capabilities
OFPC_TABLE_STATS	src/Openflow/openflow-common.h	/^    OFPC_TABLE_STATS    = 1 << 1,  \/* Table statistics. *\/$/;"	e	enum:ofp_capabilities
OFPET12_EXPERIMENTER	src/Openflow/openflow-1.2.h	59;"	d
OFPFC_ADD	src/Openflow/openflow-common.h	/^    OFPFC_ADD,              \/* New flow. *\/$/;"	e	enum:ofp_flow_mod_command
OFPFC_DELETE	src/Openflow/openflow-common.h	/^    OFPFC_DELETE,           \/* Delete all matching flows. *\/$/;"	e	enum:ofp_flow_mod_command
OFPFC_DELETE_STRICT	src/Openflow/openflow-common.h	/^    OFPFC_DELETE_STRICT     \/* Strictly match wildcards and priority. *\/$/;"	e	enum:ofp_flow_mod_command
OFPFC_MODIFY	src/Openflow/openflow-common.h	/^    OFPFC_MODIFY,           \/* Modify all matching flows. *\/$/;"	e	enum:ofp_flow_mod_command
OFPFC_MODIFY_STRICT	src/Openflow/openflow-common.h	/^    OFPFC_MODIFY_STRICT,    \/* Modify entry strictly matching wildcards *\/$/;"	e	enum:ofp_flow_mod_command
OFPFF10_EMERG	src/Openflow/openflow-1.0.h	/^    OFPFF10_EMERG       = 1 << 2 \/* Part of "emergency flow cache". *\/$/;"	e	enum:ofp10_flow_mod_flags
OFPFF12_RESET_COUNTS	src/Openflow/openflow-1.2.h	/^    OFPFF12_RESET_COUNTS  = 1 << 2   \/* Reset flow packet and byte counts. *\/$/;"	e	enum:ofp12_flow_mod_flags
OFPFF13_NO_BYT_COUNTS	src/Openflow/openflow-1.3.h	/^    OFPFF13_NO_BYT_COUNTS = 1 << 4  \/* Don't keep track of byte count. *\/$/;"	e	enum:ofp13_flow_mod_flags
OFPFF13_NO_PKT_COUNTS	src/Openflow/openflow-1.3.h	/^    OFPFF13_NO_PKT_COUNTS = 1 << 3, \/* Don't keep track of packet count. *\/$/;"	e	enum:ofp13_flow_mod_flags
OFPFF_CHECK_OVERLAP	src/Openflow/openflow-common.h	/^    OFPFF_CHECK_OVERLAP = 1 << 1,  \/* Check for overlapping entries first. *\/$/;"	e	enum:ofp_flow_mod_flags
OFPFF_SEND_FLOW_REM	src/Openflow/openflow-common.h	/^    OFPFF_SEND_FLOW_REM = 1 << 0,  \/* Send flow removed message when flow$/;"	e	enum:ofp_flow_mod_flags
OFPFMC14_ADD	src/Openflow/openflow-1.4.h	/^    OFPFMC14_ADD = 0, \/* New flow monitor. *\/$/;"	e	enum:ofp14_flow_monitor_command
OFPFMC14_DELETE	src/Openflow/openflow-1.4.h	/^    OFPFMC14_DELETE = 2, \/* Delete\/cancel existing flow monitor. *\/$/;"	e	enum:ofp14_flow_monitor_command
OFPFMC14_MODIFY	src/Openflow/openflow-1.4.h	/^    OFPFMC14_MODIFY = 1, \/* Modify existing flow monitor. *\/$/;"	e	enum:ofp14_flow_monitor_command
OFPFMF11_DL_DST	src/Openflow/openflow-1.1.h	/^    OFPFMF11_DL_DST      = 1 << 12, \/* Ethernet destination address. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_DL_SRC	src/Openflow/openflow-1.1.h	/^    OFPFMF11_DL_SRC      = 1 << 11, \/* Ethernet source address. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_DL_TYPE	src/Openflow/openflow-1.1.h	/^    OFPFMF11_DL_TYPE     = 1 << 3,  \/* Ethernet frame type. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_DL_VLAN	src/Openflow/openflow-1.1.h	/^    OFPFMF11_DL_VLAN     = 1 << 1,  \/* VLAN id. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_DL_VLAN_PCP	src/Openflow/openflow-1.1.h	/^    OFPFMF11_DL_VLAN_PCP = 1 << 2,  \/* VLAN priority. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_IN_PORT	src/Openflow/openflow-1.1.h	/^    OFPFMF11_IN_PORT     = 1 << 0,  \/* Switch input port. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_METADATA	src/Openflow/openflow-1.1.h	/^    OFPFMF11_METADATA    = 1 << 15, \/* Metadata passed between tables. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_MPLS_LABEL	src/Openflow/openflow-1.1.h	/^    OFPFMF11_MPLS_LABEL  = 1 << 8,  \/* MPLS label. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_MPLS_TC	src/Openflow/openflow-1.1.h	/^    OFPFMF11_MPLS_TC     = 1 << 9,  \/* MPLS TC. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_NW_DST	src/Openflow/openflow-1.1.h	/^    OFPFMF11_NW_DST      = 1 << 14, \/* IP destination address. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_NW_PROTO	src/Openflow/openflow-1.1.h	/^    OFPFMF11_NW_PROTO    = 1 << 5,  \/* IP protocol. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_NW_SRC	src/Openflow/openflow-1.1.h	/^    OFPFMF11_NW_SRC      = 1 << 13, \/* IP source address. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_NW_TOS	src/Openflow/openflow-1.1.h	/^    OFPFMF11_NW_TOS      = 1 << 4,  \/* IP ToS (DSCP field, 6 bits). *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_TP_DST	src/Openflow/openflow-1.1.h	/^    OFPFMF11_TP_DST      = 1 << 7,  \/* TCP\/UDP\/SCTP destination port. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_TP_SRC	src/Openflow/openflow-1.1.h	/^    OFPFMF11_TP_SRC      = 1 << 6,  \/* TCP\/UDP\/SCTP source port. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_TYPE	src/Openflow/openflow-1.1.h	/^    OFPFMF11_TYPE        = 1 << 10, \/* Match type. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF14_ADD	src/Openflow/openflow-1.4.h	/^    OFPFMF14_ADD = 1 << 1,         \/* New matching flows as they are added. *\/$/;"	e	enum:ofp14_flow_monitor_flags
OFPFMF14_INITIAL	src/Openflow/openflow-1.4.h	/^    OFPFMF14_INITIAL = 1 << 0,     \/* Initially matching flows. *\/$/;"	e	enum:ofp14_flow_monitor_flags
OFPFMF14_INSTRUCTIONS	src/Openflow/openflow-1.4.h	/^    OFPFMF14_INSTRUCTIONS = 1 << 4, \/* If set, instructions are included. *\/$/;"	e	enum:ofp14_flow_monitor_flags
OFPFMF14_MODIFY	src/Openflow/openflow-1.4.h	/^    OFPFMF14_MODIFY = 1 << 3,      \/* Matching flows as they are changed. *\/$/;"	e	enum:ofp14_flow_monitor_flags
OFPFMF14_NO_ABBREV	src/Openflow/openflow-1.4.h	/^    OFPFMF14_NO_ABBREV = 1 << 5,    \/* If set, include own changes in full. *\/$/;"	e	enum:ofp14_flow_monitor_flags
OFPFMF14_ONLY_OWN	src/Openflow/openflow-1.4.h	/^    OFPFMF14_ONLY_OWN = 1 << 6,     \/* If set, don't include other controllers.$/;"	e	enum:ofp14_flow_monitor_flags
OFPFMF14_REMOVED	src/Openflow/openflow-1.4.h	/^    OFPFMF14_REMOVED = 1 << 2,     \/* Old matching flows as they are removed. *\/$/;"	e	enum:ofp14_flow_monitor_flags
OFPFW10_ALL	src/Openflow/openflow-1.0.h	/^    OFPFW10_ALL = ((1 << 22) - 1)$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_DL_DST	src/Openflow/openflow-1.0.h	/^    OFPFW10_DL_DST     = 1 << 3,  \/* Ethernet destination address. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_DL_SRC	src/Openflow/openflow-1.0.h	/^    OFPFW10_DL_SRC     = 1 << 2,  \/* Ethernet source address. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_DL_TYPE	src/Openflow/openflow-1.0.h	/^    OFPFW10_DL_TYPE    = 1 << 4,  \/* Ethernet frame type. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_DL_VLAN	src/Openflow/openflow-1.0.h	/^    OFPFW10_DL_VLAN    = 1 << 1,  \/* VLAN vid. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_DL_VLAN_PCP	src/Openflow/openflow-1.0.h	/^    OFPFW10_DL_VLAN_PCP = 1 << 20, \/* VLAN priority. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_ICMP_CODE	src/Openflow/openflow-1.0.h	226;"	d
OFPFW10_ICMP_TYPE	src/Openflow/openflow-1.0.h	225;"	d
OFPFW10_IN_PORT	src/Openflow/openflow-1.0.h	/^    OFPFW10_IN_PORT    = 1 << 0,  \/* Switch input port. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_DST_ALL	src/Openflow/openflow-1.0.h	/^    OFPFW10_NW_DST_ALL = 32 << OFPFW10_NW_DST_SHIFT,$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_DST_BITS	src/Openflow/openflow-1.0.h	/^    OFPFW10_NW_DST_BITS = 6,$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_DST_MASK	src/Openflow/openflow-1.0.h	/^    OFPFW10_NW_DST_MASK = (((1 << OFPFW10_NW_DST_BITS) - 1)$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_DST_SHIFT	src/Openflow/openflow-1.0.h	/^    OFPFW10_NW_DST_SHIFT = 14,$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_PROTO	src/Openflow/openflow-1.0.h	/^    OFPFW10_NW_PROTO   = 1 << 5,  \/* IP protocol. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_SRC_ALL	src/Openflow/openflow-1.0.h	/^    OFPFW10_NW_SRC_ALL = 32 << OFPFW10_NW_SRC_SHIFT,$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_SRC_BITS	src/Openflow/openflow-1.0.h	/^    OFPFW10_NW_SRC_BITS = 6,$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_SRC_MASK	src/Openflow/openflow-1.0.h	/^    OFPFW10_NW_SRC_MASK = (((1 << OFPFW10_NW_SRC_BITS) - 1)$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_SRC_SHIFT	src/Openflow/openflow-1.0.h	/^    OFPFW10_NW_SRC_SHIFT = 8,$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_TOS	src/Openflow/openflow-1.0.h	/^    OFPFW10_NW_TOS = 1 << 21, \/* IP ToS (DSCP field, 6 bits). *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_TP_DST	src/Openflow/openflow-1.0.h	/^    OFPFW10_TP_DST     = 1 << 7,  \/* TCP\/UDP destination port. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_TP_SRC	src/Openflow/openflow-1.0.h	/^    OFPFW10_TP_SRC     = 1 << 6,  \/* TCP\/UDP source port. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW11_ALL	src/Openflow/openflow-1.1.h	/^    OFPFW11_ALL           = ((1 << 10) - 1)$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_DL_TYPE	src/Openflow/openflow-1.1.h	/^    OFPFW11_DL_TYPE     = 1 << 3,  \/* Ethernet frame type. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_DL_VLAN	src/Openflow/openflow-1.1.h	/^    OFPFW11_DL_VLAN     = 1 << 1,  \/* VLAN id. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_DL_VLAN_PCP	src/Openflow/openflow-1.1.h	/^    OFPFW11_DL_VLAN_PCP = 1 << 2,  \/* VLAN priority. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_IN_PORT	src/Openflow/openflow-1.1.h	/^    OFPFW11_IN_PORT     = 1 << 0,  \/* Switch input port. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_MPLS_LABEL	src/Openflow/openflow-1.1.h	/^    OFPFW11_MPLS_LABEL  = 1 << 8,  \/* MPLS label. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_MPLS_TC	src/Openflow/openflow-1.1.h	/^    OFPFW11_MPLS_TC     = 1 << 9,  \/* MPLS TC. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_NW_PROTO	src/Openflow/openflow-1.1.h	/^    OFPFW11_NW_PROTO    = 1 << 5,  \/* IP protocol. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_NW_TOS	src/Openflow/openflow-1.1.h	/^    OFPFW11_NW_TOS      = 1 << 4,  \/* IP ToS (DSCP field, 6 bits). *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_TP_DST	src/Openflow/openflow-1.1.h	/^    OFPFW11_TP_DST      = 1 << 7,  \/* TCP\/UDP\/SCTP destination port. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_TP_SRC	src/Openflow/openflow-1.1.h	/^    OFPFW11_TP_SRC      = 1 << 6,  \/* TCP\/UDP\/SCTP source port. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPG11_ALL	src/Openflow/openflow-1.1.h	/^    OFPG11_ALL        = 0xfffffffc,  \/* Represents all groups for group delete$/;"	e	enum:ofp11_group
OFPG11_ANY	src/Openflow/openflow-1.1.h	/^    OFPG11_ANY        = 0xffffffff   \/* Wildcard group used only for flow stats$/;"	e	enum:ofp11_group
OFPG11_MAX	src/Openflow/openflow-1.1.h	/^    OFPG11_MAX        = 0xffffff00,$/;"	e	enum:ofp11_group
OFPG15_BUCKET_ALL	src/Openflow/openflow-1.5.h	/^    OFPG15_BUCKET_ALL   = 0xffffffff  \/* All action buckets in a group,$/;"	e	enum:ofp15_group_bucket
OFPG15_BUCKET_FIRST	src/Openflow/openflow-1.5.h	/^    OFPG15_BUCKET_FIRST = 0xfffffffd, \/* First bucket ID in the list of action$/;"	e	enum:ofp15_group_bucket
OFPG15_BUCKET_LAST	src/Openflow/openflow-1.5.h	/^    OFPG15_BUCKET_LAST  = 0xfffffffe, \/* Last bucket ID in the list of action$/;"	e	enum:ofp15_group_bucket
OFPG15_BUCKET_MAX	src/Openflow/openflow-1.5.h	/^    OFPG15_BUCKET_MAX   = 0xffffff00, \/* Last usable bucket ID *\/$/;"	e	enum:ofp15_group_bucket
OFPGBPT15_EXPERIMENTER	src/Openflow/openflow-1.5.h	/^    OFPGBPT15_EXPERIMENTER      = 0xFFFF,  \/* Experimenter defined. *\/$/;"	e	enum:ofp15_group_bucket_prop_type
OFPGBPT15_WATCH_GROUP	src/Openflow/openflow-1.5.h	/^    OFPGBPT15_WATCH_GROUP            = 2,  \/* Fast failover groups only. *\/$/;"	e	enum:ofp15_group_bucket_prop_type
OFPGBPT15_WATCH_PORT	src/Openflow/openflow-1.5.h	/^    OFPGBPT15_WATCH_PORT             = 1,  \/* Fast failover groups only. *\/$/;"	e	enum:ofp15_group_bucket_prop_type
OFPGBPT15_WEIGHT	src/Openflow/openflow-1.5.h	/^    OFPGBPT15_WEIGHT                 = 0,  \/* Select groups only. *\/$/;"	e	enum:ofp15_group_bucket_prop_type
OFPGC11_ADD	src/Openflow/openflow-1.1.h	/^    OFPGC11_ADD,          \/* New group. *\/$/;"	e	enum:ofp11_group_mod_command
OFPGC11_DELETE	src/Openflow/openflow-1.1.h	/^    OFPGC11_DELETE,       \/* Delete all matching groups. *\/$/;"	e	enum:ofp11_group_mod_command
OFPGC11_MODIFY	src/Openflow/openflow-1.1.h	/^    OFPGC11_MODIFY,       \/* Modify all matching groups. *\/$/;"	e	enum:ofp11_group_mod_command
OFPGC15_ADD	src/Openflow/openflow-1.5.h	/^    OFPGC15_ADD    = 0,       \/* New group. *\/$/;"	e	enum:ofp15_group_mod_command
OFPGC15_DELETE	src/Openflow/openflow-1.5.h	/^    OFPGC15_DELETE = 2,       \/* Delete all matching groups. *\/$/;"	e	enum:ofp15_group_mod_command
OFPGC15_INSERT_BUCKET	src/Openflow/openflow-1.5.h	/^    OFPGC15_INSERT_BUCKET = 3,\/* Insert action buckets to the already available$/;"	e	enum:ofp15_group_mod_command
OFPGC15_MODIFY	src/Openflow/openflow-1.5.h	/^    OFPGC15_MODIFY = 1,       \/* Modify all matching groups. *\/$/;"	e	enum:ofp15_group_mod_command
OFPGC15_REMOVE_BUCKET	src/Openflow/openflow-1.5.h	/^    OFPGC15_REMOVE_BUCKET = 5,\/* Remove all action buckets or any specific$/;"	e	enum:ofp15_group_mod_command
OFPGFC12_CHAINING	src/Openflow/openflow-1.2.h	/^    OFPGFC12_CHAINING        = 1 << 2, \/* Support chaining groups *\/$/;"	e	enum:ofp12_group_capabilities
OFPGFC12_CHAINING_CHECKS	src/Openflow/openflow-1.2.h	/^    OFPGFC12_CHAINING_CHECKS = 1 << 3, \/* Check chaining for loops and delete *\/$/;"	e	enum:ofp12_group_capabilities
OFPGFC12_SELECT_LIVENESS	src/Openflow/openflow-1.2.h	/^    OFPGFC12_SELECT_LIVENESS = 1 << 1, \/* Support liveness for select groups *\/$/;"	e	enum:ofp12_group_capabilities
OFPGFC12_SELECT_WEIGHT	src/Openflow/openflow-1.2.h	/^    OFPGFC12_SELECT_WEIGHT   = 1 << 0, \/* Support weight for select groups *\/$/;"	e	enum:ofp12_group_capabilities
OFPGFC_CHAINING	src/Openflow/openflow-common.h	/^    OFPGFC_CHAINING        = 1 << 2, \/* Support chaining groups *\/$/;"	e	enum:ofp_group_capabilities
OFPGFC_CHAINING_CHECKS	src/Openflow/openflow-common.h	/^    OFPGFC_CHAINING_CHECKS = 1 << 3, \/* Check chaining for loops and delete *\/$/;"	e	enum:ofp_group_capabilities
OFPGFC_SELECT_LIVENESS	src/Openflow/openflow-common.h	/^    OFPGFC_SELECT_LIVENESS = 1 << 1, \/* Support liveness for select groups *\/$/;"	e	enum:ofp_group_capabilities
OFPGFC_SELECT_WEIGHT	src/Openflow/openflow-common.h	/^    OFPGFC_SELECT_WEIGHT   = 1 << 0, \/* Support weight for select groups *\/$/;"	e	enum:ofp_group_capabilities
OFPGPT15_EXPERIMENTER	src/Openflow/openflow-1.5.h	/^    OFPGPT15_EXPERIMENTER      = 0xFFFF,  \/* Experimenter defined. *\/$/;"	e	enum:ofp_group_prop_type
OFPGT11_ALL	src/Openflow/openflow-1.1.h	/^    OFPGT11_ALL,      \/* All (multicast\/broadcast) group. *\/$/;"	e	enum:ofp11_group_type
OFPGT11_FF	src/Openflow/openflow-1.1.h	/^    OFPGT11_FF        \/* Fast failover group. *\/$/;"	e	enum:ofp11_group_type
OFPGT11_INDIRECT	src/Openflow/openflow-1.1.h	/^    OFPGT11_INDIRECT, \/* Indirect group. *\/$/;"	e	enum:ofp11_group_type
OFPGT11_SELECT	src/Openflow/openflow-1.1.h	/^    OFPGT11_SELECT,   \/* Select group. *\/$/;"	e	enum:ofp11_group_type
OFPGT12_N_TYPES	src/Openflow/openflow-1.2.h	151;"	d
OFPG_ALL	src/Openflow/openflow-common.h	/^    OFPG_ALL        = 0xfffffffc,  \/* All groups, for group delete commands. *\/$/;"	e	enum:ofp_group
OFPG_ANY	src/Openflow/openflow-common.h	/^    OFPG_ANY        = 0xffffffff   \/* Wildcard, for flow stats requests. *\/$/;"	e	enum:ofp_group
OFPG_MAX	src/Openflow/openflow-common.h	/^    OFPG_MAX        = 0xffffff00,$/;"	e	enum:ofp_group
OFPHET_VERSIONBITMAP	src/Openflow/openflow-common.h	/^    OFPHET_VERSIONBITMAP          = 1, \/* Bitmap of version supported. *\/$/;"	e	enum:ofp_hello_elem_type
OFPIEH12_AUTH	src/Openflow/openflow-1.2.h	/^    OFPIEH12_AUTH   = 1 << 2,   \/* Authentication header present. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_DEST	src/Openflow/openflow-1.2.h	/^    OFPIEH12_DEST   = 1 << 3,   \/* 1 or 2 dest headers present. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_ESP	src/Openflow/openflow-1.2.h	/^    OFPIEH12_ESP    = 1 << 1,   \/* Encrypted Sec Payload header present. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_FRAG	src/Openflow/openflow-1.2.h	/^    OFPIEH12_FRAG   = 1 << 4,   \/* Fragment header present. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_HOP	src/Openflow/openflow-1.2.h	/^    OFPIEH12_HOP    = 1 << 6,   \/* Hop-by-hop header present. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_NONEXT	src/Openflow/openflow-1.2.h	/^    OFPIEH12_NONEXT = 1 << 0,   \/* "No next header" encountered. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_ROUTER	src/Openflow/openflow-1.2.h	/^    OFPIEH12_ROUTER = 1 << 5,   \/* Router header present. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_UNREP	src/Openflow/openflow-1.2.h	/^    OFPIEH12_UNREP  = 1 << 7,   \/* Unexpected repeats encountered. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_UNSEQ	src/Openflow/openflow-1.2.h	/^    OFPIEH12_UNSEQ  = 1 << 8    \/* Unexpected sequencing encountered. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIT11_APPLY_ACTIONS	src/Openflow/openflow-1.1.h	/^    OFPIT11_APPLY_ACTIONS = 4,     \/* Applies the action(s) immediately *\/$/;"	e	enum:ofp11_instruction_type
OFPIT11_CLEAR_ACTIONS	src/Openflow/openflow-1.1.h	/^    OFPIT11_CLEAR_ACTIONS = 5,     \/* Clears all actions from the datapath$/;"	e	enum:ofp11_instruction_type
OFPIT11_EXPERIMENTER	src/Openflow/openflow-1.1.h	/^    OFPIT11_EXPERIMENTER = 0xFFFF  \/* Experimenter instruction *\/$/;"	e	enum:ofp11_instruction_type
OFPIT11_GOTO_TABLE	src/Openflow/openflow-1.1.h	/^    OFPIT11_GOTO_TABLE = 1,        \/* Setup the next table in the lookup$/;"	e	enum:ofp11_instruction_type
OFPIT11_WRITE_ACTIONS	src/Openflow/openflow-1.1.h	/^    OFPIT11_WRITE_ACTIONS = 3,     \/* Write the action(s) onto the datapath$/;"	e	enum:ofp11_instruction_type
OFPIT11_WRITE_METADATA	src/Openflow/openflow-1.1.h	/^    OFPIT11_WRITE_METADATA = 2,    \/* Setup the metadata field for use later$/;"	e	enum:ofp11_instruction_type
OFPIT13_METER	src/Openflow/openflow-1.3.h	/^    OFPIT13_METER = 6           \/* Apply meter (rate limiter) *\/$/;"	e	enum:ofp13_instruction_type
OFPM13_ALL	src/Openflow/openflow-1.3.h	/^    OFPM13_ALL        = 0xffffffff, \/* Represents all meters for stat requests$/;"	e	enum:ofp13_meter
OFPM13_CONTROLLER	src/Openflow/openflow-1.3.h	/^    OFPM13_CONTROLLER = 0xfffffffe, \/* Meter for controller connection. *\/$/;"	e	enum:ofp13_meter
OFPM13_MAX	src/Openflow/openflow-1.3.h	/^    OFPM13_MAX        = 0xffff0000,$/;"	e	enum:ofp13_meter
OFPM13_SLOWPATH	src/Openflow/openflow-1.3.h	/^    OFPM13_SLOWPATH   = 0xfffffffd, \/* Meter for slow datapath. *\/$/;"	e	enum:ofp13_meter
OFPMBT13_DROP	src/Openflow/openflow-1.3.h	/^    OFPMBT13_DROP         = 1,     \/* Drop packet. *\/$/;"	e	enum:ofp13_meter_band_type
OFPMBT13_DSCP_REMARK	src/Openflow/openflow-1.3.h	/^    OFPMBT13_DSCP_REMARK  = 2,     \/* Remark DSCP in the IP header. *\/$/;"	e	enum:ofp13_meter_band_type
OFPMBT13_EXPERIMENTER	src/Openflow/openflow-1.3.h	/^    OFPMBT13_EXPERIMENTER = 0xFFFF \/* Experimenter meter band. *\/$/;"	e	enum:ofp13_meter_band_type
OFPMC13_ADD	src/Openflow/openflow-1.3.h	/^    OFPMC13_ADD,           \/* New meter. *\/$/;"	e	enum:ofp13_meter_mod_command
OFPMC13_DELETE	src/Openflow/openflow-1.3.h	/^    OFPMC13_DELETE         \/* Delete specified meter. *\/$/;"	e	enum:ofp13_meter_mod_command
OFPMC13_MODIFY	src/Openflow/openflow-1.3.h	/^    OFPMC13_MODIFY,        \/* Modify specified meter. *\/$/;"	e	enum:ofp13_meter_mod_command
OFPMF13_BURST	src/Openflow/openflow-1.3.h	/^    OFPMF13_BURST   = 1 << 2,   \/* Do burst size. *\/$/;"	e	enum:ofp13_meter_flags
OFPMF13_KBPS	src/Openflow/openflow-1.3.h	/^    OFPMF13_KBPS    = 1 << 0,   \/* Rate value in kb\/s (kilo-bit per second). *\/$/;"	e	enum:ofp13_meter_flags
OFPMF13_PKTPS	src/Openflow/openflow-1.3.h	/^    OFPMF13_PKTPS   = 1 << 1,   \/* Rate value in packet\/sec. *\/$/;"	e	enum:ofp13_meter_flags
OFPMF13_STATS	src/Openflow/openflow-1.3.h	/^    OFPMF13_STATS   = 1 << 3    \/* Collect statistics. *\/$/;"	e	enum:ofp13_meter_flags
OFPMPF13_REQ_MORE	src/Openflow/openflow-1.3.h	/^    OFPMPF13_REQ_MORE = 1 << 0 \/* More requests to follow. *\/$/;"	e	enum:ofp13_multipart_request_flags
OFPMT11_STANDARD_LENGTH	src/Openflow/openflow-1.1.h	/^OFP_ASSERT(sizeof(struct ofp11_match) == OFPMT11_STANDARD_LENGTH);$/;"	v
OFPMT11_STANDARD_LENGTH	src/Openflow/openflow-1.1.h	188;"	d
OFPMT_OXM	src/Openflow/openflow-common.h	/^    OFPMT_OXM = 1,              \/* OpenFlow Extensible Match *\/$/;"	e	enum:ofp_match_type
OFPMT_STANDARD	src/Openflow/openflow-common.h	/^    OFPMT_STANDARD = 0,         \/* The match fields defined in the ofp11_match$/;"	e	enum:ofp_match_type
OFPP11_MAX	src/Openflow/openflow-1.1.h	71;"	d
OFPP11_OFFSET	src/Openflow/openflow-1.1.h	72;"	d
OFPPC10_ALL	src/Openflow/openflow-1.0.h	65;"	d
OFPPC10_NO_FLOOD	src/Openflow/openflow-1.0.h	/^    OFPPC10_NO_FLOOD     = 1 << 4, \/* Do not include port when flooding. *\/$/;"	e	enum:ofp10_port_config
OFPPC10_NO_RECV_STP	src/Openflow/openflow-1.0.h	/^    OFPPC10_NO_RECV_STP  = 1 << 3, \/* Drop received 802.1D STP packets. *\/$/;"	e	enum:ofp10_port_config
OFPPC10_NO_STP	src/Openflow/openflow-1.0.h	/^    OFPPC10_NO_STP       = 1 << 1, \/* Disable 802.1D spanning tree on port. *\/$/;"	e	enum:ofp10_port_config
OFPPC11_ALL	src/Openflow/openflow-1.1.h	83;"	d
OFPPC_NO_FWD	src/Openflow/openflow-common.h	/^    OFPPC_NO_FWD       = 1 << 5,  \/* Drop packets forwarded to port. *\/$/;"	e	enum:ofp_port_config
OFPPC_NO_PACKET_IN	src/Openflow/openflow-common.h	/^    OFPPC_NO_PACKET_IN = 1 << 6   \/* Do not send packet-in msgs for port. *\/$/;"	e	enum:ofp_port_config
OFPPC_NO_RECV	src/Openflow/openflow-common.h	/^    OFPPC_NO_RECV      = 1 << 2,  \/* Drop all packets received by port. *\/$/;"	e	enum:ofp_port_config
OFPPC_PORT_DOWN	src/Openflow/openflow-common.h	/^    OFPPC_PORT_DOWN    = 1 << 0,  \/* Port is administratively down. *\/$/;"	e	enum:ofp_port_config
OFPPDPT14_ETHERNET	src/Openflow/openflow-1.4.h	/^    OFPPDPT14_ETHERNET          = 0,      \/* Ethernet property. *\/$/;"	e	enum:ofp_port_desc_prop_type
OFPPDPT14_EXPERIMENTER	src/Openflow/openflow-1.4.h	/^    OFPPDPT14_EXPERIMENTER      = 0xFFFF, \/* Experimenter property. *\/$/;"	e	enum:ofp_port_desc_prop_type
OFPPDPT14_OPTICAL	src/Openflow/openflow-1.4.h	/^    OFPPDPT14_OPTICAL           = 1,      \/* Optical property. *\/$/;"	e	enum:ofp_port_desc_prop_type
OFPPF10_AUTONEG	src/Openflow/openflow-1.0.h	/^    OFPPF10_AUTONEG    = 1 << 9,  \/* Auto-negotiation. *\/$/;"	e	enum:ofp10_port_features
OFPPF10_COPPER	src/Openflow/openflow-1.0.h	/^    OFPPF10_COPPER     = 1 << 7,  \/* Copper medium. *\/$/;"	e	enum:ofp10_port_features
OFPPF10_FIBER	src/Openflow/openflow-1.0.h	/^    OFPPF10_FIBER      = 1 << 8,  \/* Fiber medium. *\/$/;"	e	enum:ofp10_port_features
OFPPF10_PAUSE	src/Openflow/openflow-1.0.h	/^    OFPPF10_PAUSE      = 1 << 10, \/* Pause. *\/$/;"	e	enum:ofp10_port_features
OFPPF10_PAUSE_ASYM	src/Openflow/openflow-1.0.h	/^    OFPPF10_PAUSE_ASYM = 1 << 11  \/* Asymmetric pause. *\/$/;"	e	enum:ofp10_port_features
OFPPF11_100GB_FD	src/Openflow/openflow-1.1.h	/^    OFPPF11_100GB_FD   = 1 << 8,  \/* 100 Gb full-duplex rate support. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_1TB_FD	src/Openflow/openflow-1.1.h	/^    OFPPF11_1TB_FD     = 1 << 9,  \/* 1 Tb full-duplex rate support. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_40GB_FD	src/Openflow/openflow-1.1.h	/^    OFPPF11_40GB_FD    = 1 << 7,  \/* 40 Gb full-duplex rate support. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_ALL	src/Openflow/openflow-1.1.h	107;"	d
OFPPF11_AUTONEG	src/Openflow/openflow-1.1.h	/^    OFPPF11_AUTONEG    = 1 << 13, \/* Auto-negotiation. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_COPPER	src/Openflow/openflow-1.1.h	/^    OFPPF11_COPPER     = 1 << 11, \/* Copper medium. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_FIBER	src/Openflow/openflow-1.1.h	/^    OFPPF11_FIBER      = 1 << 12, \/* Fiber medium. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_OTHER	src/Openflow/openflow-1.1.h	/^    OFPPF11_OTHER      = 1 << 10, \/* Other rate, not in the list. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_PAUSE	src/Openflow/openflow-1.1.h	/^    OFPPF11_PAUSE      = 1 << 14, \/* Pause. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_PAUSE_ASYM	src/Openflow/openflow-1.1.h	/^    OFPPF11_PAUSE_ASYM = 1 << 15  \/* Asymmetric pause. *\/$/;"	e	enum:ofp11_port_features
OFPPF_100MB_FD	src/Openflow/openflow-common.h	/^    OFPPF_100MB_FD   = 1 << 3,  \/* 100 Mb full-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_100MB_HD	src/Openflow/openflow-common.h	/^    OFPPF_100MB_HD   = 1 << 2,  \/* 100 Mb half-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_10GB_FD	src/Openflow/openflow-common.h	/^    OFPPF_10GB_FD    = 1 << 6,  \/* 10 Gb full-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_10MB_FD	src/Openflow/openflow-common.h	/^    OFPPF_10MB_FD    = 1 << 1,  \/* 10 Mb full-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_10MB_HD	src/Openflow/openflow-common.h	/^    OFPPF_10MB_HD    = 1 << 0,  \/* 10 Mb half-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_1GB_FD	src/Openflow/openflow-common.h	/^    OFPPF_1GB_FD     = 1 << 5,  \/* 1 Gb full-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_1GB_HD	src/Openflow/openflow-common.h	/^    OFPPF_1GB_HD     = 1 << 4,  \/* 1 Gb half-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPMPT14_ETHERNET	src/Openflow/openflow-1.4.h	/^    OFPPMPT14_ETHERNET          = 0,      \/* Ethernet property. *\/$/;"	e	enum:ofp14_port_mod_prop_type
OFPPMPT14_EXPERIMENTER	src/Openflow/openflow-1.4.h	/^    OFPPMPT14_EXPERIMENTER      = 0xFFFF, \/* Experimenter property. *\/$/;"	e	enum:ofp14_port_mod_prop_type
OFPPMPT14_OPTICAL	src/Openflow/openflow-1.4.h	/^    OFPPMPT14_OPTICAL           = 1,      \/* Optical property. *\/$/;"	e	enum:ofp14_port_mod_prop_type
OFPPR_ADD	src/Openflow/openflow-common.h	/^    OFPPR_ADD,              \/* The port was added. *\/$/;"	e	enum:ofp_port_reason
OFPPR_DELETE	src/Openflow/openflow-common.h	/^    OFPPR_DELETE,           \/* The port was removed. *\/$/;"	e	enum:ofp_port_reason
OFPPR_MODIFY	src/Openflow/openflow-common.h	/^    OFPPR_MODIFY            \/* Some attribute of the port has changed. *\/$/;"	e	enum:ofp_port_reason
OFPPS10_ALL	src/Openflow/openflow-1.0.h	84;"	d
OFPPS10_STP_BLOCK	src/Openflow/openflow-1.0.h	/^    OFPPS10_STP_BLOCK   = 3 << 8, \/* Not part of spanning tree. *\/$/;"	e	enum:ofp10_port_state
OFPPS10_STP_FORWARD	src/Openflow/openflow-1.0.h	/^    OFPPS10_STP_FORWARD = 2 << 8, \/* Learning and relaying frames. *\/$/;"	e	enum:ofp10_port_state
OFPPS10_STP_LEARN	src/Openflow/openflow-1.0.h	/^    OFPPS10_STP_LEARN   = 1 << 8, \/* Learning but not relaying frames. *\/$/;"	e	enum:ofp10_port_state
OFPPS10_STP_LISTEN	src/Openflow/openflow-1.0.h	/^    OFPPS10_STP_LISTEN  = 0 << 8, \/* Not learning or relaying frames. *\/$/;"	e	enum:ofp10_port_state
OFPPS10_STP_MASK	src/Openflow/openflow-1.0.h	/^    OFPPS10_STP_MASK    = 3 << 8  \/* Bit mask for OFPPS10_STP_* values. *\/$/;"	e	enum:ofp10_port_state
OFPPS11_ALL	src/Openflow/openflow-1.1.h	92;"	d
OFPPS11_BLOCKED	src/Openflow/openflow-1.1.h	/^    OFPPS11_BLOCKED      = 1 << 1,  \/* Port is blocked *\/$/;"	e	enum:ofp11_port_state
OFPPS11_LIVE	src/Openflow/openflow-1.1.h	/^    OFPPS11_LIVE         = 1 << 2,  \/* Live for Fast Failover Group. *\/$/;"	e	enum:ofp11_port_state
OFPPSPT14_ETHERNET	src/Openflow/openflow-1.4.h	/^    OFPPSPT14_ETHERNET          = 0,      \/* Ethernet property. *\/$/;"	e	enum:ofp14_port_stats_prop_type
OFPPSPT14_EXPERIMENTER	src/Openflow/openflow-1.4.h	/^    OFPPSPT14_EXPERIMENTER      = 0xFFFF, \/* Experimenter property. *\/$/;"	e	enum:ofp14_port_stats_prop_type
OFPPSPT14_OPTICAL	src/Openflow/openflow-1.4.h	/^    OFPPSPT14_OPTICAL           = 1,      \/* Optical property. *\/$/;"	e	enum:ofp14_port_stats_prop_type
OFPPS_LINK_DOWN	src/Openflow/openflow-common.h	/^    OFPPS_LINK_DOWN    = 1 << 0,  \/* No physical link present. *\/$/;"	e	enum:ofp_port_state
OFPP_ALL	src/Openflow/openflow-1.0.h	44;"	d
OFPP_ANY	src/Openflow/openflow-1.1.h	80;"	d
OFPP_CONTROLLER	src/Openflow/openflow-1.0.h	45;"	d
OFPP_FIRST_RESV	src/Openflow/openflow-1.0.h	34;"	d
OFPP_IN_PORT	src/Openflow/openflow-1.0.h	39;"	d
OFPP_LAST_RESV	src/Openflow/openflow-1.0.h	35;"	d
OFPP_LOCAL	src/Openflow/openflow-1.0.h	46;"	d
OFPP_MAX	src/Openflow/openflow-1.0.h	33;"	d
OFPP_NONE	src/Openflow/openflow-1.0.h	47;"	d
OFPP_NORMAL	src/Openflow/openflow-1.0.h	41;"	d
OFPP_TABLE	src/Openflow/openflow-1.0.h	40;"	d
OFPP_UNSET	src/Openflow/openflow-1.0.h	38;"	d
OFPQT_EXPERIMENTER	src/Openflow/openflow-common.h	/^    OFPQT_EXPERIMENTER = 0xffff, \/* Experimenter defined property. *\/$/;"	e	enum:ofp_queue_properties
OFPQT_MAX_RATE	src/Openflow/openflow-common.h	/^    OFPQT_MAX_RATE = 2,          \/* Maximum guaranteed rate. *\/$/;"	e	enum:ofp_queue_properties
OFPQT_MIN_RATE	src/Openflow/openflow-common.h	/^    OFPQT_MIN_RATE = 1,          \/* Minimum datarate guaranteed. *\/$/;"	e	enum:ofp_queue_properties
OFPQ_ALL	src/Openflow/openflow-1.0.h	391;"	d
OFPRPT_EXPERIMENTER	src/Openflow/openflow-1.4.h	/^    OFPRPT_EXPERIMENTER         = 0xFFFF, \/* Experimenter property. *\/$/;"	e	enum:ofp14_role_prop_type
OFPRR_DELETE	src/Openflow/openflow-common.h	/^    OFPRR_DELETE,               \/* Evicted by a DELETE flow mod. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPRR_EVICTION	src/Openflow/openflow-common.h	/^    OFPRR_EVICTION,             \/* Switch eviction to free resources. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPRR_GROUP_DELETE	src/Openflow/openflow-common.h	/^    OFPRR_GROUP_DELETE,         \/* Group was removed. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPRR_HARD_TIMEOUT	src/Openflow/openflow-common.h	/^    OFPRR_HARD_TIMEOUT,         \/* Time exceeded hard_timeout. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPRR_IDLE_TIMEOUT	src/Openflow/openflow-common.h	/^    OFPRR_IDLE_TIMEOUT,         \/* Flow idle time exceeded idle_timeout. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPRR_METER_DELETE	src/Openflow/openflow-common.h	/^    OFPRR_METER_DELETE,         \/* Meter was removed. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPR_ACTION	src/Openflow/openflow-common.h	/^    OFPR_ACTION,            \/* Action explicitly output to controller. *\/$/;"	e	enum:ofp_packet_in_reason
OFPR_ACTION_SET	src/Openflow/openflow-common.h	/^    OFPR_ACTION_SET,        \/* Output to controller in action set *\/$/;"	e	enum:ofp_packet_in_reason
OFPR_GROUP	src/Openflow/openflow-common.h	/^    OFPR_GROUP,             \/* Output to controller in group bucket *\/$/;"	e	enum:ofp_packet_in_reason
OFPR_INVALID_TTL	src/Openflow/openflow-common.h	/^    OFPR_INVALID_TTL,       \/* Packet has invalid TTL. *\/$/;"	e	enum:ofp_packet_in_reason
OFPR_NO_MATCH	src/Openflow/openflow-common.h	/^    OFPR_NO_MATCH,          \/* No matching flow. *\/$/;"	e	enum:ofp_packet_in_reason
OFPR_N_REASONS	src/Openflow/openflow-common.h	/^    OFPR_N_REASONS$/;"	e	enum:ofp_packet_in_reason
OFPR_PACKET_OUT	src/Openflow/openflow-common.h	/^    OFPR_PACKET_OUT,        \/* Output to controller in packet-out *\/$/;"	e	enum:ofp_packet_in_reason
OFPSF_REPLY_MORE	src/Openflow/openflow-common.h	/^    OFPSF_REPLY_MORE  = 1 << 0  \/* More replies to follow. *\/$/;"	e	enum:ofp_stats_reply_flags
OFPTC11_TABLE_MISS_CONTINUE	src/Openflow/openflow-common.h	/^    OFPTC11_TABLE_MISS_CONTINUE   = 1 << 0, \/* Go to next table, like OF1.0. *\/$/;"	e	enum:ofp_table_config
OFPTC11_TABLE_MISS_CONTROLLER	src/Openflow/openflow-common.h	/^    OFPTC11_TABLE_MISS_CONTROLLER = 0 << 0, \/* Send to controller. *\/$/;"	e	enum:ofp_table_config
OFPTC11_TABLE_MISS_DROP	src/Openflow/openflow-common.h	/^    OFPTC11_TABLE_MISS_DROP       = 2 << 0, \/* Drop the packet. *\/$/;"	e	enum:ofp_table_config
OFPTC11_TABLE_MISS_MASK	src/Openflow/openflow-common.h	/^    OFPTC11_TABLE_MISS_MASK       = 3 << 0,$/;"	e	enum:ofp_table_config
OFPTC13_DEPRECATED_MASK	src/Openflow/openflow-1.3.h	/^    OFPTC13_DEPRECATED_MASK = 3  \/* Deprecated bits *\/$/;"	e	enum:ofp13_table_config
OFPTC14_EVICTION	src/Openflow/openflow-common.h	/^    OFPTC14_EVICTION              = 1 << 2, \/* Allow table to evict flows. *\/$/;"	e	enum:ofp_table_config
OFPTC14_VACANCY_EVENTS	src/Openflow/openflow-common.h	/^    OFPTC14_VACANCY_EVENTS        = 1 << 3, \/* Enable vacancy events. *\/$/;"	e	enum:ofp_table_config
OFPTFPT13_APPLY_ACTIONS	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_APPLY_ACTIONS        = 6, \/* Apply Actions property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_APPLY_ACTIONS_MISS	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_APPLY_ACTIONS_MISS   = 7, \/* Apply Actions for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_APPLY_SETFIELD	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_APPLY_SETFIELD       = 14, \/* Apply Set-Field property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_APPLY_SETFIELD_MISS	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_APPLY_SETFIELD_MISS  = 15, \/* Apply Set-Field for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_EXPERIMENTER	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_EXPERIMENTER         = 0xFFFE, \/* Experimenter property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_EXPERIMENTER_MISS	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_EXPERIMENTER_MISS    = 0xFFFF, \/* Experimenter for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_INSTRUCTIONS	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_INSTRUCTIONS         = 0, \/* Instructions property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_INSTRUCTIONS_MISS	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_INSTRUCTIONS_MISS    = 1, \/* Instructions for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_MATCH	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_MATCH                = 8, \/* Match property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_NEXT_TABLES	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_NEXT_TABLES          = 2, \/* Next Table property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_NEXT_TABLES_MISS	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_NEXT_TABLES_MISS     = 3, \/* Next Table for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_WILDCARDS	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_WILDCARDS            = 10, \/* Wildcards property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_WRITE_ACTIONS	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_WRITE_ACTIONS        = 4, \/* Write Actions property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_WRITE_ACTIONS_MISS	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_WRITE_ACTIONS_MISS   = 5, \/* Write Actions for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_WRITE_SETFIELD	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_WRITE_SETFIELD       = 12, \/* Write Set-Field property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_WRITE_SETFIELD_MISS	src/Openflow/openflow-1.3.h	/^    OFPTFPT13_WRITE_SETFIELD_MISS  = 13, \/* Write Set-Field for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT_EXPERIMENTER_MASTER	src/Openflow/openflow-1.4.h	/^    OFPTFPT_EXPERIMENTER_MASTER   = 0xFFFF, \/* Experimenter for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPTFPT_EXPERIMENTER_SLAVE	src/Openflow/openflow-1.4.h	/^    OFPTFPT_EXPERIMENTER_SLAVE    = 0xFFFE, \/* Experimenter for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPTMPEF14_IMPORTANCE	src/Openflow/openflow-1.4.h	/^    OFPTMPEF14_IMPORTANCE      = 1 << 1,     \/* Using flow entry importance. *\/$/;"	e	enum:ofp14_table_mod_prop_eviction_flag
OFPTMPEF14_LIFETIME	src/Openflow/openflow-1.4.h	/^    OFPTMPEF14_LIFETIME        = 1 << 2,     \/* Using flow entry lifetime. *\/$/;"	e	enum:ofp14_table_mod_prop_eviction_flag
OFPTMPEF14_OTHER	src/Openflow/openflow-1.4.h	/^    OFPTMPEF14_OTHER           = 1 << 0,     \/* Using other factors. *\/$/;"	e	enum:ofp14_table_mod_prop_eviction_flag
OFPTMPT14_EVICTION	src/Openflow/openflow-1.4.h	/^    OFPTMPT14_EVICTION               = 0x2,    \/* Eviction property. *\/$/;"	e	enum:ofp14_table_mod_prop_type
OFPTMPT14_EXPERIMENTER	src/Openflow/openflow-1.4.h	/^    OFPTMPT14_EXPERIMENTER           = 0xFFFF, \/* Experimenter property. *\/$/;"	e	enum:ofp14_table_mod_prop_type
OFPTMPT14_VACANCY	src/Openflow/openflow-1.4.h	/^    OFPTMPT14_VACANCY                = 0x3,    \/* Vacancy property. *\/$/;"	e	enum:ofp14_table_mod_prop_type
OFPTT_ALL	src/Openflow/openflow-common.h	/^    OFPTT_ALL = 0xff         \/* Wildcard table used for table config,$/;"	e	enum:ofp_table
OFPTT_MAX	src/Openflow/openflow-common.h	/^    OFPTT_MAX = 0xfe,$/;"	e	enum:ofp_table
OFPVID11_ANY	src/Openflow/openflow-1.1.h	/^    OFPVID11_ANY = 0xfffe,  \/* Indicate that a VLAN id is set but don't care$/;"	e	enum:ofp11_vlan_id
OFPVID11_NONE	src/Openflow/openflow-1.1.h	/^    OFPVID11_NONE = 0xffff, \/* No VLAN id was set. *\/$/;"	e	enum:ofp11_vlan_id
OFPVID12_NONE	src/Openflow/openflow-1.2.h	/^    OFPVID12_NONE    = 0x0000, \/* No VLAN id was set. *\/$/;"	e	enum:ofp12_vlan_id
OFPVID12_PRESENT	src/Openflow/openflow-1.2.h	/^    OFPVID12_PRESENT = 0x1000, \/* Bit that indicate that a VLAN id is set *\/$/;"	e	enum:ofp12_vlan_id
OFP_ASSERT	src/Openflow/openflow-common.h	56;"	d
OFP_ASSERT	src/Openflow/openflow-common.h	59;"	d
OFP_ASSERT	src/Openflow/openflow-common.h	64;"	d
OFP_DEFAULT_MISS_SEND_LEN	src/Openflow/openflow-common.h	110;"	d
OFP_DEFAULT_PRIORITY	src/Openflow/openflow-common.h	128;"	d
OFP_DL_TYPE_ETH2_CUTOFF	src/Openflow/openflow-common.h	116;"	d
OFP_DL_TYPE_NOT_ETH_TYPE	src/Openflow/openflow-common.h	121;"	d
OFP_ETH_ALEN	src/Openflow/openflow-common.h	108;"	d
OFP_FLOW_PERMANENT	src/Openflow/openflow-common.h	125;"	d
OFP_MAX_PORT_NAME_LEN	src/Openflow/openflow-common.h	103;"	d
OFP_MAX_TABLE_NAME_LEN	src/Openflow/openflow-common.h	102;"	d
OFP_OLD_PORT	src/Openflow/openflow-common.h	105;"	d
OFP_PORT	src/Openflow/openflow-common.h	106;"	d
OFP_PORT_C	src/Openflow/types.h	105;"	d
OF_VENDOR_ID	src/Openflow/openflow-common.h	96;"	d
ONF_VENDOR_ID	src/Openflow/openflow-common.h	100;"	d
OPENFLOW_11_H	src/Openflow/openflow-1.1.h	53;"	d
OPENFLOW_12_H	src/Openflow/openflow-1.2.h	54;"	d
OPENFLOW_13_H	src/Openflow/openflow-1.3.h	38;"	d
OPENFLOW_14_H	src/Openflow/openflow-1.4.h	38;"	d
OPENFLOW_15_H	src/Openflow/openflow-1.5.h	38;"	d
OPENFLOW_COMMON_H	src/Openflow/openflow-common.h	51;"	d
OPENFLOW_OPENFLOW10_H	src/Openflow/openflow-1.0.h	20;"	d
OPENFLOW_OPENFLOW_H	src/Openflow/openflow.h	18;"	d
OPENVSWITCH_TYPES_H	src/Openflow/types.h	18;"	d
OVS_BE16_MAX	src/Openflow/types.h	37;"	d
OVS_BE32_MAX	src/Openflow/types.h	38;"	d
OVS_BE64_MAX	src/Openflow/types.h	39;"	d
OVS_BITWISE	src/Openflow/types.h	24;"	d
OVS_BITWISE	src/Openflow/types.h	27;"	d
OVS_FORCE	src/Openflow/types.h	25;"	d
OVS_FORCE	src/Openflow/types.h	28;"	d
OVS_OFPRR_NONE	src/Openflow/openflow-common.h	/^    OVS_OFPRR_NONE              \/* OVS internal_use only, keep last!. *\/$/;"	e	enum:ofp_flow_removed_reason
O_BINARY	src/httpserver/wrlib/mg_compat.h	68;"	d
PACKET_IN_MSG_HANDLER_FUNC	src/mf_msg_handler.h	/^	PACKET_IN_MSG_HANDLER_FUNC$/;"	e	enum:MSG_HANDLER_TYPE
PAGE_SIZE	src/httpserver/wrlib/http.h	36;"	d
PERMANENT	src/mf_timer.h	/^	PERMANENT$/;"	e	enum:STOPWATCH_TYPE
PORT	src/httpserver/wrlib/http.h	22;"	d
PROG	src/httpserver/Makefile	/^PROG=	robin$/;"	m
PTR_ADD	src/mf_utilities.h	20;"	d
PTR_SUB	src/mf_utilities.h	19;"	d
RESIZE_INDEX	webui/odl-webui.js	/^var RESIZE_INDEX = 1.08;$/;"	v
ROUTER_IMG	webui/odl-webui.js	/^var ROUTER_IMG = "icons\/router.png";$/;"	v
ROUTER_SIZE	webui/odl-webui.js	/^var ROUTER_SIZE = 48;$/;"	v
ROUTER_X	webui/odl-webui.js	/^var ROUTER_X = -8;$/;"	v
ROUTER_Y	webui/odl-webui.js	/^var ROUTER_Y = -8;$/;"	v
RTE_MACHINE_CPUFLAG_AVX2	src/mf_wrapper.c	26;"	d	file:
RTE_MACHINE_CPUFLAG_AVX512F	src/mf_wrapper.c	20;"	d	file:
RUN_TESTS	src/minunit.h	15;"	d
RX_BUFFER_SIZE	src/mf_socket.h	11;"	d
RX_PACKET_SIZE	src/mf_rx_queue.h	8;"	d
RootPath	src/httpserver/wrlib/http.h	/^static const char *RootPath = "..\/webui" ;$/;"	v
SECOND_SOCKET_FD	tests/socket_array_test.c	6;"	d	file:
SERVER	src/httpserver/wrlib/http.h	20;"	d
SKIP	src/httpserver/wrlib/wrstring.h	32;"	d
SOCKET	src/httpserver/wrlib/mg_compat.h	/^typedef int SOCKET;$/;"	t
SRCS	src/httpserver/Makefile	/^SRCS=	wrlib\/wrmpool.c wrlib\/wrhash.c wrlib\/wrstring.c wrlib\/misc.c wrlib\/wrio.c \\$/;"	m
STOPWATCH_TYPE	src/mf_timer.h	/^enum  STOPWATCH_TYPE$/;"	g
S_ISDIR	src/httpserver/wrlib/mg_compat.h	37;"	d
TARGET	src/Makefile	/^TARGET = microflow$/;"	m
THIRD_SOCKET_FD	tests/socket_array_test.c	7;"	d	file:
TRIMI_LB_TAIL	src/httpserver/wrlib/wrstring.h	49;"	d
TRIM_HEAD	src/httpserver/wrlib/wrstring.h	41;"	d
UINT	src/mf_utilities.h	/^typedef unsigned int      UINT;$/;"	t
UINT1	src/mf_utilities.h	/^typedef unsigned char     UINT1;$/;"	t
UINT2	src/mf_utilities.h	/^typedef unsigned short    UINT2;$/;"	t
UINT4	src/mf_utilities.h	/^typedef unsigned int      UINT4;$/;"	t
UINT8	src/mf_utilities.h	/^typedef unsigned long     UINT8;$/;"	t
UTF8toANSI	src/httpserver/wrlib/misc.c	/^int UTF8toANSI(char *src)$/;"	f
UpdateTopology	webui/odl-webui.js	/^function UpdateTopology() {$/;"	f
WINOPT	src/httpserver/Makefile	/^WINOPT=	\/O2 \/Oi \/Os \/GT \/GL \/D "WIN32" \/D "NDEBUG" \/D "_CONSOLE" \/EHsc \/MD \/Gy \\$/;"	m
WORKER_THREADS_NUM	src/mf_socket.h	9;"	d
WR_EINTR	src/httpserver/wrlib/mg_compat.h	33;"	d
WR_EINTR	src/httpserver/wrlib/mg_compat.h	75;"	d
WR_MAX_THREADS	src/httpserver/wrlib/http.h	25;"	d
WR_SOCK_BACKLOG	src/httpserver/wrlib/http.h	29;"	d
WR_SOCK_ERRNO	src/httpserver/wrlib/mg_compat.h	32;"	d
WR_SOCK_ERRNO	src/httpserver/wrlib/mg_compat.h	74;"	d
WR_SOCK_RTT	src/httpserver/wrlib/http.h	27;"	d
WR_TCP_QUAN	src/httpserver/wrlib/http.h	55;"	d
WrContext	src/httpserver/wrlib/http.h	/^}WrContext;$/;"	v	typeref:struct:__anon12
WrHttp	src/httpserver/wrlib/http.h	/^}WrHttp;$/;"	t	typeref:struct:__anon10
_MISC_H__	src/httpserver/wrlib/misc.h	2;"	d
__ANALYSIS_H__	src/httpserver/wrlib/analysis.h	4;"	d
__CGI_H__	src/httpserver/cgi.h	2;"	d
__HTTP_H__	src/httpserver/wrlib/http.h	2;"	d
__MF_CONTROLLER_H__	src/mf_controller.h	2;"	d
__MF_DEVICEMGR_H__	src/mf_devicemgr.h	2;"	d
__MF_LOGGER_H__	src/mf_logger.h	2;"	d
__MF_MSG_HANDLER__	src/mf_msg_handler.h	2;"	d
__MF_MSG_PARSER__	src/mf_msg_parser.h	2;"	d
__MF_OFMSG_CONSTRUCTOR__	src/mf_ofmsg_constructor.h	2;"	d
__MF_RX_QUEUE_H__	src/mf_rx_queue.h	2;"	d
__MF_SOCKET_H__	src/mf_socket.h	2;"	d
__MF_SWITCH_H__	src/mf_switch.h	2;"	d
__MF_TIMER_H__	src/mf_timer.h	2;"	d
__MG_COMPAT_H__	src/httpserver/wrlib/mg_compat.h	2;"	d
__WRSTRING_H__	src/httpserver/wrlib/wrstring.h	26;"	d
__WR_HASH_H__	src/httpserver/wrlib/wrhash.h	3;"	d
__WR_IO_H__	src/httpserver/wrlib/wrio.h	5;"	d
__WR_MPOOL_H__	src/httpserver/wrlib/wrmpool.h	2;"	d
__cpuid	src/mf_wrapper.c	/^static void __cpuid(unsigned int where[4], unsigned int leaf)$/;"	f	file:
__dbg_h__	src/dbg.h	2;"	d
_minunit_h	src/minunit.h	3;"	d
_slist	src/httpserver/wrlib/wrhash.h	/^typedef struct _slist{$/;"	s
ack	src/mf_utilities.h	/^    UINT4 ack;$/;"	m	struct:st_tcp
action_array_len	src/Openflow/openflow-1.5.h	/^    ovs_be16 action_array_len;      \/* Length of all actions in bytes. *\/$/;"	m	struct:ofp15_bucket
actions	src/Openflow/openflow-1.2.h	/^    ovs_be32  actions[OFPGT12_N_TYPES];    \/* Bitmaps of supported OFPAT_*. *\/$/;"	m	struct:ofp12_group_features_stats
actions_len	src/Openflow/openflow-1.0.h	/^    ovs_be16 actions_len;         \/* Size of action array in bytes. *\/$/;"	m	struct:ofp10_packet_out
actions_len	src/Openflow/openflow-1.1.h	/^    ovs_be16 actions_len;     \/* Size of action array in bytes. *\/$/;"	m	struct:ofp11_packet_out
active_count	src/Openflow/openflow-1.0.h	/^    ovs_be32 active_count;   \/* Number of active entries. *\/$/;"	m	struct:ofp10_table_stats
active_count	src/Openflow/openflow-1.1.h	/^    ovs_be32 active_count;   \/* Number of active entries. *\/$/;"	m	struct:ofp11_table_stats
active_count	src/Openflow/openflow-1.2.h	/^    ovs_be32 active_count;   \/* Number of active entries. *\/$/;"	m	struct:ofp12_table_stats
active_count	src/Openflow/openflow-1.3.h	/^    ovs_be32 active_count;  \/* Number of active entries. *\/$/;"	m	struct:ofp13_table_stats
add	src/mf_utilities.h	/^    UINT2 add;$/;"	m	struct:st_dns
add_switch	src/mf_devicemgr.c	/^void add_switch(struct mf_switch* sw)$/;"	f
advertise	src/Openflow/openflow-1.0.h	/^    ovs_be32 advertise;     \/* Bitmap of "ofp_port_features"s.  Zero all$/;"	m	struct:ofp10_port_mod
advertise	src/Openflow/openflow-1.1.h	/^    ovs_be32 advertise;     \/* Bitmap of OFPPF_* and OFPPF11_*.  Zero all bits$/;"	m	struct:ofp11_port_mod
advertise	src/Openflow/openflow-1.4.h	/^    ovs_be32      advertise;  \/* Bitmap of OFPPF_*.  Zero all bits to prevent$/;"	m	struct:ofp14_port_mod_prop_ethernet
advertised	src/Openflow/openflow-1.0.h	/^    ovs_be32 advertised;    \/* Features being advertised by the port. *\/$/;"	m	struct:ofp10_phy_port
advertised	src/Openflow/openflow-1.1.h	/^	ovs_be32 advertised;    \/* Features being advertised by the port. *\/$/;"	m	struct:ofp11_port
advertised	src/Openflow/openflow-1.4.h	/^    ovs_be32 advertised;    \/* Features being advertised by the port. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
all_tests	tests/queue_test.c	/^ char *all_tests() $/;"	f
all_tests	tests/queue_test.c	/^RUN_TESTS(all_tests);$/;"	v
answer	src/mf_utilities.h	/^    UINT2 answer;$/;"	m	struct:st_dns
apply_actions	src/Openflow/openflow-1.1.h	/^    ovs_be32 apply_actions;  \/* Bitmap of OFPAT_* that are supported$/;"	m	struct:ofp11_table_stats
apply_actions	src/Openflow/openflow-1.2.h	/^    ovs_be32 apply_actions;  \/* Bitmap of OFPAT_* that are supported$/;"	m	struct:ofp12_table_stats
apply_setfields	src/Openflow/openflow-1.2.h	/^    ovs_be64 apply_setfields;\/* Bitmap of (1 << OFPXMT_*) header fields that$/;"	m	struct:ofp12_table_stats
arp_msg_handler	src/mf_msg_handler.c	/^void arp_msg_handler(struct q_node* qn, uint32_t xid, char* buffer, uint16_t total_len)$/;"	f
arp_t	src/mf_utilities.h	/^}arp_t;$/;"	t	typeref:struct:st_arp
author	src/mf_utilities.h	/^    UINT2 author;$/;"	m	struct:st_dns
auxiliary_id	src/Openflow/openflow-common.h	/^    uint8_t auxiliary_id;   \/* OF 1.3: Identify auxiliary connections *\/$/;"	m	struct:ofp_switch_features
auxiliary_id	src/mf_switch.h	/^	uint8_t auxiliary_id;$/;"	m	struct:mf_switch
available_link_list	src/mf_topomgr.h	/^	struct lf_list available_link_list;$/;"	m	struct:mf_topomgr	typeref:struct:mf_topomgr::lf_list
available_list	src/mf_devicemgr.h	/^	struct lf_list available_list;$/;"	m	struct:mf_devicemgr	typeref:struct:mf_devicemgr::lf_list
available_list	src/mf_topomgr.h	/^	struct lf_list available_list;$/;"	m	struct:mf_topomgr	typeref:struct:mf_topomgr::lf_list
available_slot_num	src/mf_devicemgr.h	/^	uint32_t available_slot_num;$/;"	m	struct:mf_devicemgr
band_stats	src/Openflow/openflow-1.3.h	/^    struct ofp13_meter_band_stats band_stats[0];  \/* The band_stats length is$/;"	m	struct:ofp13_meter_stats	typeref:struct:ofp13_meter_stats::ofp13_meter_band_stats
band_types	src/Openflow/openflow-1.3.h	/^    ovs_be32   band_types;    \/* Bitmaps of OFPMBT13_* values supported. *\/$/;"	m	struct:ofp13_meter_features
barrier	src/mf_mempool.c	10;"	d	file:
begin	src/httpserver/wrlib/wrmpool.h	/^	char *begin;\/*start pos*\/$/;"	m	struct:__anon7
bucket_array_len	src/Openflow/openflow-1.5.h	/^    ovs_be16 bucket_array_len;    \/* Length of action buckets data. *\/$/;"	m	struct:ofp15_group_mod
bucket_id	src/Openflow/openflow-1.5.h	/^    ovs_be32 bucket_id;             \/* Bucket Id used to identify bucket*\/$/;"	m	struct:ofp15_bucket
bucket_list_len	src/Openflow/openflow-1.5.h	/^    ovs_be16 bucket_list_len;     \/* Length of action buckets data. *\/$/;"	m	struct:ofp15_group_desc_stats
buckets	src/httpserver/wrlib/wrhash.h	/^	wr_hashlist **buckets;$/;"	m	struct:__anon8
buffer_id	src/Openflow/openflow-1.0.h	/^    ovs_be32 buffer_id;           \/* Buffered packet to apply to (or -1).$/;"	m	struct:ofp10_flow_mod
buffer_id	src/Openflow/openflow-1.0.h	/^    ovs_be32 buffer_id;           \/* ID assigned by datapath or UINT32_MAX. *\/$/;"	m	struct:ofp10_packet_out
buffer_id	src/Openflow/openflow-1.0.h	/^    ovs_be32 buffer_id;     \/* ID assigned by datapath. *\/$/;"	m	struct:ofp10_packet_in
buffer_id	src/Openflow/openflow-1.1.h	/^    ovs_be32 buffer_id;          \/* Buffered packet to apply to (or -1).$/;"	m	struct:ofp11_flow_mod
buffer_id	src/Openflow/openflow-1.1.h	/^    ovs_be32 buffer_id;       \/* ID assigned by datapath (-1 if none). *\/$/;"	m	struct:ofp11_packet_out
buffer_id	src/Openflow/openflow-1.1.h	/^    ovs_be32 buffer_id;     \/* ID assigned by datapath. *\/$/;"	m	struct:ofp11_packet_in
buffer_id	src/Openflow/openflow-1.2.h	/^    ovs_be32 buffer_id;     \/* ID assigned by datapath. *\/$/;"	m	struct:ofp12_packet_in
bundle_id	src/Openflow/openflow-1.4.h	/^    ovs_be32 bundle_id;     \/* Identify the bundle. *\/$/;"	m	struct:ofp14_bundle_ctrl_msg
burst_size	src/Openflow/openflow-1.3.h	/^    ovs_be32    burst_size;  \/* Size of bursts. *\/$/;"	m	struct:ofp13_meter_band_drop
burst_size	src/Openflow/openflow-1.3.h	/^    ovs_be32    burst_size;  \/* Size of bursts. *\/$/;"	m	struct:ofp13_meter_band_dscp_remark
burst_size	src/Openflow/openflow-1.3.h	/^    ovs_be32    burst_size;  \/* Size of bursts. *\/$/;"	m	struct:ofp13_meter_band_experimenter
burst_size	src/Openflow/openflow-1.3.h	/^    ovs_be32 burst_size; \/* Size of bursts. *\/$/;"	m	struct:ofp13_meter_band_header
byte_band_count	src/Openflow/openflow-1.3.h	/^    ovs_be64    byte_band_count;        \/* Number of bytes in band. *\/$/;"	m	struct:ofp13_meter_band_stats
byte_count	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 byte_count;   \/* Number of bytes in flow. *\/$/;"	m	struct:ofp10_flow_stats
byte_count	src/Openflow/openflow-1.0.h	/^    ovs_be64 byte_count;$/;"	m	struct:ofp10_flow_removed
byte_count	src/Openflow/openflow-1.1.h	/^    ovs_be64 byte_count;       \/* Number of bytes in flow. *\/$/;"	m	struct:ofp11_flow_stats
byte_count	src/Openflow/openflow-1.1.h	/^    ovs_be64 byte_count;       \/* Number of bytes processed by group. *\/$/;"	m	struct:ofp11_group_stats
byte_count	src/Openflow/openflow-1.1.h	/^    ovs_be64 byte_count;     \/* Number of bytes processed by bucket. *\/$/;"	m	struct:ofp11_bucket_counter
byte_count	src/Openflow/openflow-1.1.h	/^    ovs_be64 byte_count;$/;"	m	struct:ofp11_flow_removed
byte_count	src/Openflow/openflow-1.2.h	/^    ovs_be64 byte_count;$/;"	m	struct:ofp12_flow_removed
byte_count	src/Openflow/openflow-common.h	/^    ovs_32aligned_be64 byte_count;   \/* Number of bytes in flows. *\/$/;"	m	struct:ofp_aggregate_stats_reply
byte_in_count	src/Openflow/openflow-1.3.h	/^    ovs_be64  byte_in_count;     \/* Number of bytes in input. *\/$/;"	m	struct:ofp13_meter_stats
cacheCheck	src/httpserver/wrlib/analysis.c	/^int cacheCheck(const WrHttp *pHttp)$/;"	f
callback_arg	src/mf_timer.h	/^	void* callback_arg;$/;"	m	struct:stopwatch
capabilities	src/Openflow/openflow-1.2.h	/^    ovs_be32  capabilities;    \/* Bitmap of OFPGFC12_* capability supported. *\/$/;"	m	struct:ofp12_group_features_stats
capabilities	src/Openflow/openflow-1.3.h	/^    ovs_be32   capabilities;  \/* Bitmaps of "ofp13_meter_flags". *\/$/;"	m	struct:ofp13_meter_features
capabilities	src/Openflow/openflow-common.h	/^    ovs_be32 capabilities;  \/* OFPC_*, OFPC10_*, OFPC11_*, OFPC12_*. *\/$/;"	m	struct:ofp_switch_features
capabilities	src/mf_switch.h	/^	uint32_t capabilities;$/;"	m	struct:mf_switch
cflag	src/httpserver/wrlib/wrmpool.h	/^	int cflag;\/*clear flag ,when capacity isn't enough and call malloc ,you must set it to 1*\/$/;"	m	struct:__anon7
cgiProcess	src/httpserver/wrlib/request.c	/^static int cgiProcess(WrHttp *pHttp)$/;"	f	file:
cgi_handler	src/httpserver/cgi.c	/^int cgi_handler(WrHttp *pHttp ,void *handle)$/;"	f
cgi_init	src/httpserver/cgi.c	/^void cgi_init()$/;"	f
cgi_page_add	src/httpserver/wrlib/http.c	/^void cgi_page_add(const char * pageName,\\$/;"	f
cgi_page_find	src/httpserver/wrlib/http.c	/^void* cgi_page_find(const char *pageName)$/;"	f
cgi_page_login	src/httpserver/cgi.c	/^int cgi_page_login(WrHttp *pHttp)$/;"	f
cgi_page_sum	src/httpserver/cgi.c	/^int cgi_page_sum(WrHttp *pHttp)$/;"	f
cgi_page_txt	src/httpserver/cgi.c	/^int cgi_page_txt(WrHttp *pHttp)$/;"	f
cgi_uninit	src/httpserver/cgi.c	/^void cgi_uninit()$/;"	f
chassis_tlv_id	src/mf_utilities.h	/^    UINT8 chassis_tlv_id;            \/\/dpid$/;"	m	struct:st_lldp
chassis_tlv_subtype	src/mf_utilities.h	/^    UINT1 chassis_tlv_subtype;       \/\/MAC             4$/;"	m	struct:st_lldp
chassis_tlv_type_and_len	src/mf_utilities.h	/^    UINT2 chassis_tlv_type_and_len;   \/\/0x0207$/;"	m	struct:st_lldp
chdir	src/httpserver/wrlib/mg_compat.h	49;"	d
check	src/dbg.h	23;"	d
check_debug	src/dbg.h	29;"	d
check_mem	src/dbg.h	27;"	d
checkmethod	src/httpserver/wrlib/analysis.c	/^int checkmethod(WrHttp *pHttp)$/;"	f
checkpath	src/httpserver/wrlib/analysis.c	/^int checkpath(WrHttp *pHttp)$/;"	f
cipaddr	src/mf_utilities.h	/^    UINT4 cipaddr;  \/\/client ip addr;$/;"	m	struct:st_dhcp
cksum	src/mf_utilities.h	/^    UINT2 cksum;$/;"	m	struct:st_imcp
cksum	src/mf_utilities.h	/^    UINT2 cksum;$/;"	m	struct:st_ip
cksum	src/mf_utilities.h	/^    UINT2 cksum;$/;"	m	struct:st_tcp
cksum	src/mf_utilities.h	/^    UINT2 cksum;$/;"	m	struct:st_udp
clas	src/mf_utilities.h	/^    UINT2 clas;         \/\/ class$/;"	m	struct:st_dns_a
clean_errno	src/dbg.h	14;"	d
clearHttp	src/httpserver/wrlib/request.c	/^static void clearHttp(WrHttp *pHttp)$/;"	f	file:
close	src/httpserver/wrlib/mg_compat.h	46;"	d
closesocket	src/httpserver/wrlib/mg_compat.h	69;"	d
cmcaddr	src/mf_utilities.h	/^    UINT1 cmcaddr[16];$/;"	m	struct:st_dhcp
code	src/Openflow/openflow-common.h	/^    ovs_be16 code;$/;"	m	struct:ofp_error_msg
code	src/mf_utilities.h	/^    UINT1 code;$/;"	m	struct:st_imcp
code	src/mf_utilities.h	/^    UINT1 code;$/;"	m	struct:st_tcp
codeSet	src/httpserver/wrlib/request.c	/^static int codeSet(char *pBuf ,int code)$/;"	f	file:
collisions	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 collisions;   \/* Number of collisions. *\/$/;"	m	struct:ofp10_port_stats
collisions	src/Openflow/openflow-1.1.h	/^    ovs_be64 collisions;      \/* Number of collisions. *\/$/;"	m	struct:ofp11_port_stats
collisions	src/Openflow/openflow-1.4.h	/^    ovs_be64 collisions;     \/* Number of collisions. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
command	src/Openflow/openflow-1.0.h	/^    ovs_be16 command;             \/* One of OFPFC_*. *\/$/;"	m	struct:ofp10_flow_mod
command	src/Openflow/openflow-1.1.h	/^    ovs_be16 command;             \/* One of OFPGC11_*. *\/$/;"	m	struct:ofp11_group_mod
command	src/Openflow/openflow-1.1.h	/^    uint8_t command;             \/* One of OFPFC_*. *\/$/;"	m	struct:ofp11_flow_mod
command	src/Openflow/openflow-1.3.h	/^    ovs_be16          command;      \/* One of OFPMC_*. *\/$/;"	m	struct:ofp13_meter_mod
command	src/Openflow/openflow-1.4.h	/^    uint8_t command;            \/* One of OFPFMC14_*. *\/$/;"	m	struct:ofp14_flow_monitor_request
command	src/Openflow/openflow-1.5.h	/^    ovs_be16 command;             \/* One of OFPGC15_*. *\/$/;"	m	struct:ofp15_group_mod
command_bucket_id	src/Openflow/openflow-1.5.h	/^    ovs_be32 command_bucket_id;   \/* Bucket Id used as part of$/;"	m	struct:ofp15_group_mod
compare	src/mf_lf_list.h	/^typedef int (*compare)(void*, struct lf_list*);$/;"	t
compare_list_node	tests/lock_free_list_test.c	/^int compare_list_node(void * arg, struct lf_list* n)$/;"	f
config	src/Openflow/openflow-1.0.h	/^    ovs_be32 config;        \/* Bitmap of OFPPC_* and OFPPC10_* flags. *\/$/;"	m	struct:ofp10_phy_port
config	src/Openflow/openflow-1.0.h	/^    ovs_be32 config;        \/* Bitmap of OFPPC_* flags. *\/$/;"	m	struct:ofp10_port_mod
config	src/Openflow/openflow-1.1.h	/^	ovs_be32 config;        \/* Bitmap of OFPPC_* flags. *\/$/;"	m	struct:ofp11_port
config	src/Openflow/openflow-1.1.h	/^    ovs_be32 config;         \/* Bitmap of OFPTC_* values *\/$/;"	m	struct:ofp11_table_stats
config	src/Openflow/openflow-1.1.h	/^    ovs_be32 config;        \/* Bitmap of OFPPC_* flags. *\/$/;"	m	struct:ofp11_port_mod
config	src/Openflow/openflow-1.1.h	/^    ovs_be32 config;        \/* Bitmap of OFPTC_* flags *\/$/;"	m	struct:ofp11_table_mod
config	src/Openflow/openflow-1.2.h	/^    ovs_be32 config;         \/* Bitmap of OFPTC_* values *\/$/;"	m	struct:ofp12_table_stats
config	src/Openflow/openflow-1.3.h	/^    ovs_be32 config;          \/* Bitmap of OFPTC_* values *\/$/;"	m	struct:ofp13_table_features
config	src/Openflow/openflow-1.4.h	/^    ovs_be32 config;        \/* Bitmap of OFPPC_* flags. *\/$/;"	m	struct:ofp14_port
config	src/Openflow/openflow-1.4.h	/^    ovs_be32 config;        \/* Bitmap of OFPPC_* flags. *\/$/;"	m	struct:ofp14_port_mod
config	src/Openflow/openflow-1.4.h	/^    ovs_be32 config;        \/* Bitmap of OFPTC_* flags *\/$/;"	m	struct:ofp14_table_mod
container_of	src/mf_lf_list.h	8;"	d
controller_addr	src/mf_socket.c	/^struct sockaddr_in controller_addr, switch_addr;$/;"	v	typeref:struct:sockaddr_in
controller_exit	src/mf_controller.c	/^void controller_exit()$/;"	f
controller_start	src/mf_controller.c	/^void controller_start()$/;"	f
cookie	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 cookie;       \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp10_flow_stats
cookie	src/Openflow/openflow-1.0.h	/^    ovs_be64 cookie;             \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp10_flow_mod
cookie	src/Openflow/openflow-1.0.h	/^    ovs_be64 cookie;          \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp10_flow_removed
cookie	src/Openflow/openflow-1.1.h	/^    ovs_be64 cookie;             \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp11_flow_mod
cookie	src/Openflow/openflow-1.1.h	/^    ovs_be64 cookie;           \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp11_flow_stats
cookie	src/Openflow/openflow-1.1.h	/^    ovs_be64 cookie;          \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp11_flow_removed
cookie	src/Openflow/openflow-1.1.h	/^    ovs_be64 cookie;          \/* Require matching entries to contain this$/;"	m	struct:ofp11_flow_stats_request
cookie	src/Openflow/openflow-1.2.h	/^    ovs_be64 cookie;          \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp12_flow_removed
cookie	src/Openflow/openflow-1.3.h	/^    ovs_be64 cookie;          \/* Cookie of the flow entry that was looked up *\/$/;"	m	struct:ofp13_packet_in
cookieCheck	src/httpserver/wrlib/analysis.c	/^int cookieCheck(const WrHttp *pHttp)$/;"	f
cookieSet	src/httpserver/wrlib/request.c	/^static int cookieSet(char *buf)$/;"	f	file:
cookie_mask	src/Openflow/openflow-1.1.h	/^    ovs_be64 cookie_mask;        \/* Mask used to restrict the cookie bits$/;"	m	struct:ofp11_flow_mod
cookie_mask	src/Openflow/openflow-1.1.h	/^    ovs_be64 cookie_mask;     \/* Mask used to restrict the cookie bits that$/;"	m	struct:ofp11_flow_stats_request
copy_16	tests/inverse_memcpy_test.c	/^uint16_t copy_16(char* ptr)$/;"	f
copy_16bit	src/mf_utilities.c	/^inline uint16_t copy_16bit(char * ptr)$/;"	f
copy_32bit	src/mf_utilities.c	/^inline uint32_t copy_32bit(char * ptr)$/;"	f
copy_64bit	src/mf_utilities.c	/^inline uint64_t copy_64bit(char * ptr)$/;"	f
create_lldp_pkt	src/mf_utilities.c	/^void create_lldp_pkt(void *src_addr, UINT8 id, ovs_be32 port, lldp_t *buffer)$/;"	f
curPos	src/httpserver/wrlib/http.h	/^	char *curPos;$/;"	m	struct:__anon10
curr	src/Openflow/openflow-1.0.h	/^    ovs_be32 curr;          \/* Current features. *\/$/;"	m	struct:ofp10_phy_port
curr	src/Openflow/openflow-1.1.h	/^	ovs_be32 curr;          \/* Current features. *\/$/;"	m	struct:ofp11_port
curr	src/Openflow/openflow-1.4.h	/^    ovs_be32 curr;          \/* Current features. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
curr_speed	src/Openflow/openflow-1.1.h	/^	ovs_be32 curr_speed;    \/* Current port bitrate in kbps. *\/$/;"	m	struct:ofp11_port
curr_speed	src/Openflow/openflow-1.4.h	/^    ovs_be32 curr_speed;    \/* Current port bitrate in kbps. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
data	src/Openflow/openflow-1.0.h	/^    uint8_t data[0];        \/* Ethernet frame, halfway through 32-bit word,$/;"	m	struct:ofp10_packet_in
data	src/Openflow/openflow-common.h	/^    uint8_t data[0];          \/* Variable-length data.  Interpreted based$/;"	m	struct:ofp_error_msg
data	src/mf_utilities.h	/^    UINT1  data[0];$/;"	m	struct:st_dns_a
data	src/mf_utilities.h	/^    UINT1 data[0];$/;"	m	struct:st_arp
data	src/mf_utilities.h	/^    UINT1 data[0];$/;"	m	struct:st_dhcp
data	src/mf_utilities.h	/^    UINT1 data[0];$/;"	m	struct:st_ether
data	src/mf_utilities.h	/^    UINT1 data[0];$/;"	m	struct:st_imcp
data	src/mf_utilities.h	/^    UINT1 data[0];$/;"	m	struct:st_ip
data	src/mf_utilities.h	/^    UINT1 data[0];$/;"	m	struct:st_t802_1q
data	src/mf_utilities.h	/^    UINT1 data[0];$/;"	m	struct:st_tcp
data	src/mf_utilities.h	/^    UINT1 data[0];$/;"	m	struct:st_udp
data	src/mf_utilities.h	/^    UINT1 data[MAX_PKT];$/;"	m	struct:st_ethpkt_info
data	src/mf_utilities.h	/^    char    *data;$/;"	m	struct:st_dns_q
data	src/mf_utilities.h	/^    char  data[0];$/;"	m	struct:st_tlv
datapath_id	src/Openflow/openflow-common.h	/^    ovs_be64 datapath_id;   \/* Datapath unique ID.  The lower 48-bits are for$/;"	m	struct:ofp_switch_features
datapath_id	src/mf_switch.h	/^	uint64_t datapath_id;$/;"	m	struct:mf_switch
dblclick	webui/odl-webui.js	/^function dblclick(d) {$/;"	f
debug	src/dbg.h	11;"	d
debug	src/dbg.h	9;"	d
decodeParam	src/httpserver/wrlib/analysis.c	/^int decodeParam(WrHttp *pHttp)$/;"	f
delCookie	webui/odl-rest.js	/^function delCookie(name) {$/;"	f
delete_host_hash_value	src/mf_devicemgr.c	/^void delete_host_hash_value(struct host_hash_value * value, struct host_hash_value * bucket_head)$/;"	f
delete_switch_from_map	src/mf_devicemgr.c	/^void delete_switch_from_map(struct mf_switch * sw)$/;"	f
dest	src/mf_utilities.h	/^    UINT1 dest[6];$/;"	m	struct:st_ether
dest	src/mf_utilities.h	/^    UINT4 dest;$/;"	m	struct:st_ip
devicemgr_mutex	src/mf_devicemgr.h	/^	pthread_mutex_t devicemgr_mutex;$/;"	m	struct:mf_devicemgr
dhcp_t	src/mf_utilities.h	/^}dhcp_t;$/;"	t	typeref:struct:st_dhcp
dl_dst	src/Openflow/openflow-1.0.h	/^    uint8_t dl_dst[OFP_ETH_ALEN]; \/* Ethernet destination address. *\/$/;"	m	struct:ofp10_match
dl_dst	src/Openflow/openflow-1.1.h	/^    uint8_t dl_dst[OFP_ETH_ALEN]; \/* Ethernet destination address. *\/$/;"	m	struct:ofp11_match
dl_dst_mask	src/Openflow/openflow-1.1.h	/^    uint8_t dl_dst_mask[OFP_ETH_ALEN]; \/* Ethernet destination address mask. *\/$/;"	m	struct:ofp11_match
dl_src	src/Openflow/openflow-1.0.h	/^    uint8_t dl_src[OFP_ETH_ALEN]; \/* Ethernet source address. *\/$/;"	m	struct:ofp10_match
dl_src	src/Openflow/openflow-1.1.h	/^    uint8_t dl_src[OFP_ETH_ALEN]; \/* Ethernet source address. *\/$/;"	m	struct:ofp11_match
dl_src_mask	src/Openflow/openflow-1.1.h	/^    uint8_t dl_src_mask[OFP_ETH_ALEN]; \/* Ethernet source address mask.  *\/$/;"	m	struct:ofp11_match
dl_type	src/Openflow/openflow-1.0.h	/^    ovs_be16 dl_type;          \/* Ethernet frame type. *\/$/;"	m	struct:ofp10_match
dl_type	src/Openflow/openflow-1.1.h	/^    ovs_be16 dl_type;          \/* Ethernet frame type. *\/$/;"	m	struct:ofp11_match
dl_vlan	src/Openflow/openflow-1.0.h	/^    ovs_be16 dl_vlan;          \/* Input VLAN. *\/$/;"	m	struct:ofp10_match
dl_vlan	src/Openflow/openflow-1.1.h	/^    ovs_be16 dl_vlan;          \/* Input VLAN id. *\/$/;"	m	struct:ofp11_match
dl_vlan_pcp	src/Openflow/openflow-1.0.h	/^    uint8_t dl_vlan_pcp;       \/* Input VLAN priority. *\/$/;"	m	struct:ofp10_match
dl_vlan_pcp	src/Openflow/openflow-1.1.h	/^    uint8_t dl_vlan_pcp;       \/* Input VLAN priority. *\/$/;"	m	struct:ofp11_match
dns_a_t	src/mf_utilities.h	/^}dns_a_t;$/;"	t	typeref:struct:st_dns_a
dns_q	src/mf_utilities.h	/^    dns_q_t  *dns_q;$/;"	m	struct:st_dns
dns_q_t	src/mf_utilities.h	/^}dns_q_t;$/;"	t	typeref:struct:st_dns_q
dns_t	src/mf_utilities.h	/^}dns_t;$/;"	t	typeref:struct:st_dns
dport	src/mf_utilities.h	/^    UINT2 dport;$/;"	m	struct:st_tcp
dport	src/mf_utilities.h	/^    UINT2 dport;$/;"	m	struct:st_udp
drag	webui/odl-webui.js	/^var drag = topo.drag().on("dragend", dragend);$/;"	v
dragend	webui/odl-webui.js	/^function dragend(d) {$/;"	f
dst	src/mf_topomgr.h	/^	struct link_node* dst;$/;"	m	struct:network_link	typeref:struct:network_link::link_node
duration_nsec	src/Openflow/openflow-1.0.h	/^    ovs_be32 duration_nsec;   \/* Time flow has been alive in nanoseconds$/;"	m	struct:ofp10_flow_stats
duration_nsec	src/Openflow/openflow-1.0.h	/^    ovs_be32 duration_nsec;   \/* Time flow was alive in nanoseconds beyond$/;"	m	struct:ofp10_flow_removed
duration_nsec	src/Openflow/openflow-1.1.h	/^    ovs_be32 duration_nsec;    \/* Time flow has been alive in nanoseconds beyond$/;"	m	struct:ofp11_flow_stats
duration_nsec	src/Openflow/openflow-1.1.h	/^    ovs_be32 duration_nsec;   \/* Time flow was alive in nanoseconds beyond$/;"	m	struct:ofp11_flow_removed
duration_nsec	src/Openflow/openflow-1.2.h	/^    ovs_be32 duration_nsec;   \/* Time flow was alive in nanoseconds beyond$/;"	m	struct:ofp12_flow_removed
duration_nsec	src/Openflow/openflow-1.3.h	/^    ovs_be32  duration_nsec;     \/* Time meter has been alive in nanoseconds$/;"	m	struct:ofp13_meter_stats
duration_nsec	src/Openflow/openflow-1.3.h	/^    ovs_be32 duration_nsec;   \/* Time group has been alive in nanoseconds$/;"	m	struct:ofp13_group_stats
duration_nsec	src/Openflow/openflow-1.3.h	/^    ovs_be32 duration_nsec;   \/* Time port has been alive in nanoseconds$/;"	m	struct:ofp13_port_stats
duration_nsec	src/Openflow/openflow-1.3.h	/^    ovs_be32 duration_nsec;   \/* Time queue has been alive in nanoseconds$/;"	m	struct:ofp13_queue_stats
duration_nsec	src/Openflow/openflow-1.4.h	/^    ovs_be32 duration_nsec;  \/* Time port has been alive in nanoseconds beyond$/;"	m	struct:ofp14_port_stats
duration_sec	src/Openflow/openflow-1.0.h	/^    ovs_be32 duration_sec;    \/* Time flow has been alive in seconds. *\/$/;"	m	struct:ofp10_flow_stats
duration_sec	src/Openflow/openflow-1.0.h	/^    ovs_be32 duration_sec;    \/* Time flow was alive in seconds. *\/$/;"	m	struct:ofp10_flow_removed
duration_sec	src/Openflow/openflow-1.1.h	/^    ovs_be32 duration_sec;     \/* Time flow has been alive in seconds. *\/$/;"	m	struct:ofp11_flow_stats
duration_sec	src/Openflow/openflow-1.1.h	/^    ovs_be32 duration_sec;    \/* Time flow was alive in seconds. *\/$/;"	m	struct:ofp11_flow_removed
duration_sec	src/Openflow/openflow-1.2.h	/^    ovs_be32 duration_sec;    \/* Time flow was alive in seconds. *\/$/;"	m	struct:ofp12_flow_removed
duration_sec	src/Openflow/openflow-1.3.h	/^    ovs_be32  duration_sec;      \/* Time meter has been alive in seconds. *\/$/;"	m	struct:ofp13_meter_stats
duration_sec	src/Openflow/openflow-1.3.h	/^    ovs_be32 duration_sec;    \/* Time group has been alive in seconds. *\/$/;"	m	struct:ofp13_group_stats
duration_sec	src/Openflow/openflow-1.3.h	/^    ovs_be32 duration_sec;    \/* Time port has been alive in seconds. *\/$/;"	m	struct:ofp13_port_stats
duration_sec	src/Openflow/openflow-1.3.h	/^    ovs_be32 duration_sec;    \/* Time queue has been alive in seconds. *\/$/;"	m	struct:ofp13_queue_stats
duration_sec	src/Openflow/openflow-1.4.h	/^    ovs_be32 duration_sec;   \/* Time port has been alive in seconds. *\/$/;"	m	struct:ofp14_port_stats
echo_request_handler	src/mf_msg_handler.c	/^void echo_request_handler(struct q_node* qn)$/;"	f
echo_request_handler_list_head	src/mf_msg_handler.h	/^	struct single_msg_handler * echo_request_handler_list_head;$/;"	m	struct:msg_handlers	typeref:struct:msg_handlers::single_msg_handler
endof_lldpdu_tlv_type_and_len	src/mf_utilities.h	/^    UINT2 endof_lldpdu_tlv_type_and_len;$/;"	m	struct:st_lldp
epfd	src/mf_socket.c	/^uint32_t epfd, nfds;$/;"	v
epoll_init	src/mf_socket.c	/^static void epoll_init(uint32_t sock)$/;"	f	file:
epoll_recv_incomplete_length	src/mf_switch.h	/^	uint32_t epoll_recv_incomplete_length;$/;"	m	struct:mf_switch
errorLog	src/httpserver/cgi.c	/^int errorLog(WrHttp *pHttp ,const char *mess)$/;"	f
eth_head	src/mf_utilities.h	/^    ether_t eth_head;$/;"	m	struct:st_arp
eth_head	src/mf_utilities.h	/^    ether_t eth_head;$/;"	m	struct:st_ip
eth_head	src/mf_utilities.h	/^    ether_t eth_head;$/;"	m	struct:st_lldp
ether_t	src/mf_utilities.h	/^}ether_t;$/;"	t	typeref:struct:st_ether
ether_type	src/mf_utilities.h	/^enum ether_type$/;"	g
ethpkt_info_t	src/mf_utilities.h	/^}ethpkt_info_t;$/;"	t	typeref:struct:st_ethpkt_info
ev	src/mf_socket.c	/^struct epoll_event ev, events[EPOLL_EVENTS_NUM];$/;"	v	typeref:struct:epoll_event
events	src/mf_socket.c	/^struct epoll_event ev, events[EPOLL_EVENTS_NUM];$/;"	v	typeref:struct:
exp_type	src/Openflow/openflow-1.2.h	/^    ovs_be32 exp_type;        \/* Experimenter defined. *\/$/;"	m	struct:ofp12_experimenter_stats_header
exp_type	src/Openflow/openflow-1.3.h	/^    ovs_be32    exp_type;     \/* Experimenter defined. *\/$/;"	m	struct:ofp13_table_feature_prop_experimenter
exp_type	src/Openflow/openflow-1.4.h	/^    ovs_be32        exp_type;      \/* Experimenter defined. *\/$/;"	m	struct:ofp14_async_config_prop_experimenter
exp_type	src/Openflow/openflow-1.4.h	/^    ovs_be32        exp_type;     \/* Experimenter defined. *\/$/;"	m	struct:ofp14_role_prop_experimenter
experimenter	src/Openflow/openflow-1.1.h	/^    ovs_be32 experimenter;      \/* Experimenter ID which takes the same form$/;"	m	struct:ofp11_instruction_experimenter
experimenter	src/Openflow/openflow-1.2.h	/^    ovs_be32 experimenter;    \/* Experimenter ID which takes the same form$/;"	m	struct:ofp12_experimenter_stats_header
experimenter	src/Openflow/openflow-1.2.h	/^    ovs_be32 experimenter; \/* Experimenter ID which takes the same$/;"	m	struct:ofp12_oxm_experimenter_header
experimenter	src/Openflow/openflow-1.3.h	/^    ovs_be32    experimenter; \/* Experimenter ID which takes the same form as$/;"	m	struct:ofp13_meter_band_experimenter
experimenter	src/Openflow/openflow-1.3.h	/^    ovs_be32    experimenter; \/* Experimenter ID which takes the same form$/;"	m	struct:ofp13_table_feature_prop_experimenter
experimenter	src/Openflow/openflow-1.4.h	/^    ovs_be32        experimenter;  \/* Experimenter ID which takes the same$/;"	m	struct:ofp14_async_config_prop_experimenter
experimenter	src/Openflow/openflow-1.4.h	/^    ovs_be32        experimenter; \/* Experimenter ID which takes the same$/;"	m	struct:ofp14_role_prop_experimenter
ext	src/httpserver/wrlib/misc.h	/^	const char	*ext;$/;"	m	struct:__anon9
feature_reply_handler	src/mf_msg_handler.c	/^void feature_reply_handler(struct q_node* qn)$/;"	f
feature_reply_handler_list_head	src/mf_msg_handler.h	/^	struct single_msg_handler * feature_reply_handler_list_head;$/;"	m	struct:msg_handlers	typeref:struct:msg_handlers::single_msg_handler
feature_request_xid	src/mf_switch.h	/^	uint32_t feature_request_xid;$/;"	m	struct:mf_switch
fileSet	src/httpserver/wrlib/request.c	/^static int fileSet(char *buf ,const WrHttp *pHttp)$/;"	f	file:
filename	src/mf_utilities.h	/^    UINT1 filename[128];$/;"	m	struct:st_dhcp
find_lb_end	src/httpserver/wrlib/wrstring.h	/^static char* find_lb_end(char *pBuf)$/;"	f
fix_directory_separators	src/httpserver/wrlib/mg_compat.c	/^fix_directory_separators(char *path)$/;"	f	file:
flags	src/Openflow/openflow-1.0.h	/^    ovs_be16 flags;               \/* One of OFPFF_*. *\/$/;"	m	struct:ofp10_flow_mod
flags	src/Openflow/openflow-1.0.h	/^    ovs_be16 flags;             \/* Requests: always 0.$/;"	m	struct:ofp10_stats_msg
flags	src/Openflow/openflow-1.1.h	/^    ovs_be16 flags;              \/* One of OFPFF_*. *\/$/;"	m	struct:ofp11_flow_mod
flags	src/Openflow/openflow-1.1.h	/^    ovs_be16 flags;             \/* OFPSF_REQ_* flags (none yet defined). *\/$/;"	m	struct:ofp11_stats_msg
flags	src/Openflow/openflow-1.1.h	/^    ovs_be16 flags;            \/* OF 1.3: Set of OFPFF*. *\/$/;"	m	struct:ofp11_flow_stats
flags	src/Openflow/openflow-1.3.h	/^    ovs_be16          flags;        \/* Set of OFPMC_* that apply. *\/$/;"	m	struct:ofp13_meter_config
flags	src/Openflow/openflow-1.3.h	/^    ovs_be16          flags;        \/* Set of OFPMF_*. *\/$/;"	m	struct:ofp13_meter_mod
flags	src/Openflow/openflow-1.4.h	/^    ovs_be16 flags;             \/* OFPMF14_*. *\/$/;"	m	struct:ofp14_flow_monitor_request
flags	src/Openflow/openflow-1.4.h	/^    ovs_be16 flags;         \/* Bitmap of OFPBF_* flags. *\/$/;"	m	struct:ofp14_bundle_ctrl_msg
flags	src/Openflow/openflow-1.4.h	/^    ovs_be32         flags;   \/* Bitmap of OFPTMPEF14_* flags *\/$/;"	m	struct:ofp14_table_mod_prop_eviction
flags	src/Openflow/openflow-common.h	/^    uint16_t flags; \/* OFPMPF_REQ_* flags. *\/$/;"	m	struct:ofp_multipart_request
flags	src/mf_utilities.h	/^    UINT2 flags;$/;"	m	struct:st_dns
flg	src/mf_utilities.h	/^    UINT2 flg;$/;"	m	struct:st_dhcp
flow_count	src/Openflow/openflow-1.3.h	/^    ovs_be32  flow_count;        \/* Number of flows bound to meter. *\/$/;"	m	struct:ofp13_meter_stats
flow_count	src/Openflow/openflow-common.h	/^    ovs_be32 flow_count;      \/* Number of flows. *\/$/;"	m	struct:ofp_aggregate_stats_reply
flow_removed_mask	src/Openflow/openflow-1.3.h	/^    ovs_be32 flow_removed_mask[2];\/* Bitmasks of OFPRR_* values. *\/$/;"	m	struct:ofp13_async_config
fragoff	src/mf_utilities.h	/^    UINT2 fragoff;$/;"	m	struct:st_ip
generate_random	src/mf_utilities.c	/^uint32_t generate_random()$/;"	f
generation_id	src/Openflow/openflow-1.2.h	/^    ovs_be64 generation_id;   \/* Master Election Generation Id *\/$/;"	m	struct:ofp12_role_request
generation_id	src/Openflow/openflow-1.4.h	/^    ovs_be64 generation_id;     \/* Master Election Generation Id *\/$/;"	m	struct:ofp14_role_status
getCookie	webui/odl-rest.js	/^function getCookie(name) {$/;"	f
get_asctime	src/mf_timer.c	/^char* get_asctime()$/;"	f
get_available_value_slot	src/mf_topomgr.c	/^static struct link_node * get_available_value_slot()$/;"	f	file:
get_dpid_from_LLDP_packet	src/mf_msg_handler.c	/^static uint64_t get_dpid_from_LLDP_packet(char * buffer)$/;"	f	file:
get_head_info	src/httpserver/wrlib/analysis.c	/^const char *get_head_info(const WrHttp *pHttp ,const char *key)$/;"	f
get_mime_type	src/httpserver/wrlib/http.c	/^const char *get_mime_type(const char *path)$/;"	f
get_next_switch	src/mf_devicemgr.c	/^struct mf_switch * get_next_switch(int* loop_index)$/;"	f
get_next_switch_from_list	src/mf_devicemgr.c	/^inline static struct mf_switch * get_next_switch_from_list(struct mf_switch * sw)$/;"	f	file:
get_outport_from_LLDP_packet	src/mf_msg_handler.c	/^static uint16_t get_outport_from_LLDP_packet(char * buffer)$/;"	f	file:
get_param_info	src/httpserver/wrlib/analysis.c	/^const char *get_param_info(const WrHttp *pHttp ,const char *key)$/;"	f
get_src_mac_addr	src/mf_msg_handler.c	/^static uint64_t get_src_mac_addr(char* data)$/;"	f	file:
get_switch	src/mf_devicemgr.c	/^struct mf_switch * get_switch(uint32_t sock)$/;"	f
get_switch_by_dpid	src/mf_devicemgr.c	/^struct mf_switch * get_switch_by_dpid(uint64_t dpid)$/;"	f
get_switch_by_dpid_from_list	src/mf_devicemgr.c	/^struct mf_switch * get_switch_by_dpid_from_list(uint64_t dpid)$/;"	f
get_switch_by_host_mac	src/mf_devicemgr.c	/^struct mf_switch * get_switch_by_host_mac(uint64_t mac_addr)$/;"	f
get_switch_port_by_port_num	src/mf_devicemgr.c	/^struct ofp11_port * get_switch_port_by_port_num(struct mf_switch* sw, ovs_be32 port_num)$/;"	f
gipaddr	src/mf_utilities.h	/^    UINT4 gipaddr;  \/\/agent ip addr;$/;"	m	struct:st_dhcp
gn_htonll	src/mf_utilities.c	/^static UINT8 gn_htonll(UINT8 n)$/;"	f	file:
group_id	src/Openflow/openflow-1.1.h	/^    ovs_be32 group_id;            \/* Group identifier. *\/$/;"	m	struct:ofp11_group_mod
group_id	src/Openflow/openflow-1.1.h	/^    ovs_be32 group_id;          \/* Group identifier. *\/$/;"	m	struct:ofp11_group_desc_stats
group_id	src/Openflow/openflow-1.1.h	/^    ovs_be32 group_id;         \/* All groups if OFPG_ALL. *\/$/;"	m	struct:ofp11_group_stats_request
group_id	src/Openflow/openflow-1.1.h	/^    ovs_be32 group_id;         \/* Group identifier. *\/$/;"	m	struct:ofp11_group_stats
group_id	src/Openflow/openflow-1.5.h	/^    ovs_be32 group_id;            \/* Group identifier. *\/$/;"	m	struct:ofp15_group_desc_stats
group_id	src/Openflow/openflow-1.5.h	/^    ovs_be32 group_id;            \/* Group identifier. *\/$/;"	m	struct:ofp15_group_mod
gs	src/Openflow/openflow-1.3.h	/^    struct ofp11_group_stats gs;$/;"	m	struct:ofp13_group_stats	typeref:struct:ofp13_group_stats::ofp11_group_stats
handle_connection	src/mf_socket.c	/^void* handle_connection(void* arg)$/;"	f
handler_func	src/mf_msg_handler.h	/^	msg_handler_func handler_func;$/;"	m	struct:single_msg_handler
hard_timeout	src/Openflow/openflow-1.0.h	/^    ovs_be16 hard_timeout;        \/* Max time before discarding (seconds). *\/$/;"	m	struct:ofp10_flow_mod
hard_timeout	src/Openflow/openflow-1.0.h	/^    ovs_be16 hard_timeout;    \/* Number of seconds before expiration. *\/$/;"	m	struct:ofp10_flow_stats
hard_timeout	src/Openflow/openflow-1.1.h	/^    ovs_be16 hard_timeout;       \/* Max time before discarding (seconds). *\/$/;"	m	struct:ofp11_flow_mod
hard_timeout	src/Openflow/openflow-1.1.h	/^    ovs_be16 hard_timeout;     \/* Number of seconds before expiration. *\/$/;"	m	struct:ofp11_flow_stats
hard_timeout	src/Openflow/openflow-1.2.h	/^    ovs_be16 hard_timeout;    \/* Hard timeout from original flow mod. *\/$/;"	m	struct:ofp12_flow_removed
hardwaresize	src/mf_utilities.h	/^    UINT1 hardwaresize;$/;"	m	struct:st_arp
hardwaretype	src/mf_utilities.h	/^    UINT2 hardwaretype;$/;"	m	struct:st_arp
hash_list	src/mf_devicemgr.h	/^	struct lf_list hash_list; $/;"	m	struct:host_hash_value	typeref:struct:host_hash_value::lf_list
hash_map_slot_index	src/mf_devicemgr.h	/^	uint32_t hash_map_slot_index;$/;"	m	struct:host_hash_value
hash_value_created	src/mf_devicemgr.c	/^static struct host_hash_value* hash_value_created(struct mf_switch *sw, uint32_t port_num, uint64_t mac_addr)$/;"	f	file:
hashcmp	src/httpserver/wrlib/wrhash.h	/^	int (*hashcmp)(const void *lkey ,const void *rkey);$/;"	m	struct:__anon8
hashfun	src/httpserver/wrlib/wrhash.h	/^	int (*hashfun)(const void *key);$/;"	m	struct:__anon8
head	src/mf_mempool.h	/^	struct q_node * head;$/;"	m	struct:mf_queue_node_mempool	typeref:struct:mf_queue_node_mempool::q_node
head	src/mf_rx_queue.h	/^	struct q_node* head;$/;"	m	struct:mf_rx_queue	typeref:struct:mf_rx_queue::q_node
head	src/mf_timer.h	/^	struct stopwatch * head;$/;"	m	struct:stopwatch_list	typeref:struct:stopwatch_list::stopwatch
head	src/mf_topomgr.h	/^	struct network_link * head;$/;"	m	struct:sw_link_list	typeref:struct:sw_link_list::network_link
headMap	src/httpserver/wrlib/http.h	/^	wr_hashmap headMap;$/;"	m	struct:__anon10
header	src/Openflow/openflow-1.0.h	/^    struct ofp_header header;$/;"	m	struct:ofp10_stats_msg	typeref:struct:ofp10_stats_msg::ofp_header
header	src/Openflow/openflow-1.1.h	/^    struct ofp_header header;$/;"	m	struct:ofp11_stats_msg	typeref:struct:ofp11_stats_msg::ofp_header
header	src/Openflow/openflow-1.4.h	/^    struct ofp_header header;$/;"	m	struct:ofp14_async_config	typeref:struct:ofp14_async_config::ofp_header
header	src/Openflow/openflow-common.h	/^    struct ofp_header header;   \/* Type OFPT_VENDOR or OFPT_EXPERIMENTER. *\/$/;"	m	struct:ofp_vendor_header	typeref:struct:ofp_vendor_header::ofp_header
header	src/Openflow/openflow-common.h	/^    struct ofp_header header;$/;"	m	struct:ofp_multipart_request	typeref:struct:ofp_multipart_request::ofp_header
hello_msg_handler	src/mf_msg_handler.c	/^void hello_msg_handler(struct q_node* qn)$/;"	f
hello_msg_handler_list_head	src/mf_msg_handler.h	/^	struct single_msg_handler * hello_msg_handler_list_head;$/;"	m	struct:msg_handlers	typeref:struct:msg_handlers::single_msg_handler
hello_msg_stopwatch_callback	src/mf_msg_handler.c	/^void hello_msg_stopwatch_callback(void* arg) \/\/for timer function test$/;"	f
hi	src/Openflow/types.h	/^        ovs_be16 hi, lo;$/;"	m	struct:__anon2
hi	src/Openflow/types.h	/^        ovs_be32 hi, lo;$/;"	m	struct:__anon6
hi	src/Openflow/types.h	/^        uint16_t hi, lo;$/;"	m	struct:__anon1
hi	src/Openflow/types.h	/^        uint32_t hi, lo;$/;"	m	struct:__anon3
hi	src/Openflow/types.h	/^        uint64_t lo, hi;$/;"	m	struct:__anon4::__anon5
hlen	src/mf_utilities.h	/^    UINT1 hlen;$/;"	m	struct:st_dhcp
hlen	src/mf_utilities.h	/^    UINT1 hlen;$/;"	m	struct:st_ip
hop_num	src/mf_topomgr.h	/^	uint16_t hop_num;$/;"	m	struct:path_link_list
hops	src/mf_utilities.h	/^    UINT1 hops;$/;"	m	struct:st_dhcp
host_array_slot_index	src/mf_devicemgr.h	/^	uint32_t host_array_slot_index;$/;"	m	struct:host_hash_value
host_hash_value	src/mf_devicemgr.h	/^struct host_hash_value$/;"	s
host_hash_value_add	src/mf_devicemgr.c	/^struct host_hash_value* host_hash_value_add(struct mf_switch * sw, uint32_t port_num, uint64_t mac_addr)$/;"	f
hostname	src/mf_utilities.h	/^    UINT1 hostname[64];$/;"	m	struct:st_dhcp
hosts	src/mf_switch.h	/^	struct lf_list hosts;$/;"	m	struct:mf_switch	typeref:struct:mf_switch::lf_list
htype	src/mf_utilities.h	/^    UINT1 htype;$/;"	m	struct:st_dhcp
hw_addr	src/Openflow/openflow-1.0.h	/^    uint8_t hw_addr[OFP_ETH_ALEN]; \/* The hardware address is not$/;"	m	struct:ofp10_port_mod
hw_addr	src/Openflow/openflow-1.0.h	/^    uint8_t hw_addr[OFP_ETH_ALEN];$/;"	m	struct:ofp10_phy_port
hw_addr	src/Openflow/openflow-1.1.h	/^	uint8_t hw_addr[OFP_ETH_ALEN];$/;"	m	struct:ofp11_port
hw_addr	src/Openflow/openflow-1.1.h	/^    uint8_t hw_addr[OFP_ETH_ALEN]; \/* The hardware address is not$/;"	m	struct:ofp11_port_mod
hw_addr	src/Openflow/openflow-1.4.h	/^    uint8_t hw_addr[OFP_ETH_ALEN];$/;"	m	struct:ofp14_port
hw_addr	src/Openflow/openflow-1.4.h	/^    uint8_t hw_addr[OFP_ETH_ALEN];$/;"	m	struct:ofp14_port_mod
icmp_t	src/mf_utilities.h	/^}icmp_t;$/;"	t	typeref:struct:st_imcp
iconv	src/httpserver/wrlib/misc.c	/^static int iconv(char *src, int sourceCodePage,int targetCodePage)$/;"	f	file:
id	src/mf_utilities.h	/^    UINT2 id;$/;"	m	struct:st_dns
id	src/mf_utilities.h	/^    UINT2 id;$/;"	m	struct:st_imcp
idle_timeout	src/Openflow/openflow-1.0.h	/^    ovs_be16 idle_timeout;        \/* Idle time before discarding (seconds). *\/$/;"	m	struct:ofp10_flow_mod
idle_timeout	src/Openflow/openflow-1.0.h	/^    ovs_be16 idle_timeout;    \/* Idle timeout from original flow mod. *\/$/;"	m	struct:ofp10_flow_removed
idle_timeout	src/Openflow/openflow-1.0.h	/^    ovs_be16 idle_timeout;    \/* Number of seconds idle before expiration. *\/$/;"	m	struct:ofp10_flow_stats
idle_timeout	src/Openflow/openflow-1.1.h	/^    ovs_be16 idle_timeout;       \/* Idle time before discarding (seconds). *\/$/;"	m	struct:ofp11_flow_mod
idle_timeout	src/Openflow/openflow-1.1.h	/^    ovs_be16 idle_timeout;     \/* Number of seconds idle before expiration. *\/$/;"	m	struct:ofp11_flow_stats
idle_timeout	src/Openflow/openflow-1.1.h	/^    ovs_be16 idle_timeout;    \/* Idle timeout from original flow mod. *\/$/;"	m	struct:ofp11_flow_removed
idle_timeout	src/Openflow/openflow-1.2.h	/^    ovs_be16 idle_timeout;    \/* Idle timeout from original flow mod. *\/$/;"	m	struct:ofp12_flow_removed
if_host_exist	src/mf_devicemgr.c	/^static inline uint8_t if_host_exist(struct host_hash_value * value, struct mf_switch * sw, uint32_t port_num, uint64_t mac_addr)$/;"	f	file:
ifindex	src/mf_utilities.h	/^    UINT1 ifindex;$/;"	m	struct:st_ethpkt_info
importance	src/Openflow/openflow-1.1.h	/^    ovs_be16 importance;         \/* Eviction precedence (OF1.4+). *\/$/;"	m	struct:ofp11_flow_mod
importance	src/Openflow/openflow-1.1.h	/^    ovs_be16 importance;       \/* Eviction precedence (OF1.4+). *\/$/;"	m	struct:ofp11_flow_stats
in_phy_port	src/Openflow/openflow-1.1.h	/^    ovs_be32 in_phy_port;   \/* Physical Port on which frame was received. *\/$/;"	m	struct:ofp11_packet_in
in_port	src/Openflow/openflow-1.0.h	/^    ovs_be16 in_port;             \/* Packet's input port (OFPP_NONE if none). *\/$/;"	m	struct:ofp10_packet_out
in_port	src/Openflow/openflow-1.0.h	/^    ovs_be16 in_port;          \/* Input switch port. *\/$/;"	m	struct:ofp10_match
in_port	src/Openflow/openflow-1.0.h	/^    ovs_be16 in_port;       \/* Port on which frame was received. *\/$/;"	m	struct:ofp10_packet_in
in_port	src/Openflow/openflow-1.1.h	/^    ovs_be32 in_port;          \/* Input switch port. *\/$/;"	m	struct:ofp11_match
in_port	src/Openflow/openflow-1.1.h	/^    ovs_be32 in_port;         \/* Packet's input port or OFPP_CONTROLLER. *\/$/;"	m	struct:ofp11_packet_out
in_port	src/Openflow/openflow-1.1.h	/^    ovs_be32 in_port;       \/* Port on which frame was received. *\/$/;"	m	struct:ofp11_packet_in
index	src/httpserver/wrlib/wrmpool.h	/^	int index;\/*curIndex*\/$/;"	m	struct:__anon7
insert_stopwatch	src/mf_timer.c	/^void insert_stopwatch(struct stopwatch* stopwatch, struct stopwatch_list* swl)$/;"	f
instructions	src/Openflow/openflow-1.1.h	/^    ovs_be32 instructions;   \/* Bitmap of OFPIT_* values supported. *\/$/;"	m	struct:ofp11_table_stats
instructions	src/Openflow/openflow-1.2.h	/^    ovs_be32 instructions;   \/* Bitmap of OFPIT_* values supported. *\/$/;"	m	struct:ofp12_table_stats
inverse_memcpy	src/mf_utilities.c	/^inline void inverse_memcpy(void* dst, void* src, uint16_t len)$/;"	f
ip_t	src/mf_utilities.h	/^}ip_t;$/;"	t	typeref:struct:st_ip
ipid	src/mf_utilities.h	/^    UINT2 ipid;$/;"	m	struct:st_ip
isHeadEnd	src/httpserver/wrlib/wrio.c	/^static int isHeadEnd(char *pBuf ,char *cPos ,int len)$/;"	f	file:
is_feature_request_sent	src/mf_switch.h	/^	uint8_t is_feature_request_sent;$/;"	m	struct:mf_switch
is_hello_sent	src/mf_switch.h	/^	uint8_t is_hello_sent;$/;"	m	struct:mf_switch
is_occupied	src/mf_devicemgr.h	/^	uint8_t is_occupied;$/;"	m	struct:host_hash_value
is_occupied	src/mf_rx_queue.h	/^	uint8_t is_occupied;$/;"	m	struct:q_node
is_occupied	src/mf_topomgr.h	/^	uint8_t is_occupied;$/;"	m	struct:link_node
is_occupied	src/mf_topomgr.h	/^	uint8_t is_occupied;$/;"	m	struct:network_link
is_port_desc_request_sent	src/mf_switch.h	/^	uint8_t is_port_desc_request_sent;$/;"	m	struct:mf_switch
key	src/httpserver/wrlib/wrhash.h	/^	void *key;$/;"	m	struct:_slist
label_ptr	src/mf_utilities.h	/^    UINT2 label_ptr;$/;"	m	struct:st_dns_a
len	src/Openflow/openflow-1.0.h	/^    ovs_be16 len;               \/* Length in bytes of this queue desc. *\/$/;"	m	struct:ofp10_packet_queue
len	src/Openflow/openflow-1.1.h	/^    ovs_be16 len;                    \/* Length the bucket in bytes, including$/;"	m	struct:ofp11_bucket
len	src/Openflow/openflow-1.1.h	/^    ovs_be16 len;                  \/* Length of this struct in bytes. *\/$/;"	m	struct:ofp11_instruction_goto_table
len	src/Openflow/openflow-1.1.h	/^    ovs_be16 len;               \/* Length of this struct in bytes *\/$/;"	m	struct:ofp11_instruction_experimenter
len	src/Openflow/openflow-1.1.h	/^    ovs_be16 len;               \/* Length of this struct in bytes. *\/$/;"	m	struct:ofp11_instruction
len	src/Openflow/openflow-1.1.h	/^    ovs_be16 len;               \/* Length of this struct in bytes. *\/$/;"	m	struct:ofp11_instruction_actions
len	src/Openflow/openflow-1.1.h	/^    ovs_be16 len;               \/* Length of this struct in bytes. *\/$/;"	m	struct:ofp11_instruction_write_metadata
len	src/Openflow/openflow-1.2.h	/^    ovs_be16 len;          \/* Length in bytes of this queue desc. *\/$/;"	m	struct:ofp12_packet_queue
len	src/Openflow/openflow-1.3.h	/^    ovs_be16    len;         \/* Length in bytes of this band. *\/$/;"	m	struct:ofp13_meter_band_drop
len	src/Openflow/openflow-1.3.h	/^    ovs_be16    len;         \/* Length in bytes of this band. *\/$/;"	m	struct:ofp13_meter_band_dscp_remark
len	src/Openflow/openflow-1.3.h	/^    ovs_be16    len;         \/* Length in bytes of this band. *\/$/;"	m	struct:ofp13_meter_band_experimenter
len	src/Openflow/openflow-1.3.h	/^    ovs_be16  len;               \/* Length in bytes of this stats. *\/$/;"	m	struct:ofp13_meter_stats
len	src/Openflow/openflow-1.3.h	/^    ovs_be16 len;               \/* Length is 8. *\/$/;"	m	struct:ofp13_instruction_meter
len	src/Openflow/openflow-1.3.h	/^    ovs_be16 len;        \/* Length in bytes of this band. *\/$/;"	m	struct:ofp13_meter_band_header
len	src/Openflow/openflow-1.5.h	/^    ovs_be16 len;                   \/* Length the bucket in bytes, including$/;"	m	struct:ofp15_bucket
len	src/Openflow/openflow-common.h	/^    ovs_be16 len;      \/* Length of property, including this header. *\/$/;"	m	struct:ofp_queue_prop_header
len	src/Openflow/openflow-common.h	/^    uint16_t len; \/* Length is 16. *\/$/;"	m	struct:ofp_action_output
len	src/Openflow/openflow-common.h	/^    uint16_t len; \/* Length of action, including this$/;"	m	struct:ofp_action_header
len	src/httpserver/wrlib/wrmpool.h	/^	size_t len;\/*capacity*\/$/;"	m	struct:__anon7
len	src/mf_utilities.h	/^    UINT1   len;$/;"	m	struct:st_dns_q
len	src/mf_utilities.h	/^    UINT1 len;$/;"	m	struct:st_tlv
len	src/mf_utilities.h	/^    UINT2 len;$/;"	m	struct:st_dns_a
len	src/mf_utilities.h	/^    UINT2 len;$/;"	m	struct:st_ethpkt_info
len	src/mf_utilities.h	/^    UINT2 len;$/;"	m	struct:st_ip
len	src/mf_utilities.h	/^    UINT2 len;$/;"	m	struct:st_udp
length	src/Openflow/openflow-1.0.h	/^    ovs_be16 length;          \/* Length of this entry. *\/$/;"	m	struct:ofp10_flow_stats
length	src/Openflow/openflow-1.1.h	/^    ovs_be16 length;            \/* Length of this entry. *\/$/;"	m	struct:ofp11_group_desc_stats
length	src/Openflow/openflow-1.1.h	/^    ovs_be16 length;           \/* Length of match *\/$/;"	m	struct:ofp11_match_header
length	src/Openflow/openflow-1.1.h	/^    ovs_be16 length;           \/* Length of this entry. *\/$/;"	m	struct:ofp11_flow_stats
length	src/Openflow/openflow-1.1.h	/^    ovs_be16 length;           \/* Length of this entry. *\/$/;"	m	struct:ofp11_group_stats
length	src/Openflow/openflow-1.3.h	/^    ovs_be16          length;       \/* Length of this entry. *\/$/;"	m	struct:ofp13_meter_config
length	src/Openflow/openflow-1.3.h	/^    ovs_be16    length;   \/* Length in bytes of this property. *\/$/;"	m	struct:ofp13_table_feature_prop_experimenter
length	src/Openflow/openflow-1.3.h	/^    ovs_be16    length;  \/* Length in bytes of this property. *\/$/;"	m	struct:ofp13_table_feature_prop_instructions
length	src/Openflow/openflow-1.3.h	/^    ovs_be16    length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp13_table_feature_prop_actions
length	src/Openflow/openflow-1.3.h	/^    ovs_be16    length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp13_table_feature_prop_header
length	src/Openflow/openflow-1.3.h	/^    ovs_be16    length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp13_table_feature_prop_next_tables
length	src/Openflow/openflow-1.3.h	/^    ovs_be16    length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp13_table_feature_prop_oxm
length	src/Openflow/openflow-1.3.h	/^    ovs_be16 length;          \/* Length is padded to 64 bits. *\/$/;"	m	struct:ofp13_table_features
length	src/Openflow/openflow-1.4.h	/^    ovs_be16         length;  \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
length	src/Openflow/openflow-1.4.h	/^    ovs_be16         length;  \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
length	src/Openflow/openflow-1.4.h	/^    ovs_be16         length;  \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_table_mod_prop_eviction
length	src/Openflow/openflow-1.4.h	/^    ovs_be16         length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_table_mod_prop_vacancy
length	src/Openflow/openflow-1.4.h	/^    ovs_be16        length;     \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_async_config_prop_experimenter
length	src/Openflow/openflow-1.4.h	/^    ovs_be16        length;     \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_role_prop_experimenter
length	src/Openflow/openflow-1.4.h	/^    ovs_be16      length;     \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_port_mod_prop_ethernet
length	src/Openflow/openflow-1.4.h	/^    ovs_be16    length;     \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_async_config_prop_header
length	src/Openflow/openflow-1.4.h	/^    ovs_be16    length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_async_config_prop_reasons
length	src/Openflow/openflow-1.4.h	/^    ovs_be16 length;         \/* Length of this entry. *\/$/;"	m	struct:ofp14_port_stats
length	src/Openflow/openflow-1.4.h	/^    ovs_be16 length;         \/* Length of this entry. *\/$/;"	m	struct:ofp14_queue_stats
length	src/Openflow/openflow-1.4.h	/^    ovs_be16 length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_role_prop_header
length	src/Openflow/openflow-1.4.h	/^    ovs_be16 length;$/;"	m	struct:ofp14_port
length	src/Openflow/openflow-1.5.h	/^    ovs_be16         length;  \/* 8. *\/$/;"	m	struct:ofp15_group_bucket_prop_watch
length	src/Openflow/openflow-1.5.h	/^    ovs_be16         length;  \/* 8. *\/$/;"	m	struct:ofp15_group_bucket_prop_weight
length	src/Openflow/openflow-1.5.h	/^    ovs_be16 length;              \/* Length of this entry. *\/$/;"	m	struct:ofp15_group_desc_stats
length	src/Openflow/openflow-common.h	/^    ovs_be16    length;      \/* Length in bytes of this element. *\/$/;"	m	struct:ofp_hello_elem_header
length	src/Openflow/openflow-common.h	/^    ovs_be16 length;    \/* Length including this ofp_header. *\/$/;"	m	struct:ofp_header
lengthSet	src/httpserver/wrlib/request.c	/^static int lengthSet(char *buf ,int len)$/;"	f	file:
lf_list	src/mf_lf_list.h	/^struct lf_list$/;"	s
lf_list_delete	src/mf_lf_list.c	/^struct lf_list * lf_list_delete(struct lf_list* i, struct lf_list* l)$/;"	f
lf_list_insert	src/mf_lf_list.c	/^void lf_list_insert(struct lf_list* i, struct lf_list* l)$/;"	f
lf_list_pop	src/mf_lf_list.c	/^struct lf_list * lf_list_pop(struct lf_list *l)$/;"	f
lf_list_search_node	src/mf_lf_list.c	/^struct lf_list * lf_list_search_node(struct lf_list* l, compare cmp, void* arg)$/;"	f
likely	src/mf_utilities.h	27;"	d
link	src/Openflow/openflow-1.1.h	/^	struct network_link * link;$/;"	m	struct:ofp11_port	typeref:struct:ofp11_port::network_link
link	webui/odl-webui.js	/^var link = svg.selectAll(".link"),$/;"	v
link_list	src/mf_switch.h	/^	struct sw_link_list link_list;$/;"	m	struct:mf_switch	typeref:struct:mf_switch::sw_link_list
link_node	src/mf_topomgr.h	/^struct link_node$/;"	s
link_node_create	src/mf_topomgr.c	/^struct link_node * link_node_create(struct mf_switch* sw, struct ofp11_port* port)$/;"	f
link_num	src/mf_topomgr.h	/^	uint16_t link_num;$/;"	m	struct:sw_link_list
list	tests/lock_free_list_test.c	/^	struct lf_list list;$/;"	m	struct:list_node	typeref:struct:list_node::lf_list	file:
list_node	tests/lock_free_list_test.c	/^struct list_node$/;"	s	file:
listen_sockfd	src/mf_controller.c	/^uint32_t listen_sockfd;$/;"	v
liveSet	src/httpserver/wrlib/request.c	/^static int liveSet(char *buf ,const WrHttp *pHttp ,int closeflag)$/;"	f	file:
lldp_chassis_id_subtype	src/mf_utilities.h	/^enum lldp_chassis_id_subtype {$/;"	g
lldp_msg_handler	src/mf_msg_handler.c	/^void lldp_msg_handler(struct q_node* qn, uint32_t xid, char* buffer, uint16_t total_len)$/;"	f
lldp_port_id_subtype	src/mf_utilities.h	/^enum lldp_port_id_subtype {$/;"	g
lldp_t	src/mf_utilities.h	/^}lldp_t;$/;"	t	typeref:struct:st_lldp
lldp_tlv_type	src/mf_utilities.h	/^enum lldp_tlv_type{$/;"	g
lo	src/Openflow/types.h	/^        ovs_be16 hi, lo;$/;"	m	struct:__anon2
lo	src/Openflow/types.h	/^        ovs_be32 hi, lo;$/;"	m	struct:__anon6
lo	src/Openflow/types.h	/^        uint16_t hi, lo;$/;"	m	struct:__anon1
lo	src/Openflow/types.h	/^        uint32_t hi, lo;$/;"	m	struct:__anon3
lo	src/Openflow/types.h	/^        uint64_t lo, hi;$/;"	m	struct:__anon4::__anon5
log_debug_info	src/dbg.h	21;"	d
log_err	src/dbg.h	16;"	d
log_info	src/dbg.h	20;"	d
log_mutex	src/mf_logger.h	/^pthread_mutex_t log_mutex;$/;"	v
log_warn	src/dbg.h	18;"	d
lookup_count	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 lookup_count;  \/* # of packets looked up in table. *\/$/;"	m	struct:ofp10_table_stats
lookup_count	src/Openflow/openflow-1.1.h	/^    ovs_be64 lookup_count;   \/* Number of packets looked up in table. *\/$/;"	m	struct:ofp11_table_stats
lookup_count	src/Openflow/openflow-1.2.h	/^    ovs_be64 lookup_count;   \/* Number of packets looked up in table. *\/$/;"	m	struct:ofp12_table_stats
lookup_count	src/Openflow/openflow-1.3.h	/^    ovs_be64 lookup_count;  \/* Number of packets looked up in table. *\/$/;"	m	struct:ofp13_table_stats
lseek	src/httpserver/wrlib/mg_compat.h	45;"	d
mac_addr	src/mf_devicemgr.h	/^	uint64_t mac_addr;$/;"	m	struct:host_hash_value
mac_addr_hash	src/mf_devicemgr.c	/^inline uint32_t mac_addr_hash(uint64_t key)$/;"	f
main	src/httpserver/main.c	/^int main(){$/;"	f
main	src/main.c	/^int main(int argc, char** argv)$/;"	f
main	tests/devicemgr.c	/^int main()$/;"	f
main	tests/host_hash_test.c	/^int main()$/;"	f
main	tests/inverse_memcpy_test.c	/^int main()$/;"	f
main	tests/lock_free_list_test.c	/^int main()$/;"	f
main	tests/log_test.c	/^int main()$/;"	f
main	tests/socket_array_test.c	/^int main(int argc, char** argv){$/;"	f
main	tests/socket_client.c	/^int main(int argc, char** argv)$/;"	f
main	tests/socket_test.c	/^int main(int argc, char** argv){$/;"	f
main	tests/timer_test.c	/^int main()$/;"	f
main	tests/topomgr_test.c	/^int main()$/;"	f
main	tests/wrapper_test.c	/^int main()$/;"	f
mark	src/mf_lf_list.h	/^	char mark;$/;"	m	struct:lf_list
mask	src/Openflow/openflow-1.0.h	/^    ovs_be32 mask;          \/* Bitmap of OFPPC_* flags to be changed. *\/$/;"	m	struct:ofp10_port_mod
mask	src/Openflow/openflow-1.1.h	/^    ovs_be32 mask;          \/* Bitmap of OFPPC_* flags to be changed. *\/$/;"	m	struct:ofp11_port_mod
mask	src/Openflow/openflow-1.4.h	/^    ovs_be32    mask;   \/* Bitmasks of reason values. *\/$/;"	m	struct:ofp14_async_config_prop_reasons
mask	src/Openflow/openflow-1.4.h	/^    ovs_be32 mask;          \/* Bitmap of OFPPC_* flags to be changed. *\/$/;"	m	struct:ofp14_port_mod
match	src/Openflow/openflow-1.0.h	/^    struct ofp10_match match;    \/* Fields to match *\/$/;"	m	struct:ofp10_flow_mod	typeref:struct:ofp10_flow_mod::ofp10_match
match	src/Openflow/openflow-1.0.h	/^    struct ofp10_match match; \/* Description of fields. *\/$/;"	m	struct:ofp10_flow_removed	typeref:struct:ofp10_flow_removed::ofp10_match
match	src/Openflow/openflow-1.0.h	/^    struct ofp10_match match; \/* Description of fields. *\/$/;"	m	struct:ofp10_flow_stats	typeref:struct:ofp10_flow_stats::ofp10_match
match	src/Openflow/openflow-1.0.h	/^    struct ofp10_match match; \/* Fields to match. *\/$/;"	m	struct:ofp10_flow_stats_request	typeref:struct:ofp10_flow_stats_request::ofp10_match
match	src/Openflow/openflow-1.1.h	/^    ovs_be32 match;          \/* Bitmap of OFPFMF_* that indicate the fields$/;"	m	struct:ofp11_table_stats
match	src/Openflow/openflow-1.2.h	/^    ovs_be64 match;          \/* Bitmap of (1 << OFPXMT_*) that indicate the$/;"	m	struct:ofp12_table_stats
matched_count	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 matched_count; \/* Number of packets that hit table. *\/$/;"	m	struct:ofp10_table_stats
matched_count	src/Openflow/openflow-1.1.h	/^    ovs_be64 matched_count;  \/* Number of packets that hit table. *\/$/;"	m	struct:ofp11_table_stats
matched_count	src/Openflow/openflow-1.2.h	/^    ovs_be64 matched_count;  \/* Number of packets that hit table. *\/$/;"	m	struct:ofp12_table_stats
matched_count	src/Openflow/openflow-1.3.h	/^    ovs_be64 matched_count; \/* Number of packets that hit table. *\/$/;"	m	struct:ofp13_table_stats
max_bands	src/Openflow/openflow-1.3.h	/^    uint8_t    max_bands;     \/* Maximum bands per meters *\/$/;"	m	struct:ofp13_meter_features
max_color	src/Openflow/openflow-1.3.h	/^    uint8_t    max_color;     \/* Maximum color value *\/$/;"	m	struct:ofp13_meter_features
max_entries	src/Openflow/openflow-1.0.h	/^    ovs_be32 max_entries;    \/* Max number of entries supported. *\/$/;"	m	struct:ofp10_table_stats
max_entries	src/Openflow/openflow-1.1.h	/^    ovs_be32 max_entries;    \/* Max number of entries supported. *\/$/;"	m	struct:ofp11_table_stats
max_entries	src/Openflow/openflow-1.2.h	/^    ovs_be32 max_entries;    \/* Max number of entries supported. *\/$/;"	m	struct:ofp12_table_stats
max_entries	src/Openflow/openflow-1.3.h	/^    ovs_be32 max_entries;     \/* Max number of entries supported. *\/$/;"	m	struct:ofp13_table_features
max_groups	src/Openflow/openflow-1.2.h	/^    ovs_be32  max_groups[OFPGT12_N_TYPES]; \/* Max number of groups. *\/$/;"	m	struct:ofp12_group_features_stats
max_len	src/Openflow/openflow-common.h	/^    uint16_t max_len; \/* Max length to send to controller. *\/$/;"	m	struct:ofp_action_output
max_meter	src/Openflow/openflow-1.3.h	/^    ovs_be32   max_meter;     \/* Maximum number of meters. *\/$/;"	m	struct:ofp13_meter_features
max_speed	src/Openflow/openflow-1.1.h	/^	ovs_be32 max_speed;     \/* Max port bitrate in kbps *\/$/;"	m	struct:ofp11_port
max_speed	src/Openflow/openflow-1.4.h	/^    ovs_be32 max_speed;     \/* Max port bitrate in kbps *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
mem_manage_list	src/mf_devicemgr.h	/^	struct lf_list mem_manage_list;$/;"	m	struct:host_hash_value	typeref:struct:host_hash_value::lf_list
mem_manage_list	src/mf_topomgr.h	/^	struct lf_list mem_manage_list;	\/\/Keep this at the beginning of this structure$/;"	m	struct:link_node	typeref:struct:link_node::lf_list
mem_manage_list	src/mf_topomgr.h	/^	struct lf_list mem_manage_list;$/;"	m	struct:network_link	typeref:struct:network_link::lf_list
metadata	src/Openflow/openflow-1.1.h	/^    ovs_be64 metadata;          \/* Metadata value to write *\/$/;"	m	struct:ofp11_instruction_write_metadata
metadata	src/Openflow/openflow-1.1.h	/^    ovs_be64 metadata;         \/* Metadata passed between tables. *\/$/;"	m	struct:ofp11_match
metadata_mask	src/Openflow/openflow-1.1.h	/^    ovs_be64 metadata_mask;     \/* Metadata write bitmask *\/$/;"	m	struct:ofp11_instruction_write_metadata
metadata_mask	src/Openflow/openflow-1.1.h	/^    ovs_be64 metadata_mask;    \/* Mask for metadata. *\/$/;"	m	struct:ofp11_match
metadata_match	src/Openflow/openflow-1.2.h	/^    ovs_be64 metadata_match; \/* Bits of metadata table can match. *\/$/;"	m	struct:ofp12_table_stats
metadata_match	src/Openflow/openflow-1.3.h	/^    ovs_be64 metadata_match;  \/* Bits of metadata table can match. *\/$/;"	m	struct:ofp13_table_features
metadata_write	src/Openflow/openflow-1.2.h	/^    ovs_be64 metadata_write; \/* Bits of metadata table can write. *\/$/;"	m	struct:ofp12_table_stats
metadata_write	src/Openflow/openflow-1.3.h	/^    ovs_be64 metadata_write;  \/* Bits of metadata table can write. *\/$/;"	m	struct:ofp13_table_features
meter_id	src/Openflow/openflow-1.3.h	/^    ovs_be32          meter_id;     \/* Meter instance. *\/$/;"	m	struct:ofp13_meter_config
meter_id	src/Openflow/openflow-1.3.h	/^    ovs_be32          meter_id;     \/* Meter instance. *\/$/;"	m	struct:ofp13_meter_mod
meter_id	src/Openflow/openflow-1.3.h	/^    ovs_be32  meter_id;          \/* Meter instance. *\/$/;"	m	struct:ofp13_meter_stats
meter_id	src/Openflow/openflow-1.3.h	/^    ovs_be32 meter_id;          \/* Meter instance. *\/$/;"	m	struct:ofp13_instruction_meter
meter_id	src/Openflow/openflow-1.3.h	/^    ovs_be32 meter_id;  \/* Meter instance, or OFPM_ALL. *\/$/;"	m	struct:ofp13_meter_multipart_request
method	src/httpserver/wrlib/http.h	/^	char * method;$/;"	m	struct:__anon10
methods	src/httpserver/wrlib/misc.h	/^static const char *methods[3]={"HEAD" ,"GET" ,"POST"};$/;"	v
mf_controller_init	src/mf_api.h	/^void mf_controller_init()$/;"	f
mf_default_log_path	src/mf_logger.h	7;"	d
mf_devicemgr	src/mf_devicemgr.h	/^struct mf_devicemgr$/;"	s
mf_devicemgr_create	src/mf_devicemgr.c	/^void mf_devicemgr_create()$/;"	f
mf_devicemgr_destroy	src/mf_devicemgr.c	/^void mf_devicemgr_destroy()$/;"	f
mf_listen_socket_create	src/mf_socket.c	/^uint32_t mf_listen_socket_create()$/;"	f
mf_logger_close	src/mf_logger.c	/^void mf_logger_close()$/;"	f
mf_logger_open	src/mf_logger.c	/^void mf_logger_open(const char* path)$/;"	f
mf_memcpy	src/mf_wrapper.c	/^inline void mf_memcpy(void *dst, void *src, unsigned int n) $/;"	f
mf_mov16	src/mf_wrapper.c	/^void mf_mov16(uint8_t * dst, const uint8_t * src)$/;"	f
mf_mov32	src/mf_wrapper.c	/^void mf_mov32(uint8_t * dst, const uint8_t *src)$/;"	f
mf_mov64	src/mf_wrapper.c	/^void mf_mov64(uint8_t * dst, const uint8_t *src)$/;"	f
mf_queue_node_mempool	src/mf_mempool.h	/^struct mf_queue_node_mempool$/;"	s
mf_queue_node_mempool_create	src/mf_mempool.c	/^struct mf_queue_node_mempool * mf_queue_node_mempool_create()$/;"	f
mf_rx_queue	src/mf_rx_queue.h	/^struct mf_rx_queue{$/;"	s
mf_socket_bind	src/mf_socket.c	/^void mf_socket_bind(uint32_t sock)$/;"	f
mf_switch	src/mf_switch.h	/^struct mf_switch$/;"	s
mf_switch_create	src/mf_switch.c	/^struct mf_switch * mf_switch_create(uint32_t sockfd)$/;"	f
mf_switch_destory	src/mf_switch.c	/^void mf_switch_destory(struct mf_switch * sw)$/;"	f
mf_switch_map	src/mf_devicemgr.h	/^	struct mf_switch * mf_switch_map[MAX_MF_SWITCH_NUM];$/;"	m	struct:mf_devicemgr	typeref:struct:mf_devicemgr::mf_switch
mf_topomgr	src/mf_topomgr.h	/^struct mf_topomgr$/;"	s
mf_topomgr_create	src/mf_topomgr.c	/^void mf_topomgr_create()$/;"	f
mf_topomgr_destroy	src/mf_topomgr.c	/^void mf_topomgr_destroy()$/;"	f
mf_write_log	src/mf_logger.c	/^void mf_write_log(char* msg)$/;"	f
mf_write_socket_log	src/mf_logger.c	/^void mf_write_socket_log(char* msg, int socketfd)$/;"	f
mimeMap	src/httpserver/wrlib/http.h	/^	wr_hashmap mimeMap;$/;"	m	struct:__anon12
mmt	src/httpserver/wrlib/misc.h	/^} mmt[] = {$/;"	v	typeref:struct:__anon9
monitor_id	src/Openflow/openflow-1.4.h	/^    ovs_be32 monitor_id;        \/* Controller-assigned ID for this monitor. *\/$/;"	m	struct:ofp14_flow_monitor_request
mouseout	webui/odl-webui.js	/^function mouseout(d) {$/;"	f
mouseover	webui/odl-webui.js	/^function mouseover(d) {$/;"	f
mp	src/httpserver/wrlib/http.h	/^	wr_mpool mp;$/;"	m	struct:__anon10
mpls_label	src/Openflow/openflow-1.1.h	/^    ovs_be32 mpls_label;       \/* MPLS label. *\/$/;"	m	struct:ofp11_match
mpls_tc	src/Openflow/openflow-1.1.h	/^    uint8_t mpls_tc;           \/* MPLS TC. *\/$/;"	m	struct:ofp11_match
mpool	src/httpserver/wrlib/wrhash.h	/^	wr_mpool *mpool;$/;"	m	struct:__anon8
msg_handler	src/mf_msg_handler.c	/^void msg_handler(uint8_t type, uint8_t version, struct q_node* qn)$/;"	f
msg_handler_exec	src/mf_msg_handler.c	/^static void msg_handler_exec(struct single_msg_handler * handler_head, struct q_node * qn)$/;"	f	file:
msg_handler_func	src/mf_msg_handler.h	/^typedef void (*msg_handler_func)(struct q_node*);$/;"	t
msg_handler_func_register	src/mf_msg_handler.c	/^void msg_handler_func_register(enum MSG_HANDLER_TYPE type, msg_handler_func func)$/;"	f
msg_handler_func_unregister	src/mf_msg_handler.c	/^void msg_handler_func_unregister(enum MSG_HANDLER_TYPE type, msg_handler_func func)$/;"	f
msg_handlers	src/mf_msg_handler.h	/^struct msg_handlers$/;"	s
msg_handlers_init	src/mf_msg_handler.c	/^void msg_handlers_init()$/;"	f
mu_assert	src/minunit.h	11;"	d
mu_run_test	src/minunit.h	12;"	d
mu_suite_start	src/minunit.h	9;"	d
multipart_reply_handler	src/mf_msg_handler.c	/^void multipart_reply_handler(struct q_node* qn)$/;"	f
n_buffers	src/Openflow/openflow-common.h	/^    ovs_be32 n_buffers;     \/* Max packets buffered at once. *\/$/;"	m	struct:ofp_switch_features
n_buffers	src/mf_switch.h	/^	uint32_t n_buffers;$/;"	m	struct:mf_switch
n_tables	src/Openflow/openflow-common.h	/^    uint8_t n_tables;       \/* Number of tables supported by datapath. *\/$/;"	m	struct:ofp_switch_features
n_tables	src/mf_switch.h	/^	uint8_t n_tables;$/;"	m	struct:mf_switch
name	src/Openflow/openflow-1.0.h	/^    char name[OFP_MAX_PORT_NAME_LEN]; \/* Null-terminated *\/$/;"	m	struct:ofp10_phy_port
name	src/Openflow/openflow-1.0.h	/^    char name[OFP_MAX_TABLE_NAME_LEN];$/;"	m	struct:ofp10_table_stats
name	src/Openflow/openflow-1.1.h	/^	char name[OFP_MAX_PORT_NAME_LEN]; \/* Null-terminated *\/$/;"	m	struct:ofp11_port
name	src/Openflow/openflow-1.1.h	/^    char name[OFP_MAX_TABLE_NAME_LEN];$/;"	m	struct:ofp11_table_stats
name	src/Openflow/openflow-1.2.h	/^    char name[OFP_MAX_TABLE_NAME_LEN];$/;"	m	struct:ofp12_table_stats
name	src/Openflow/openflow-1.3.h	/^    char name[OFP_MAX_TABLE_NAME_LEN];$/;"	m	struct:ofp13_table_features
name	src/Openflow/openflow-1.4.h	/^    char name[OFP_MAX_PORT_NAME_LEN]; \/* Null-terminated *\/$/;"	m	struct:ofp14_port
network_link	src/mf_topomgr.h	/^struct network_link$/;"	s
network_link_create	src/mf_topomgr.c	/^struct network_link * network_link_create(struct link_node* src, struct link_node* dst)$/;"	f
network_link_free	src/mf_topomgr.c	/^void network_link_free(struct network_link * link)$/;"	f
network_path_insert	src/mf_topomgr.c	/^void network_path_insert(struct path_link_list * list, struct network_link * link)$/;"	f
next	src/httpserver/wrlib/wrhash.h	/^	struct _slist *next;$/;"	m	struct:_slist	typeref:struct:_slist::_slist
next	src/mf_lf_list.h	/^	struct lf_list * next;  $/;"	m	struct:lf_list	typeref:struct:lf_list::lf_list
next	src/mf_msg_handler.h	/^	struct single_msg_handler * next;$/;"	m	struct:single_msg_handler	typeref:struct:single_msg_handler::single_msg_handler
next	src/mf_timer.h	/^	struct stopwatch * next;$/;"	m	struct:stopwatch	typeref:struct:stopwatch::stopwatch
next	src/mf_topomgr.h	/^	struct link_node * next; \/\/pointers for available\/used slot bi-link list$/;"	m	struct:link_node	typeref:struct:link_node::link_node
next_switch	src/mf_switch.h	/^	struct lf_list next_switch;$/;"	m	struct:mf_switch	typeref:struct:mf_switch::lf_list
nfds	src/mf_socket.c	/^uint32_t epfd, nfds;$/;"	v
node	src/Openflow/openflow-1.1.h	/^	struct link_node * node;$/;"	m	struct:ofp11_port	typeref:struct:ofp11_port::link_node
node_cache_array_size	src/mf_topomgr.h	/^	uint64_t node_cache_array_size;$/;"	m	struct:mf_topomgr
node_head	tests/lock_free_list_test.c	/^struct list_node node_head = {888, {NULL, 0}};$/;"	v	typeref:struct:list_node
node_pool	src/mf_mempool.h	/^	struct q_node node_pool[MF_QUEUE_NODE_MEMPOOL_SIZE];$/;"	m	struct:mf_queue_node_mempool	typeref:struct:mf_queue_node_mempool::q_node
ntoh_16bit	src/mf_utilities.c	/^inline uint16_t ntoh_16bit(char * ptr)$/;"	f
ntoh_32bit	src/mf_utilities.c	/^inline uint32_t ntoh_32bit(char * ptr)$/;"	f
ntoh_64bit	src/mf_utilities.c	/^inline uint64_t ntoh_64bit(char * ptr)$/;"	f
nw_dst	src/Openflow/openflow-1.0.h	/^    ovs_be32 nw_dst;           \/* IP destination address. *\/$/;"	m	struct:ofp10_match
nw_dst	src/Openflow/openflow-1.1.h	/^    ovs_be32 nw_dst;           \/* IP destination address. *\/$/;"	m	struct:ofp11_match
nw_dst_mask	src/Openflow/openflow-1.1.h	/^    ovs_be32 nw_dst_mask;      \/* IP destination address mask. *\/$/;"	m	struct:ofp11_match
nw_proto	src/Openflow/openflow-1.0.h	/^    uint8_t nw_proto;          \/* IP protocol or lower 8 bits of$/;"	m	struct:ofp10_match
nw_proto	src/Openflow/openflow-1.1.h	/^    uint8_t nw_proto;          \/* IP protocol or lower 8 bits of ARP opcode. *\/$/;"	m	struct:ofp11_match
nw_src	src/Openflow/openflow-1.0.h	/^    ovs_be32 nw_src;           \/* IP source address. *\/$/;"	m	struct:ofp10_match
nw_src	src/Openflow/openflow-1.1.h	/^    ovs_be32 nw_src;           \/* IP source address. *\/$/;"	m	struct:ofp11_match
nw_src_mask	src/Openflow/openflow-1.1.h	/^    ovs_be32 nw_src_mask;      \/* IP source address mask. *\/$/;"	m	struct:ofp11_match
nw_tos	src/Openflow/openflow-1.0.h	/^    uint8_t nw_tos;            \/* IP ToS (DSCP field, 6 bits). *\/$/;"	m	struct:ofp10_match
nw_tos	src/Openflow/openflow-1.1.h	/^    uint8_t nw_tos;            \/* IP ToS (actually DSCP field, 6 bits). *\/$/;"	m	struct:ofp11_match
odp_port_t	src/Openflow/types.h	/^typedef uint32_t OVS_BITWISE odp_port_t;$/;"	t
of13_echo_reply_msg_constructor	src/mf_ofmsg_constructor.c	/^struct ofp_header of13_echo_reply_msg_constructor(uint32_t xid)$/;"	f
of13_hello_msg_constructor	src/mf_ofmsg_constructor.c	/^struct ofp_header of13_hello_msg_constructor(uint32_t xid)$/;"	f
of13_multiaprt_request_constructor	src/mf_ofmsg_constructor.c	/^struct ofp_multipart_request of13_multiaprt_request_constructor(uint16_t type, uint16_t flags)$/;"	f
of13_packet_out_msg_constructor	src/mf_ofmsg_constructor.c	/^struct ofp11_packet_out of13_packet_out_msg_constructor(uint32_t buffer_id, uint16_t actions_len)$/;"	f
of13_switch_feature_msg_constructor	src/mf_ofmsg_constructor.c	/^struct ofp_header of13_switch_feature_msg_constructor(uint32_t xid)$/;"	f
offset	src/mf_utilities.h	/^    UINT1 offset;$/;"	m	struct:st_tcp
ofp10_capabilities	src/Openflow/openflow-1.0.h	/^enum ofp10_capabilities {$/;"	g
ofp10_flow_mod	src/Openflow/openflow-1.0.h	/^struct ofp10_flow_mod {$/;"	s
ofp10_flow_mod_flags	src/Openflow/openflow-1.0.h	/^enum ofp10_flow_mod_flags {$/;"	g
ofp10_flow_removed	src/Openflow/openflow-1.0.h	/^struct ofp10_flow_removed {$/;"	s
ofp10_flow_stats	src/Openflow/openflow-1.0.h	/^struct ofp10_flow_stats {$/;"	s
ofp10_flow_stats_request	src/Openflow/openflow-1.0.h	/^struct ofp10_flow_stats_request {$/;"	s
ofp10_flow_wildcards	src/Openflow/openflow-1.0.h	/^enum ofp10_flow_wildcards {$/;"	g
ofp10_match	src/Openflow/openflow-1.0.h	/^struct ofp10_match {$/;"	s
ofp10_packet_in	src/Openflow/openflow-1.0.h	/^struct ofp10_packet_in {$/;"	s
ofp10_packet_out	src/Openflow/openflow-1.0.h	/^struct ofp10_packet_out {$/;"	s
ofp10_packet_queue	src/Openflow/openflow-1.0.h	/^struct ofp10_packet_queue {$/;"	s
ofp10_phy_port	src/Openflow/openflow-1.0.h	/^struct ofp10_phy_port {$/;"	s
ofp10_port_config	src/Openflow/openflow-1.0.h	/^enum ofp10_port_config {$/;"	g
ofp10_port_features	src/Openflow/openflow-1.0.h	/^enum ofp10_port_features {$/;"	g
ofp10_port_mod	src/Openflow/openflow-1.0.h	/^struct ofp10_port_mod {$/;"	s
ofp10_port_state	src/Openflow/openflow-1.0.h	/^enum ofp10_port_state {$/;"	g
ofp10_port_stats	src/Openflow/openflow-1.0.h	/^struct ofp10_port_stats {$/;"	s
ofp10_port_stats_request	src/Openflow/openflow-1.0.h	/^struct ofp10_port_stats_request {$/;"	s
ofp10_queue_get_config_reply	src/Openflow/openflow-1.0.h	/^struct ofp10_queue_get_config_reply {$/;"	s
ofp10_queue_get_config_request	src/Openflow/openflow-1.0.h	/^struct ofp10_queue_get_config_request {$/;"	s
ofp10_queue_stats	src/Openflow/openflow-1.0.h	/^struct ofp10_queue_stats {$/;"	s
ofp10_queue_stats_request	src/Openflow/openflow-1.0.h	/^struct ofp10_queue_stats_request {$/;"	s
ofp10_stats_msg	src/Openflow/openflow-1.0.h	/^struct ofp10_stats_msg {$/;"	s
ofp10_table_stats	src/Openflow/openflow-1.0.h	/^struct ofp10_table_stats {$/;"	s
ofp10_vendor_stats_msg	src/Openflow/openflow-1.0.h	/^struct ofp10_vendor_stats_msg {$/;"	s
ofp11_bucket	src/Openflow/openflow-1.1.h	/^struct ofp11_bucket {$/;"	s
ofp11_bucket_counter	src/Openflow/openflow-1.1.h	/^struct ofp11_bucket_counter {$/;"	s
ofp11_capabilities	src/Openflow/openflow-1.1.h	/^enum ofp11_capabilities {$/;"	g
ofp11_flow_match_fields	src/Openflow/openflow-1.1.h	/^enum ofp11_flow_match_fields {$/;"	g
ofp11_flow_mod	src/Openflow/openflow-1.1.h	/^struct ofp11_flow_mod {$/;"	s
ofp11_flow_removed	src/Openflow/openflow-1.1.h	/^struct ofp11_flow_removed {$/;"	s
ofp11_flow_stats	src/Openflow/openflow-1.1.h	/^struct ofp11_flow_stats {$/;"	s
ofp11_flow_stats_request	src/Openflow/openflow-1.1.h	/^struct ofp11_flow_stats_request {$/;"	s
ofp11_flow_wildcards	src/Openflow/openflow-1.1.h	/^enum ofp11_flow_wildcards {$/;"	g
ofp11_group	src/Openflow/openflow-1.1.h	/^enum ofp11_group {$/;"	g
ofp11_group_desc_stats	src/Openflow/openflow-1.1.h	/^struct ofp11_group_desc_stats {$/;"	s
ofp11_group_mod	src/Openflow/openflow-1.1.h	/^struct ofp11_group_mod {$/;"	s
ofp11_group_mod_command	src/Openflow/openflow-1.1.h	/^enum ofp11_group_mod_command {$/;"	g
ofp11_group_stats	src/Openflow/openflow-1.1.h	/^struct ofp11_group_stats {$/;"	s
ofp11_group_stats_request	src/Openflow/openflow-1.1.h	/^struct ofp11_group_stats_request {$/;"	s
ofp11_group_type	src/Openflow/openflow-1.1.h	/^enum ofp11_group_type {$/;"	g
ofp11_instruction	src/Openflow/openflow-1.1.h	/^struct ofp11_instruction {$/;"	s
ofp11_instruction_actions	src/Openflow/openflow-1.1.h	/^struct ofp11_instruction_actions {$/;"	s
ofp11_instruction_experimenter	src/Openflow/openflow-1.1.h	/^struct ofp11_instruction_experimenter {$/;"	s
ofp11_instruction_goto_table	src/Openflow/openflow-1.1.h	/^struct ofp11_instruction_goto_table {$/;"	s
ofp11_instruction_type	src/Openflow/openflow-1.1.h	/^enum ofp11_instruction_type {$/;"	g
ofp11_instruction_write_metadata	src/Openflow/openflow-1.1.h	/^struct ofp11_instruction_write_metadata {$/;"	s
ofp11_match	src/Openflow/openflow-1.1.h	/^struct ofp11_match {$/;"	s
ofp11_match_header	src/Openflow/openflow-1.1.h	/^struct ofp11_match_header {$/;"	s
ofp11_packet_in	src/Openflow/openflow-1.1.h	/^struct ofp11_packet_in {$/;"	s
ofp11_packet_out	src/Openflow/openflow-1.1.h	/^struct ofp11_packet_out {$/;"	s
ofp11_port	src/Openflow/openflow-1.1.h	/^struct ofp11_port {$/;"	s
ofp11_port_features	src/Openflow/openflow-1.1.h	/^enum ofp11_port_features {$/;"	g
ofp11_port_mod	src/Openflow/openflow-1.1.h	/^struct ofp11_port_mod {$/;"	s
ofp11_port_state	src/Openflow/openflow-1.1.h	/^enum ofp11_port_state {$/;"	g
ofp11_port_stats	src/Openflow/openflow-1.1.h	/^struct ofp11_port_stats {$/;"	s
ofp11_port_stats_request	src/Openflow/openflow-1.1.h	/^struct ofp11_port_stats_request {$/;"	s
ofp11_port_t	src/Openflow/types.h	/^typedef uint32_t OVS_BITWISE ofp11_port_t;$/;"	t
ofp11_queue_get_config_reply	src/Openflow/openflow-1.1.h	/^struct ofp11_queue_get_config_reply {$/;"	s
ofp11_queue_get_config_request	src/Openflow/openflow-1.1.h	/^struct ofp11_queue_get_config_request {$/;"	s
ofp11_queue_stats	src/Openflow/openflow-1.1.h	/^struct ofp11_queue_stats {$/;"	s
ofp11_queue_stats_request	src/Openflow/openflow-1.1.h	/^struct ofp11_queue_stats_request {$/;"	s
ofp11_stats_msg	src/Openflow/openflow-1.1.h	/^struct ofp11_stats_msg {$/;"	s
ofp11_table_mod	src/Openflow/openflow-1.1.h	/^struct ofp11_table_mod {$/;"	s
ofp11_table_stats	src/Openflow/openflow-1.1.h	/^struct ofp11_table_stats {$/;"	s
ofp11_vendor_stats_msg	src/Openflow/openflow-1.1.h	/^struct ofp11_vendor_stats_msg {$/;"	s
ofp11_vlan_id	src/Openflow/openflow-1.1.h	/^enum ofp11_vlan_id {$/;"	g
ofp12_capabilities	src/Openflow/openflow-1.2.h	/^enum ofp12_capabilities {$/;"	g
ofp12_controller_max_len	src/Openflow/openflow-1.2.h	/^enum ofp12_controller_max_len {$/;"	g
ofp12_controller_role	src/Openflow/openflow-1.2.h	/^enum ofp12_controller_role {$/;"	g
ofp12_experimenter_stats_header	src/Openflow/openflow-1.2.h	/^struct ofp12_experimenter_stats_header {$/;"	s
ofp12_flow_mod_flags	src/Openflow/openflow-1.2.h	/^enum ofp12_flow_mod_flags {$/;"	g
ofp12_flow_removed	src/Openflow/openflow-1.2.h	/^struct ofp12_flow_removed {$/;"	s
ofp12_group_capabilities	src/Openflow/openflow-1.2.h	/^enum ofp12_group_capabilities {$/;"	g
ofp12_group_features_stats	src/Openflow/openflow-1.2.h	/^struct ofp12_group_features_stats {$/;"	s
ofp12_ipv6exthdr_flags	src/Openflow/openflow-1.2.h	/^enum ofp12_ipv6exthdr_flags {$/;"	g
ofp12_oxm_experimenter_header	src/Openflow/openflow-1.2.h	/^struct ofp12_oxm_experimenter_header {$/;"	s
ofp12_packet_in	src/Openflow/openflow-1.2.h	/^struct ofp12_packet_in {$/;"	s
ofp12_packet_queue	src/Openflow/openflow-1.2.h	/^struct ofp12_packet_queue {$/;"	s
ofp12_role_request	src/Openflow/openflow-1.2.h	/^struct ofp12_role_request {$/;"	s
ofp12_table_stats	src/Openflow/openflow-1.2.h	/^struct ofp12_table_stats {$/;"	s
ofp12_vlan_id	src/Openflow/openflow-1.2.h	/^enum ofp12_vlan_id {$/;"	g
ofp13_action_header_constructor	src/mf_ofmsg_constructor.c	/^struct ofp_action_header ofp13_action_header_constructor(uint16_t type, uint16_t len)$/;"	f
ofp13_action_output_constructor	src/mf_ofmsg_constructor.c	/^struct ofp_action_output ofp13_action_output_constructor(uint32_t port)$/;"	f
ofp13_async_config	src/Openflow/openflow-1.3.h	/^struct ofp13_async_config {$/;"	s
ofp13_flow_mod_flags	src/Openflow/openflow-1.3.h	/^enum ofp13_flow_mod_flags {$/;"	g
ofp13_group_stats	src/Openflow/openflow-1.3.h	/^struct ofp13_group_stats {$/;"	s
ofp13_instruction_meter	src/Openflow/openflow-1.3.h	/^struct ofp13_instruction_meter {$/;"	s
ofp13_instruction_type	src/Openflow/openflow-1.3.h	/^enum ofp13_instruction_type {$/;"	g
ofp13_meter	src/Openflow/openflow-1.3.h	/^enum ofp13_meter {$/;"	g
ofp13_meter_band_drop	src/Openflow/openflow-1.3.h	/^struct ofp13_meter_band_drop {$/;"	s
ofp13_meter_band_dscp_remark	src/Openflow/openflow-1.3.h	/^struct ofp13_meter_band_dscp_remark {$/;"	s
ofp13_meter_band_experimenter	src/Openflow/openflow-1.3.h	/^struct ofp13_meter_band_experimenter {$/;"	s
ofp13_meter_band_header	src/Openflow/openflow-1.3.h	/^struct ofp13_meter_band_header {$/;"	s
ofp13_meter_band_stats	src/Openflow/openflow-1.3.h	/^struct ofp13_meter_band_stats {$/;"	s
ofp13_meter_band_type	src/Openflow/openflow-1.3.h	/^enum ofp13_meter_band_type {$/;"	g
ofp13_meter_config	src/Openflow/openflow-1.3.h	/^struct ofp13_meter_config {$/;"	s
ofp13_meter_features	src/Openflow/openflow-1.3.h	/^struct ofp13_meter_features {$/;"	s
ofp13_meter_flags	src/Openflow/openflow-1.3.h	/^enum ofp13_meter_flags {$/;"	g
ofp13_meter_mod	src/Openflow/openflow-1.3.h	/^struct ofp13_meter_mod {$/;"	s
ofp13_meter_mod_command	src/Openflow/openflow-1.3.h	/^enum ofp13_meter_mod_command {$/;"	g
ofp13_meter_multipart_request	src/Openflow/openflow-1.3.h	/^struct ofp13_meter_multipart_request {$/;"	s
ofp13_meter_stats	src/Openflow/openflow-1.3.h	/^struct ofp13_meter_stats {$/;"	s
ofp13_msg_header_constructor	src/mf_ofmsg_constructor.c	/^struct ofp_header ofp13_msg_header_constructor(uint32_t xid, uint8_t type, uint16_t length)$/;"	f
ofp13_multipart_request_flags	src/Openflow/openflow-1.3.h	/^enum ofp13_multipart_request_flags {$/;"	g
ofp13_packet_in	src/Openflow/openflow-1.3.h	/^struct ofp13_packet_in {$/;"	s
ofp13_port_stats	src/Openflow/openflow-1.3.h	/^struct ofp13_port_stats {$/;"	s
ofp13_queue_stats	src/Openflow/openflow-1.3.h	/^struct ofp13_queue_stats {$/;"	s
ofp13_table_config	src/Openflow/openflow-1.3.h	/^enum ofp13_table_config {$/;"	g
ofp13_table_feature_prop_actions	src/Openflow/openflow-1.3.h	/^struct ofp13_table_feature_prop_actions {$/;"	s
ofp13_table_feature_prop_experimenter	src/Openflow/openflow-1.3.h	/^struct ofp13_table_feature_prop_experimenter {$/;"	s
ofp13_table_feature_prop_header	src/Openflow/openflow-1.3.h	/^struct ofp13_table_feature_prop_header {$/;"	s
ofp13_table_feature_prop_instructions	src/Openflow/openflow-1.3.h	/^struct ofp13_table_feature_prop_instructions {$/;"	s
ofp13_table_feature_prop_next_tables	src/Openflow/openflow-1.3.h	/^struct ofp13_table_feature_prop_next_tables {$/;"	s
ofp13_table_feature_prop_oxm	src/Openflow/openflow-1.3.h	/^struct ofp13_table_feature_prop_oxm {$/;"	s
ofp13_table_feature_prop_type	src/Openflow/openflow-1.3.h	/^enum ofp13_table_feature_prop_type {$/;"	g
ofp13_table_features	src/Openflow/openflow-1.3.h	/^struct ofp13_table_features {$/;"	s
ofp13_table_stats	src/Openflow/openflow-1.3.h	/^struct ofp13_table_stats {$/;"	s
ofp14_async_config	src/Openflow/openflow-1.4.h	/^struct ofp14_async_config {$/;"	s
ofp14_async_config_prop_experimenter	src/Openflow/openflow-1.4.h	/^struct ofp14_async_config_prop_experimenter {$/;"	s
ofp14_async_config_prop_header	src/Openflow/openflow-1.4.h	/^struct ofp14_async_config_prop_header {$/;"	s
ofp14_async_config_prop_reasons	src/Openflow/openflow-1.4.h	/^struct ofp14_async_config_prop_reasons {$/;"	s
ofp14_async_config_prop_type	src/Openflow/openflow-1.4.h	/^enum ofp14_async_config_prop_type {$/;"	g
ofp14_bundle_ctrl_msg	src/Openflow/openflow-1.4.h	/^struct ofp14_bundle_ctrl_msg {$/;"	s
ofp14_bundle_ctrl_type	src/Openflow/openflow-1.4.h	/^enum ofp14_bundle_ctrl_type {$/;"	g
ofp14_bundle_flags	src/Openflow/openflow-1.4.h	/^enum ofp14_bundle_flags {$/;"	g
ofp14_controller_role_reason	src/Openflow/openflow-1.4.h	/^enum ofp14_controller_role_reason {$/;"	g
ofp14_flow_monitor_command	src/Openflow/openflow-1.4.h	/^enum ofp14_flow_monitor_command {$/;"	g
ofp14_flow_monitor_flags	src/Openflow/openflow-1.4.h	/^enum ofp14_flow_monitor_flags {$/;"	g
ofp14_flow_monitor_request	src/Openflow/openflow-1.4.h	/^struct ofp14_flow_monitor_request {$/;"	s
ofp14_port	src/Openflow/openflow-1.4.h	/^struct ofp14_port {$/;"	s
ofp14_port_desc_prop_ethernet	src/Openflow/openflow-1.4.h	/^struct ofp14_port_desc_prop_ethernet {$/;"	s
ofp14_port_mod	src/Openflow/openflow-1.4.h	/^struct ofp14_port_mod {$/;"	s
ofp14_port_mod_prop_ethernet	src/Openflow/openflow-1.4.h	/^struct ofp14_port_mod_prop_ethernet {$/;"	s
ofp14_port_mod_prop_type	src/Openflow/openflow-1.4.h	/^enum ofp14_port_mod_prop_type {$/;"	g
ofp14_port_stats	src/Openflow/openflow-1.4.h	/^struct ofp14_port_stats {$/;"	s
ofp14_port_stats_prop_ethernet	src/Openflow/openflow-1.4.h	/^struct ofp14_port_stats_prop_ethernet {$/;"	s
ofp14_port_stats_prop_type	src/Openflow/openflow-1.4.h	/^enum ofp14_port_stats_prop_type {$/;"	g
ofp14_queue_stats	src/Openflow/openflow-1.4.h	/^struct ofp14_queue_stats {$/;"	s
ofp14_role_prop_experimenter	src/Openflow/openflow-1.4.h	/^struct ofp14_role_prop_experimenter {$/;"	s
ofp14_role_prop_header	src/Openflow/openflow-1.4.h	/^struct ofp14_role_prop_header {$/;"	s
ofp14_role_prop_type	src/Openflow/openflow-1.4.h	/^enum ofp14_role_prop_type {$/;"	g
ofp14_role_status	src/Openflow/openflow-1.4.h	/^struct ofp14_role_status {$/;"	s
ofp14_table_mod	src/Openflow/openflow-1.4.h	/^struct ofp14_table_mod {$/;"	s
ofp14_table_mod_prop_eviction	src/Openflow/openflow-1.4.h	/^struct ofp14_table_mod_prop_eviction {$/;"	s
ofp14_table_mod_prop_eviction_flag	src/Openflow/openflow-1.4.h	/^enum ofp14_table_mod_prop_eviction_flag {$/;"	g
ofp14_table_mod_prop_type	src/Openflow/openflow-1.4.h	/^enum ofp14_table_mod_prop_type {$/;"	g
ofp14_table_mod_prop_vacancy	src/Openflow/openflow-1.4.h	/^struct ofp14_table_mod_prop_vacancy {$/;"	s
ofp15_bucket	src/Openflow/openflow-1.5.h	/^struct ofp15_bucket {$/;"	s
ofp15_group_bucket	src/Openflow/openflow-1.5.h	/^enum ofp15_group_bucket {$/;"	g
ofp15_group_bucket_prop_type	src/Openflow/openflow-1.5.h	/^enum ofp15_group_bucket_prop_type {$/;"	g
ofp15_group_bucket_prop_watch	src/Openflow/openflow-1.5.h	/^struct ofp15_group_bucket_prop_watch {$/;"	s
ofp15_group_bucket_prop_weight	src/Openflow/openflow-1.5.h	/^struct ofp15_group_bucket_prop_weight {$/;"	s
ofp15_group_desc_stats	src/Openflow/openflow-1.5.h	/^struct ofp15_group_desc_stats {$/;"	s
ofp15_group_mod	src/Openflow/openflow-1.5.h	/^struct ofp15_group_mod {$/;"	s
ofp15_group_mod_command	src/Openflow/openflow-1.5.h	/^enum ofp15_group_mod_command {$/;"	g
ofp_action_header	src/Openflow/openflow-common.h	/^struct ofp_action_header {$/;"	s
ofp_action_output	src/Openflow/openflow-common.h	/^struct ofp_action_output {$/;"	s
ofp_aggregate_stats_reply	src/Openflow/openflow-common.h	/^struct ofp_aggregate_stats_reply {$/;"	s
ofp_capabilities	src/Openflow/openflow-common.h	/^enum ofp_capabilities {$/;"	g
ofp_error_msg	src/Openflow/openflow-common.h	/^struct ofp_error_msg {$/;"	s
ofp_flow_mod_command	src/Openflow/openflow-common.h	/^enum ofp_flow_mod_command {$/;"	g
ofp_flow_mod_flags	src/Openflow/openflow-common.h	/^enum ofp_flow_mod_flags {$/;"	g
ofp_flow_removed_reason	src/Openflow/openflow-common.h	/^enum ofp_flow_removed_reason {$/;"	g
ofp_group	src/Openflow/openflow-common.h	/^enum ofp_group {$/;"	g
ofp_group_capabilities	src/Openflow/openflow-common.h	/^enum ofp_group_capabilities {$/;"	g
ofp_group_prop_type	src/Openflow/openflow-1.5.h	/^enum ofp_group_prop_type {$/;"	g
ofp_header	src/Openflow/openflow-common.h	/^struct ofp_header {$/;"	s
ofp_hello_elem_header	src/Openflow/openflow-common.h	/^struct ofp_hello_elem_header {$/;"	s
ofp_hello_elem_type	src/Openflow/openflow-common.h	/^enum ofp_hello_elem_type {$/;"	g
ofp_match_type	src/Openflow/openflow-common.h	/^enum ofp_match_type {$/;"	g
ofp_multipart_request	src/Openflow/openflow-common.h	/^struct ofp_multipart_request {$/;"	s
ofp_packet_in_reason	src/Openflow/openflow-common.h	/^enum ofp_packet_in_reason {$/;"	g
ofp_port_config	src/Openflow/openflow-common.h	/^enum ofp_port_config {$/;"	g
ofp_port_desc_prop_type	src/Openflow/openflow-1.4.h	/^enum ofp_port_desc_prop_type {$/;"	g
ofp_port_features	src/Openflow/openflow-common.h	/^enum ofp_port_features {$/;"	g
ofp_port_reason	src/Openflow/openflow-common.h	/^enum ofp_port_reason {$/;"	g
ofp_port_state	src/Openflow/openflow-common.h	/^enum ofp_port_state {$/;"	g
ofp_port_t	src/Openflow/types.h	/^typedef uint16_t OVS_BITWISE ofp_port_t;$/;"	t
ofp_queue_prop_header	src/Openflow/openflow-common.h	/^struct ofp_queue_prop_header {$/;"	s
ofp_queue_prop_rate	src/Openflow/openflow-common.h	/^struct ofp_queue_prop_rate {$/;"	s
ofp_queue_properties	src/Openflow/openflow-common.h	/^enum ofp_queue_properties {$/;"	g
ofp_stats_reply_flags	src/Openflow/openflow-common.h	/^enum ofp_stats_reply_flags {$/;"	g
ofp_switch_features	src/Openflow/openflow-common.h	/^struct ofp_switch_features {$/;"	s
ofp_table	src/Openflow/openflow-common.h	/^enum ofp_table {$/;"	g
ofp_table_config	src/Openflow/openflow-common.h	/^enum ofp_table_config {$/;"	g
ofp_vendor_header	src/Openflow/openflow-common.h	/^struct ofp_vendor_header {$/;"	s
omh	src/Openflow/openflow-1.1.h	/^    struct ofp11_match_header omh;$/;"	m	struct:ofp11_match	typeref:struct:ofp11_match::ofp11_match_header
opcode	src/mf_utilities.h	/^    UINT2 opcode;$/;"	m	struct:st_arp
open	src/httpserver/wrlib/mg_compat.h	44;"	d
opt	src/mf_utilities.h	/^    UINT1 opt;$/;"	m	struct:st_dhcp
osm	src/Openflow/openflow-1.0.h	/^    struct ofp10_stats_msg osm; \/* Type OFPST_VENDOR. *\/$/;"	m	struct:ofp10_vendor_stats_msg	typeref:struct:ofp10_vendor_stats_msg::ofp10_stats_msg
osm	src/Openflow/openflow-1.1.h	/^    struct ofp11_stats_msg osm; \/* Type OFPST_VENDOR. *\/$/;"	m	struct:ofp11_vendor_stats_msg	typeref:struct:ofp11_vendor_stats_msg::ofp11_stats_msg
out_group	src/Openflow/openflow-1.1.h	/^    ovs_be32 out_group;          \/* For OFPFC_DELETE* commands, require$/;"	m	struct:ofp11_flow_mod
out_group	src/Openflow/openflow-1.1.h	/^    ovs_be32 out_group;       \/* Require matching entries to include this$/;"	m	struct:ofp11_flow_stats_request
out_group	src/Openflow/openflow-1.4.h	/^    ovs_be32 out_group;         \/* Required output port, if not OFPG_ANY. *\/$/;"	m	struct:ofp14_flow_monitor_request
out_port	src/Openflow/openflow-1.0.h	/^    ovs_be16 out_port;            \/* For OFPFC_DELETE* commands, require$/;"	m	struct:ofp10_flow_mod
out_port	src/Openflow/openflow-1.0.h	/^    ovs_be16 out_port;        \/* Require matching entries to include this$/;"	m	struct:ofp10_flow_stats_request
out_port	src/Openflow/openflow-1.1.h	/^    ovs_be32 out_port;           \/* For OFPFC_DELETE* commands, require$/;"	m	struct:ofp11_flow_mod
out_port	src/Openflow/openflow-1.1.h	/^    ovs_be32 out_port;        \/* Require matching entries to include this$/;"	m	struct:ofp11_flow_stats_request
out_port	src/Openflow/openflow-1.4.h	/^    ovs_be32 out_port;          \/* Required output port, if not OFPP_ANY. *\/$/;"	m	struct:ofp14_flow_monitor_request
ovs_16aligned_be32	src/Openflow/types.h	/^} ovs_16aligned_be32;$/;"	t	typeref:struct:__anon2
ovs_16aligned_u32	src/Openflow/types.h	/^} ovs_16aligned_u32;$/;"	t	typeref:struct:__anon1
ovs_32aligned_be64	src/Openflow/types.h	/^} ovs_32aligned_be64;$/;"	t	typeref:struct:__anon6
ovs_32aligned_u64	src/Openflow/types.h	/^} ovs_32aligned_u64;$/;"	t	typeref:struct:__anon3
ovs_be16	src/Openflow/types.h	/^typedef uint16_t OVS_BITWISE ovs_be16;$/;"	t
ovs_be32	src/Openflow/types.h	/^typedef uint32_t OVS_BITWISE ovs_be32;$/;"	t
ovs_be64	src/Openflow/types.h	/^typedef uint64_t OVS_BITWISE ovs_be64;$/;"	t
ovs_u128	src/Openflow/types.h	/^} ovs_u128;$/;"	t	typeref:union:__anon4
oxm_header	src/Openflow/openflow-1.2.h	/^    ovs_be32 oxm_header;   \/* oxm_class = OFPXMC_EXPERIMENTER *\/$/;"	m	struct:ofp12_oxm_experimenter_header
p1	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p10	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p11	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p12	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p13	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p14	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p15	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p16	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p17	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p18	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p19	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p2	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p20	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p21	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p22	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p23	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p24	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p25	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p26	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p27	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p28	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p29	src/mf_mempool.h	/^	uint32_t p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p3	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p4	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p5	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p6	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p7	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p8	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
p9	src/mf_mempool.h	/^	uint32_t p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15;\/\/cache padding$/;"	m	struct:mf_queue_node_mempool
pArp	src/mf_utilities.h	/^    arp_t *pArp;$/;"	m	struct:st_ethpkt_info
pEth	src/mf_utilities.h	/^    ether_t *pEth;$/;"	m	struct:st_ethpkt_info
pIcmp	src/mf_utilities.h	/^    icmp_t *pIcmp;$/;"	m	struct:st_ethpkt_info
pIp	src/mf_utilities.h	/^    ip_t *pIp;$/;"	m	struct:st_ethpkt_info
pTcp	src/mf_utilities.h	/^    tcp_t *pTcp;$/;"	m	struct:st_ethpkt_info
pUdp	src/mf_utilities.h	/^    udp_t *pUdp;$/;"	m	struct:st_ethpkt_info
packet_band_count	src/Openflow/openflow-1.3.h	/^    ovs_be64    packet_band_count;      \/* Number of packets in band. *\/$/;"	m	struct:ofp13_meter_band_stats
packet_content1	tests/queue_test.c	/^char* packet_content1 = "abcdefg";$/;"	v
packet_content2	tests/queue_test.c	/^char* packet_content2 = "higklmn";$/;"	v
packet_content3	tests/queue_test.c	/^char* packet_content3 = "opqrstu";$/;"	v
packet_count	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 packet_count; \/* Number of packets in flow. *\/$/;"	m	struct:ofp10_flow_stats
packet_count	src/Openflow/openflow-1.0.h	/^    ovs_be64 packet_count;$/;"	m	struct:ofp10_flow_removed
packet_count	src/Openflow/openflow-1.1.h	/^    ovs_be64 packet_count;     \/* Number of packets in flow. *\/$/;"	m	struct:ofp11_flow_stats
packet_count	src/Openflow/openflow-1.1.h	/^    ovs_be64 packet_count;     \/* Number of packets processed by group. *\/$/;"	m	struct:ofp11_group_stats
packet_count	src/Openflow/openflow-1.1.h	/^    ovs_be64 packet_count;   \/* Number of packets processed by bucket. *\/$/;"	m	struct:ofp11_bucket_counter
packet_count	src/Openflow/openflow-1.1.h	/^    ovs_be64 packet_count;$/;"	m	struct:ofp11_flow_removed
packet_count	src/Openflow/openflow-1.2.h	/^    ovs_be64 packet_count;$/;"	m	struct:ofp12_flow_removed
packet_count	src/Openflow/openflow-common.h	/^    ovs_32aligned_be64 packet_count; \/* Number of packets in flows. *\/$/;"	m	struct:ofp_aggregate_stats_reply
packet_in_count	src/Openflow/openflow-1.3.h	/^    ovs_be64  packet_in_count;   \/* Number of packets in input. *\/$/;"	m	struct:ofp13_meter_stats
packet_in_mask	src/Openflow/openflow-1.3.h	/^    ovs_be32 packet_in_mask[2];   \/* Bitmasks of OFPR_* values. *\/$/;"	m	struct:ofp13_async_config
packet_in_msg_get_in_port_num	src/mf_msg_handler.c	/^static ovs_be32 packet_in_msg_get_in_port_num(struct q_node *qn)$/;"	f	file:
packet_in_msg_handler	src/mf_msg_handler.c	/^void packet_in_msg_handler(struct q_node* qn)$/;"	f
packet_in_msg_handler_list_head	src/mf_msg_handler.h	/^	struct single_msg_handler * packet_in_msg_handler_list_head;$/;"	m	struct:msg_handlers	typeref:struct:msg_handlers::single_msg_handler
packet_length	src/mf_rx_queue.h	/^	uint16_t packet_length;$/;"	m	struct:q_node
packet_length	tests/queue_test.c	/^uint8_t packet_length = 8;$/;"	v
pad	src/Openflow/openflow-1.0.h	/^    uint8_t pad;              \/* Align to 32 bits. *\/$/;"	m	struct:ofp10_flow_stats_request
pad	src/Openflow/openflow-1.0.h	/^    uint8_t pad;$/;"	m	struct:ofp10_flow_stats
pad	src/Openflow/openflow-1.0.h	/^    uint8_t pad;$/;"	m	struct:ofp10_packet_in
pad	src/Openflow/openflow-1.0.h	/^    uint8_t pad[1];           \/* Align to 32-bits. *\/$/;"	m	struct:ofp10_flow_removed
pad	src/Openflow/openflow-1.0.h	/^    uint8_t pad[2];             \/* 64-bit alignment. *\/$/;"	m	struct:ofp10_packet_queue
pad	src/Openflow/openflow-1.0.h	/^    uint8_t pad[2];          \/* Align to 32-bits. *\/$/;"	m	struct:ofp10_queue_stats
pad	src/Openflow/openflow-1.0.h	/^    uint8_t pad[2];          \/* Align to 32-bits. *\/$/;"	m	struct:ofp10_queue_stats_request
pad	src/Openflow/openflow-1.0.h	/^    uint8_t pad[2];$/;"	m	struct:ofp10_queue_get_config_request
pad	src/Openflow/openflow-1.0.h	/^    uint8_t pad[3];          \/* Align to 32-bits. *\/$/;"	m	struct:ofp10_table_stats
pad	src/Openflow/openflow-1.0.h	/^    uint8_t pad[4];         \/* Pad to 64-bits. *\/$/;"	m	struct:ofp10_port_mod
pad	src/Openflow/openflow-1.0.h	/^    uint8_t pad[6];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp10_port_stats
pad	src/Openflow/openflow-1.0.h	/^    uint8_t pad[6];$/;"	m	struct:ofp10_port_stats_request
pad	src/Openflow/openflow-1.0.h	/^    uint8_t pad[6];$/;"	m	struct:ofp10_queue_get_config_reply
pad	src/Openflow/openflow-1.1.h	/^	uint8_t pad[4];$/;"	m	struct:ofp11_port
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad;                  \/* Pad to 64 bits. *\/$/;"	m	struct:ofp11_group_mod
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad;                \/* Pad to 64 bits. *\/$/;"	m	struct:ofp11_group_desc_stats
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad;$/;"	m	struct:ofp11_flow_stats
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[2];            \/* Align to 64 bits. *\/$/;"	m	struct:ofp11_group_stats
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[3];                \/* Pad to 64 bits. *\/$/;"	m	struct:ofp11_instruction_goto_table
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[3];           \/* Align to 64 bits. *\/$/;"	m	struct:ofp11_flow_stats_request
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[3];         \/* Pad to 32 bits *\/$/;"	m	struct:ofp11_table_mod
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[4];             \/* Align to 64-bits *\/$/;"	m	struct:ofp11_instruction
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[4];             \/* Align to 64-bits *\/$/;"	m	struct:ofp11_instruction_actions
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[4];             \/* Align to 64-bits *\/$/;"	m	struct:ofp11_instruction_write_metadata
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[4];            \/* Align to 64 bits. *\/$/;"	m	struct:ofp11_group_stats_request
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[4];           \/* Align to 64-bits. *\/$/;"	m	struct:ofp11_port_stats
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[4];$/;"	m	struct:ofp11_bucket
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[4];$/;"	m	struct:ofp11_port_mod
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[4];$/;"	m	struct:ofp11_port_stats_request
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[4];$/;"	m	struct:ofp11_queue_get_config_reply
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[4];$/;"	m	struct:ofp11_queue_get_config_request
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[4];$/;"	m	struct:ofp11_stats_msg
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[6];$/;"	m	struct:ofp11_packet_out
pad	src/Openflow/openflow-1.1.h	/^    uint8_t pad[7];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp11_table_stats
pad	src/Openflow/openflow-1.2.h	/^    uint8_t pad[4];           \/* Align to 64 bits. *\/$/;"	m	struct:ofp12_role_request
pad	src/Openflow/openflow-1.2.h	/^    uint8_t pad[6];        \/* 64-bit alignment. *\/$/;"	m	struct:ofp12_packet_queue
pad	src/Openflow/openflow-1.2.h	/^    uint8_t pad[7];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp12_table_stats
pad	src/Openflow/openflow-1.3.h	/^    uint8_t     pad[3];$/;"	m	struct:ofp13_meter_band_dscp_remark
pad	src/Openflow/openflow-1.3.h	/^    uint8_t     pad[4];$/;"	m	struct:ofp13_meter_band_drop
pad	src/Openflow/openflow-1.3.h	/^    uint8_t    pad[2];$/;"	m	struct:ofp13_meter_features
pad	src/Openflow/openflow-1.3.h	/^    uint8_t   pad[6];$/;"	m	struct:ofp13_meter_stats
pad	src/Openflow/openflow-1.3.h	/^    uint8_t  pad[3];        \/* Align to 32-bits. *\/$/;"	m	struct:ofp13_table_stats
pad	src/Openflow/openflow-1.3.h	/^    uint8_t pad[4];     \/* Align to 64 bits. *\/$/;"	m	struct:ofp13_meter_multipart_request
pad	src/Openflow/openflow-1.3.h	/^    uint8_t pad[5];           \/* Align to 64-bits. *\/$/;"	m	struct:ofp13_table_features
pad	src/Openflow/openflow-1.4.h	/^    uint8_t          pad[4];  \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
pad	src/Openflow/openflow-1.4.h	/^    uint8_t          pad[4];  \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
pad	src/Openflow/openflow-1.4.h	/^    uint8_t  pad[3];            \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_role_status
pad	src/Openflow/openflow-1.4.h	/^    uint8_t pad[1];          \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_table_mod_prop_vacancy
pad	src/Openflow/openflow-1.4.h	/^    uint8_t pad[2];          \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_port_stats
pad	src/Openflow/openflow-1.4.h	/^    uint8_t pad[2];$/;"	m	struct:ofp14_port
pad	src/Openflow/openflow-1.4.h	/^    uint8_t pad[3];         \/* Pad to 32 bits *\/$/;"	m	struct:ofp14_table_mod
pad	src/Openflow/openflow-1.4.h	/^    uint8_t pad[4];$/;"	m	struct:ofp14_port_mod
pad	src/Openflow/openflow-1.4.h	/^    uint8_t pad[6];          \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_queue_stats
pad	src/Openflow/openflow-1.5.h	/^    uint8_t          pad[2];  \/* Pad to 64 bits. *\/$/;"	m	struct:ofp15_group_bucket_prop_weight
pad	src/Openflow/openflow-1.5.h	/^    uint8_t pad;                  \/* Pad to 64 bits. *\/$/;"	m	struct:ofp15_group_desc_stats
pad	src/Openflow/openflow-1.5.h	/^    uint8_t pad;                  \/* Pad to 64 bits. *\/$/;"	m	struct:ofp15_group_mod
pad	src/Openflow/openflow-common.h	/^    uint8_t pad[2];         \/* Align to 64-bits. *\/$/;"	m	struct:ofp_switch_features
pad	src/Openflow/openflow-common.h	/^    uint8_t pad[4];           \/* Align to 64 bits. *\/$/;"	m	struct:ofp_aggregate_stats_reply
pad	src/Openflow/openflow-common.h	/^    uint8_t pad[4];    \/* 64-bit alignemnt. *\/$/;"	m	struct:ofp_queue_prop_header
pad	src/Openflow/openflow-common.h	/^    uint8_t pad[4];$/;"	m	struct:ofp_action_header
pad	src/Openflow/openflow-common.h	/^    uint8_t pad[4];$/;"	m	struct:ofp_multipart_request
pad	src/Openflow/openflow-common.h	/^    uint8_t pad[6];       \/* 64-bit alignment *\/$/;"	m	struct:ofp_queue_prop_rate
pad	src/Openflow/openflow-common.h	/^    uint8_t pad[6]; \/* Pad to 64 bits. *\/$/;"	m	struct:ofp_action_output
pad1	src/Openflow/openflow-1.0.h	/^    uint8_t pad1[1];           \/* Align to 64-bits. *\/$/;"	m	struct:ofp10_match
pad1	src/Openflow/openflow-1.1.h	/^    uint8_t pad1[1];           \/* Align to 32-bits *\/$/;"	m	struct:ofp11_match
pad1	src/Openflow/openflow-1.5.h	/^    uint8_t pad1[2];              \/* Pad to 64 bits. *\/$/;"	m	struct:ofp15_group_mod
pad2	src/Openflow/openflow-1.0.h	/^    uint8_t pad2[2];           \/* Align to 64-bits. *\/$/;"	m	struct:ofp10_match
pad2	src/Openflow/openflow-1.0.h	/^    uint8_t pad2[2];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp10_flow_removed
pad2	src/Openflow/openflow-1.0.h	/^    uint8_t pad2[6];          \/* Align to 64 bits. *\/$/;"	m	struct:ofp10_flow_stats
pad2	src/Openflow/openflow-1.1.h	/^	uint8_t pad2[2];                  \/* Align to 64 bits. *\/$/;"	m	struct:ofp11_port
pad2	src/Openflow/openflow-1.1.h	/^    uint8_t  pad2[2];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp11_flow_stats
pad2	src/Openflow/openflow-1.1.h	/^    uint8_t pad2[2];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp11_flow_removed
pad2	src/Openflow/openflow-1.1.h	/^    uint8_t pad2[2];        \/* Pad to 64 bits. *\/$/;"	m	struct:ofp11_port_mod
pad2	src/Openflow/openflow-1.1.h	/^    uint8_t pad2[3];           \/* Align to 64-bits *\/$/;"	m	struct:ofp11_match
pad2	src/Openflow/openflow-1.1.h	/^    uint8_t pad2[4];           \/* Align to 64 bits. *\/$/;"	m	struct:ofp11_group_stats
pad2	src/Openflow/openflow-1.1.h	/^    uint8_t pad2[4];          \/* Align to 64 bits. *\/$/;"	m	struct:ofp11_flow_stats_request
pad2	src/Openflow/openflow-1.4.h	/^    uint8_t pad2[2];                  \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_port
pad2	src/Openflow/openflow-1.4.h	/^    uint8_t pad2[2];$/;"	m	struct:ofp14_port_mod
pad2	src/Openflow/openflow-1.5.h	/^    uint8_t pad2[6];              \/* Pad to 64 bits. *\/$/;"	m	struct:ofp15_group_desc_stats
pad3	src/Openflow/openflow-1.1.h	/^    uint8_t pad3[4];        \/* Pad to 64 bits. *\/$/;"	m	struct:ofp11_port_mod
pageMap	src/httpserver/wrlib/http.h	/^	wr_hashmap pageMap;$/;"	m	struct:__anon12
paramEndPos	src/httpserver/wrlib/http.h	/^	char *paramEndPos;$/;"	m	struct:__anon10
paramMap	src/httpserver/wrlib/http.h	/^	wr_hashmap paramMap;$/;"	m	struct:__anon10
parseHeader	src/httpserver/wrlib/analysis.c	/^int parseHeader(WrHttp *pHttp)$/;"	f
parseURL	src/httpserver/wrlib/analysis.c	/^int parseURL(WrHttp *pHttp)$/;"	f
parse_ether_type	src/mf_msg_handler.c	/^static void parse_ether_type(struct q_node* qn, uint32_t xid, char * buffer, uint16_t total_len)$/;"	f	file:
parse_msg	src/mf_msg_parser.c	/^void parse_msg(struct q_node* qn)$/;"	f
parse_msg_type	src/mf_msg_parser.c	/^static inline uint8_t parse_msg_type(struct q_node* qn)$/;"	f	file:
parse_msg_version	src/mf_msg_parser.c	/^static inline uint8_t parse_msg_version(struct q_node* qn)$/;"	f	file:
parse_thread_start	src/mf_msg_parser.c	/^void parse_thread_start(uint8_t num)$/;"	f
path_link_list	src/mf_topomgr.h	/^	struct network_link * path_link_list[LONGEST_PATH_LINK_NUM];$/;"	m	struct:path_link_list	typeref:struct:path_link_list::network_link
path_link_list	src/mf_topomgr.h	/^struct path_link_list$/;"	s
path_link_list_create	src/mf_topomgr.c	/^struct path_link_list * path_link_list_create()$/;"	f
path_link_list_free	src/mf_topomgr.c	/^void path_link_list_free(struct path_link_list * list)$/;"	f
peer	src/Openflow/openflow-1.0.h	/^    ovs_be32 peer;          \/* Features advertised by peer. *\/$/;"	m	struct:ofp10_phy_port
peer	src/Openflow/openflow-1.1.h	/^	ovs_be32 peer;          \/* Features advertised by peer. *\/$/;"	m	struct:ofp11_port
peer	src/Openflow/openflow-1.4.h	/^    ovs_be32 peer;          \/* Features advertised by peer. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
pi	src/Openflow/openflow-1.3.h	/^    struct ofp12_packet_in pi;$/;"	m	struct:ofp13_packet_in	typeref:struct:ofp13_packet_in::ofp12_packet_in
pop	src/mf_mempool.h	/^	struct q_node * pop;$/;"	m	struct:mf_queue_node_mempool	typeref:struct:mf_queue_node_mempool::q_node
pop_queue_node_from_mempool	src/mf_mempool.c	/^struct q_node * pop_queue_node_from_mempool(struct mf_queue_node_mempool* mp)$/;"	f
port	src/Openflow/openflow-1.0.h	/^    ovs_be16 port;          \/* Port to be queried. Should refer$/;"	m	struct:ofp10_queue_get_config_request
port	src/Openflow/openflow-1.0.h	/^    ovs_be16 port;$/;"	m	struct:ofp10_queue_get_config_reply
port	src/Openflow/openflow-1.1.h	/^    ovs_be32 port;$/;"	m	struct:ofp11_queue_get_config_reply
port	src/Openflow/openflow-1.1.h	/^    ovs_be32 port;$/;"	m	struct:ofp11_queue_get_config_request
port	src/Openflow/openflow-1.2.h	/^    ovs_be32 port;         \/* Port this queue is attached to. *\/$/;"	m	struct:ofp12_packet_queue
port	src/Openflow/openflow-common.h	/^    uint32_t port; \/* Output port. *\/$/;"	m	struct:ofp_action_output
port	src/mf_topomgr.h	/^	struct ofp11_port * port;$/;"	m	struct:link_node	typeref:struct:link_node::ofp11_port
port_desc_reply_handler	src/mf_msg_handler.c	/^static void port_desc_reply_handler(struct q_node* qn)$/;"	f	file:
port_no	src/Openflow/openflow-1.0.h	/^    ovs_be16 port_no;        \/* All ports if OFPP_ALL. *\/$/;"	m	struct:ofp10_queue_stats_request
port_no	src/Openflow/openflow-1.0.h	/^    ovs_be16 port_no;        \/* OFPST_PORT message may request statistics$/;"	m	struct:ofp10_port_stats_request
port_no	src/Openflow/openflow-1.0.h	/^    ovs_be16 port_no;$/;"	m	struct:ofp10_phy_port
port_no	src/Openflow/openflow-1.0.h	/^    ovs_be16 port_no;$/;"	m	struct:ofp10_port_mod
port_no	src/Openflow/openflow-1.0.h	/^    ovs_be16 port_no;$/;"	m	struct:ofp10_port_stats
port_no	src/Openflow/openflow-1.0.h	/^    ovs_be16 port_no;$/;"	m	struct:ofp10_queue_stats
port_no	src/Openflow/openflow-1.1.h	/^	ovs_be32 port_no;$/;"	m	struct:ofp11_port
port_no	src/Openflow/openflow-1.1.h	/^    ovs_be32 port_no;         \/* All ports if OFPP_ANY. *\/$/;"	m	struct:ofp11_queue_stats_request
port_no	src/Openflow/openflow-1.1.h	/^    ovs_be32 port_no;        \/* OFPST_PORT message must request statistics$/;"	m	struct:ofp11_port_stats_request
port_no	src/Openflow/openflow-1.1.h	/^    ovs_be32 port_no;$/;"	m	struct:ofp11_port_mod
port_no	src/Openflow/openflow-1.1.h	/^    ovs_be32 port_no;$/;"	m	struct:ofp11_port_stats
port_no	src/Openflow/openflow-1.1.h	/^    ovs_be32 port_no;$/;"	m	struct:ofp11_queue_stats
port_no	src/Openflow/openflow-1.4.h	/^    ovs_be32 port_no;$/;"	m	struct:ofp14_port
port_no	src/Openflow/openflow-1.4.h	/^    ovs_be32 port_no;$/;"	m	struct:ofp14_port_mod
port_no	src/Openflow/openflow-1.4.h	/^    ovs_be32 port_no;$/;"	m	struct:ofp14_port_stats
port_num	src/mf_devicemgr.h	/^	uint32_t port_num;$/;"	m	struct:host_hash_value
port_num	src/mf_switch.h	/^	uint16_t port_num;$/;"	m	struct:mf_switch
port_status_mask	src/Openflow/openflow-1.3.h	/^    ovs_be32 port_status_mask[2]; \/* Bitmasks of OFPPR_* values. *\/$/;"	m	struct:ofp13_async_config
port_status_msg_handler	src/mf_msg_handler.c	/^void port_status_msg_handler(struct q_node* qn)$/;"	f
port_tlv_id	src/mf_utilities.h	/^    UINT2 port_tlv_id;                \/\/send port$/;"	m	struct:st_lldp
port_tlv_subtype	src/mf_utilities.h	/^    UINT1 port_tlv_subtype;          \/\/local assigned    7$/;"	m	struct:st_lldp
port_tlv_type_and_len	src/mf_utilities.h	/^    UINT2 port_tlv_type_and_len;      \/\/0x0403$/;"	m	struct:st_lldp
ports	src/mf_switch.h	/^	struct ofp11_port ports[MAX_MF_SWITCH_PORT_NUM];$/;"	m	struct:mf_switch	typeref:struct:mf_switch::ofp11_port
postData	src/httpserver/wrlib/http.h	/^		char *postData;		\/*for post*\/$/;"	m	union:__anon10::__anon11
prec_level	src/Openflow/openflow-1.3.h	/^    uint8_t     prec_level;  \/* Number of drop precedence level to add. *\/$/;"	m	struct:ofp13_meter_band_dscp_remark
prev	src/mf_topomgr.h	/^	struct link_node * prev;$/;"	m	struct:link_node	typeref:struct:link_node::link_node
print_all_switches	src/mf_devicemgr.c	/^void print_all_switches()$/;"	f
print_header	src/httpserver/wrlib/analysis.c	/^void print_header(const WrHttp *pHttp)$/;"	f
print_info	src/main.c	/^static void print_info()$/;"	f	file:
print_list	tests/lock_free_list_test.c	/^void print_list(struct lf_list* head)$/;"	f
print_other	src/main.c	/^void print_other()$/;"	f
print_param	src/httpserver/wrlib/analysis.c	/^void print_param(const WrHttp *pHttp)$/;"	f
print_switch_link	src/mf_devicemgr.c	/^void print_switch_link(struct mf_switch *sw)$/;"	f
print_welcome	src/main.c	/^void print_welcome()$/;"	f
priority	src/Openflow/openflow-1.0.h	/^    ovs_be16 priority;            \/* Priority level of flow entry. *\/$/;"	m	struct:ofp10_flow_mod
priority	src/Openflow/openflow-1.0.h	/^    ovs_be16 priority;        \/* Priority level of flow entry. *\/$/;"	m	struct:ofp10_flow_removed
priority	src/Openflow/openflow-1.0.h	/^    ovs_be16 priority;        \/* Priority of the entry. Only meaningful$/;"	m	struct:ofp10_flow_stats
priority	src/Openflow/openflow-1.1.h	/^    ovs_be16 priority;           \/* Priority level of flow entry. *\/$/;"	m	struct:ofp11_flow_mod
priority	src/Openflow/openflow-1.1.h	/^    ovs_be16 priority;         \/* Priority of the entry. Only meaningful$/;"	m	struct:ofp11_flow_stats
priority	src/Openflow/openflow-1.1.h	/^    ovs_be16 priority;        \/* Priority level of flow entry. *\/$/;"	m	struct:ofp11_flow_removed
priority	src/Openflow/openflow-1.2.h	/^    ovs_be16 priority;        \/* Priority level of flow entry. *\/$/;"	m	struct:ofp12_flow_removed
prop_header	src/Openflow/openflow-common.h	/^    struct ofp_queue_prop_header prop_header;$/;"	m	struct:ofp_queue_prop_rate	typeref:struct:ofp_queue_prop_rate::ofp_queue_prop_header
properties	src/Openflow/openflow-1.4.h	/^    struct ofp14_async_config_prop_header properties[0];$/;"	m	struct:ofp14_async_config	typeref:struct:ofp14_async_config::ofp14_async_config_prop_header
property	src/Openflow/openflow-common.h	/^    ovs_be16 property; \/* One of OFPQT_. *\/$/;"	m	struct:ofp_queue_prop_header
proto	src/mf_utilities.h	/^    UINT1 proto;$/;"	m	struct:st_ip
proto	src/mf_utilities.h	/^    UINT2 proto;$/;"	m	struct:st_ether
proto	src/mf_utilities.h	/^    UINT2 proto;$/;"	m	struct:st_t802_1q
protocol	src/httpserver/wrlib/http.h	/^	char *protocol;$/;"	m	struct:__anon10
protocolsize	src/mf_utilities.h	/^    UINT1 protocolsize;$/;"	m	struct:st_arp
prototype	src/mf_utilities.h	/^    UINT2 prototype;$/;"	m	struct:st_arp
ps	src/Openflow/openflow-1.3.h	/^    struct ofp11_port_stats ps;$/;"	m	struct:ofp13_port_stats	typeref:struct:ofp13_port_stats::ofp11_port_stats
pthread_cond_t	src/httpserver/wrlib/mg_compat.h	/^typedef HANDLE pthread_cond_t;$/;"	t
pthread_mutex_t	src/httpserver/wrlib/mg_compat.h	/^typedef HANDLE pthread_mutex_t;$/;"	t
push	src/mf_mempool.h	/^	struct q_node * push;$/;"	m	struct:mf_queue_node_mempool	typeref:struct:mf_queue_node_mempool::q_node
push_queue_node_to_mempool	src/mf_mempool.c	/^void push_queue_node_to_mempool(char* rx_buffer, uint16_t rx_length, struct mf_switch* sw, struct mf_queue_node_mempool* mp)$/;"	f
q8021q	src/mf_utilities.h	/^    t802_1q_t *q8021q;$/;"	m	struct:st_ethpkt_info
q_mutex	src/mf_rx_queue.h	/^	pthread_mutex_t q_mutex;$/;"	m	struct:mf_rx_queue
q_node	src/mf_rx_queue.h	/^struct q_node{$/;"	s
qid	src/mf_utilities.h	/^    INT4  qid;$/;"	m	struct:st_ethpkt_info
qs	src/Openflow/openflow-1.3.h	/^    struct ofp11_queue_stats qs;$/;"	m	struct:ofp13_queue_stats	typeref:struct:ofp13_queue_stats::ofp11_queue_stats
qs	src/Openflow/openflow-1.4.h	/^    struct ofp13_queue_stats qs;$/;"	m	struct:ofp14_queue_stats	typeref:struct:ofp14_queue_stats::ofp13_queue_stats
queryString	src/httpserver/wrlib/http.h	/^		char *queryString;	\/*for get*\/$/;"	m	union:__anon10::__anon11
questions	src/mf_utilities.h	/^    UINT2 questions;$/;"	m	struct:st_dns
queue_id	src/Openflow/openflow-1.0.h	/^    ovs_be32 queue_id;          \/* id for the specific queue. *\/$/;"	m	struct:ofp10_packet_queue
queue_id	src/Openflow/openflow-1.0.h	/^    ovs_be32 queue_id;       \/* All queues if OFPQ_ALL. *\/$/;"	m	struct:ofp10_queue_stats_request
queue_id	src/Openflow/openflow-1.0.h	/^    ovs_be32 queue_id;       \/* Queue id. *\/$/;"	m	struct:ofp10_queue_stats
queue_id	src/Openflow/openflow-1.1.h	/^    ovs_be32 queue_id;         \/* Queue id. *\/$/;"	m	struct:ofp11_queue_stats
queue_id	src/Openflow/openflow-1.1.h	/^    ovs_be32 queue_id;        \/* All queues if OFPQ_ALL. *\/$/;"	m	struct:ofp11_queue_stats_request
queue_id	src/Openflow/openflow-1.2.h	/^    ovs_be32 queue_id;     \/* id for the specific queue. *\/$/;"	m	struct:ofp12_packet_queue
queue_index	src/mf_msg_parser.c	/^int queue_index[WORKER_THREADS_NUM];$/;"	v
queue_length	src/mf_rx_queue.h	/^	uint32_t queue_length;$/;"	m	struct:mf_rx_queue
quitFlag	src/httpserver/wrlib/http.h	/^	volatile int quitFlag;$/;"	m	struct:__anon12
rate	src/Openflow/openflow-1.3.h	/^    ovs_be32    rate;        \/* Rate for dropping packets. *\/$/;"	m	struct:ofp13_meter_band_drop
rate	src/Openflow/openflow-1.3.h	/^    ovs_be32    rate;        \/* Rate for dropping packets. *\/$/;"	m	struct:ofp13_meter_band_experimenter
rate	src/Openflow/openflow-1.3.h	/^    ovs_be32    rate;        \/* Rate for remarking packets. *\/$/;"	m	struct:ofp13_meter_band_dscp_remark
rate	src/Openflow/openflow-1.3.h	/^    ovs_be32 rate;       \/* Rate for this band. *\/$/;"	m	struct:ofp13_meter_band_header
rate	src/Openflow/openflow-common.h	/^    ovs_be16 rate;        \/* In 1\/10 of a percent; >1000 -> disabled. *\/$/;"	m	struct:ofp_queue_prop_rate
read	src/httpserver/wrlib/mg_compat.h	43;"	d
realloc_cache_array	src/mf_topomgr.c	/^static void realloc_cache_array()$/;"	f	file:
reason	src/Openflow/openflow-1.0.h	/^    uint8_t reason;           \/* One of OFPRR_*. *\/$/;"	m	struct:ofp10_flow_removed
reason	src/Openflow/openflow-1.0.h	/^    uint8_t reason;         \/* Reason packet is being sent (one of OFPR_*) *\/$/;"	m	struct:ofp10_packet_in
reason	src/Openflow/openflow-1.1.h	/^    uint8_t reason;           \/* One of OFPRR_*. *\/$/;"	m	struct:ofp11_flow_removed
reason	src/Openflow/openflow-1.1.h	/^    uint8_t reason;         \/* Reason packet is being sent (one of OFPR_*) *\/$/;"	m	struct:ofp11_packet_in
reason	src/Openflow/openflow-1.2.h	/^    uint8_t reason;           \/* One of OFPRR_*. *\/$/;"	m	struct:ofp12_flow_removed
reason	src/Openflow/openflow-1.2.h	/^    uint8_t reason;         \/* Reason packet is being sent (one of OFPR_*) *\/$/;"	m	struct:ofp12_packet_in
reason	src/Openflow/openflow-1.4.h	/^    uint8_t  reason;            \/* One of OFPCRR_*. *\/$/;"	m	struct:ofp14_role_status
recvLen	src/httpserver/wrlib/http.h	/^	int recvLen;$/;"	m	struct:__anon10
ref_count	src/Openflow/openflow-1.1.h	/^    ovs_be32 ref_count;        \/* Number of flows or groups that$/;"	m	struct:ofp11_group_stats
regist_msg_handler	src/mf_msg_handler.c	/^static void regist_msg_handler(struct single_msg_handler ** handler_list, struct single_msg_handler * handler)$/;"	f	file:
register_msg_handler	src/mf_api.h	/^void register_msg_handler(enum MSG_HANDLER_TYPE type, msg_handler_func func)$/;"	f
replyHandler	src/httpserver/wrlib/request.c	/^static int replyHandler(WrHttp *pHttp)$/;"	f	file:
requestHandler	src/httpserver/wrlib/request.c	/^void  requestHandler(void * s)$/;"	f
reserved	src/Openflow/openflow-common.h	/^    ovs_be32 reserved;       \/* Bitmap of supported "ofp_action_type"s.$/;"	m	struct:ofp_switch_features
role	src/Openflow/openflow-1.2.h	/^    ovs_be32 role;            \/* One of OFPCR12_ROLE_*. *\/$/;"	m	struct:ofp12_role_request
role	src/Openflow/openflow-1.4.h	/^    ovs_be32 role;              \/* One of OFPCR_ROLE_*. *\/$/;"	m	struct:ofp14_role_status
rx_buffer	src/mf_switch.h	/^	char rx_buffer[RX_BUFFER_SIZE];$/;"	m	struct:mf_switch
rx_bytes	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_bytes;       \/* Number of received bytes. *\/$/;"	m	struct:ofp10_port_stats
rx_bytes	src/Openflow/openflow-1.1.h	/^    ovs_be64 rx_bytes;        \/* Number of received bytes. *\/$/;"	m	struct:ofp11_port_stats
rx_bytes	src/Openflow/openflow-1.4.h	/^    ovs_be64 rx_bytes;       \/* Number of received bytes. *\/$/;"	m	struct:ofp14_port_stats
rx_crc_err	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_crc_err;   \/* Number of CRC errors. *\/$/;"	m	struct:ofp10_port_stats
rx_crc_err	src/Openflow/openflow-1.1.h	/^    ovs_be64 rx_crc_err;      \/* Number of CRC errors. *\/$/;"	m	struct:ofp11_port_stats
rx_crc_err	src/Openflow/openflow-1.4.h	/^    ovs_be64 rx_crc_err;     \/* Number of CRC errors. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
rx_dropped	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_dropped;     \/* Number of packets dropped by RX. *\/$/;"	m	struct:ofp10_port_stats
rx_dropped	src/Openflow/openflow-1.1.h	/^    ovs_be64 rx_dropped;      \/* Number of packets dropped by RX. *\/$/;"	m	struct:ofp11_port_stats
rx_dropped	src/Openflow/openflow-1.4.h	/^    ovs_be64 rx_dropped;     \/* Number of packets dropped by RX. *\/$/;"	m	struct:ofp14_port_stats
rx_errors	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_errors; \/* Number of receive errors.  This is a$/;"	m	struct:ofp10_port_stats
rx_errors	src/Openflow/openflow-1.1.h	/^    ovs_be64 rx_errors;       \/* Number of receive errors.  This is a$/;"	m	struct:ofp11_port_stats
rx_errors	src/Openflow/openflow-1.4.h	/^    ovs_be64 rx_errors;      \/* Number of receive errors.  This is a super-set$/;"	m	struct:ofp14_port_stats
rx_frame_err	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_frame_err; \/* Number of frame alignment errors. *\/$/;"	m	struct:ofp10_port_stats
rx_frame_err	src/Openflow/openflow-1.1.h	/^    ovs_be64 rx_frame_err;    \/* Number of frame alignment errors. *\/$/;"	m	struct:ofp11_port_stats
rx_frame_err	src/Openflow/openflow-1.4.h	/^    ovs_be64 rx_frame_err;   \/* Number of frame alignment errors. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
rx_over_err	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_over_err;  \/* Number of packets with RX overrun. *\/$/;"	m	struct:ofp10_port_stats
rx_over_err	src/Openflow/openflow-1.1.h	/^    ovs_be64 rx_over_err;     \/* Number of packets with RX overrun. *\/$/;"	m	struct:ofp11_port_stats
rx_over_err	src/Openflow/openflow-1.4.h	/^    ovs_be64 rx_over_err;    \/* Number of packets with RX overrun. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
rx_packet	src/mf_rx_queue.h	/^	char rx_packet[RX_PACKET_SIZE];$/;"	m	struct:q_node
rx_packets	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_packets;     \/* Number of received packets. *\/$/;"	m	struct:ofp10_port_stats
rx_packets	src/Openflow/openflow-1.1.h	/^    ovs_be64 rx_packets;      \/* Number of received packets. *\/$/;"	m	struct:ofp11_port_stats
rx_packets	src/Openflow/openflow-1.4.h	/^    ovs_be64 rx_packets;     \/* Number of received packets. *\/$/;"	m	struct:ofp14_port_stats
secd	src/mf_utilities.h	/^    UINT2 secd;$/;"	m	struct:st_dhcp
sendFileStream	src/httpserver/wrlib/wrio.c	/^int sendFileStream(const WrHttp *pHttp ,const char *filePath)$/;"	f
sendFileStreamPOSIX	src/httpserver/wrlib/wrio.c	/^static int sendFileStreamPOSIX(const WrHttp *pHttp ,const char *filePath)$/;"	f	file:
sendFileStreamWin32	src/httpserver/wrlib/wrio.c	/^static int sendFileStreamWin32(const WrHttp *pHttp ,const char *filePath)$/;"	f	file:
sendHead	src/httpserver/wrlib/request.c	/^static int sendHead(const WrHttp *pHttp ,char *pBuf ,size_t len)$/;"	f	file:
send_LLDP_packet	src/mf_msg_handler.c	/^static void send_LLDP_packet(void * arg)$/;"	f	file:
send_lldp_packet_out_per_port	src/mf_msg_handler.c	/^static void send_lldp_packet_out_per_port(struct mf_switch *sw, lldp_t * pkt, ovs_be32 port_no)$/;"	f	file:
send_multipart_port_desc_request	src/mf_msg_handler.c	/^void send_multipart_port_desc_request(struct q_node* qn)$/;"	f
send_packet_out	src/mf_msg_handler.c	/^void send_packet_out(struct q_node* qn, uint32_t xid, uint32_t buffer_id, void* data, uint32_t data_length)$/;"	f
send_switch_features_request	src/mf_msg_handler.c	/^static void send_switch_features_request(struct q_node* qn)$/;"	f	file:
sendip	src/mf_utilities.h	/^    UINT4 sendip;$/;"	m	struct:st_arp
sendmac	src/mf_utilities.h	/^    UINT1 sendmac[6];$/;"	m	struct:st_arp
sentinel	src/dbg.h	25;"	d
seq	src/mf_utilities.h	/^    UINT2 seq;$/;"	m	struct:st_imcp
seq	src/mf_utilities.h	/^    UINT4 seq;$/;"	m	struct:st_tcp
setCookie	webui/odl-rest.js	/^function setCookie(name, value, expires, path, domain, secure) {$/;"	f
set_CPU_instruction	src/mf_wrapper.c	/^void set_CPU_instruction()$/;"	f
set_close_on_exec	src/httpserver/wrlib/mg_compat.c	/^set_close_on_exec(int fd)$/;"	f
set_cpu_affinity	src/mf_utilities.c	/^void set_cpu_affinity()$/;"	f
set_nonblocking	src/mf_socket.c	/^static void set_nonblocking(uint32_t sock)$/;"	f	file:
single_msg_handler	src/mf_msg_handler.h	/^struct single_msg_handler$/;"	s
single_msg_handler_create	src/mf_msg_handler.c	/^struct single_msg_handler * single_msg_handler_create(msg_handler_func func)$/;"	f
sipaddr	src/mf_utilities.h	/^    UINT4 sipaddr;  \/\/server ip addr;$/;"	m	struct:st_dhcp
size	src/httpserver/wrlib/wrhash.h	/^	size_t size;$/;"	m	struct:__anon8
sname	src/mf_utilities.h	/^    UINT4 sname;$/;"	m	struct:st_dhcp
sock	src/httpserver/wrlib/http.h	/^	SOCKET sock;$/;"	m	struct:__anon10
sockfd	src/mf_switch.h	/^	uint32_t sockfd;$/;"	m	struct:mf_switch
sport	src/mf_utilities.h	/^    UINT2 sport;$/;"	m	struct:st_tcp
sport	src/mf_utilities.h	/^    UINT2 sport;$/;"	m	struct:st_udp
src	src/mf_topomgr.h	/^	struct link_node* src;$/;"	m	struct:network_link	typeref:struct:network_link::link_node
src	src/mf_utilities.h	/^    UINT1 src[6];$/;"	m	struct:st_ether
src	src/mf_utilities.h	/^    UINT4 src;$/;"	m	struct:st_ip
st	src/httpserver/wrlib/http.h	/^	struct stat st;$/;"	m	struct:__anon10	typeref:struct:__anon10::stat
st_arp	src/mf_utilities.h	/^typedef struct st_arp$/;"	s
st_dhcp	src/mf_utilities.h	/^typedef struct st_dhcp$/;"	s
st_dns	src/mf_utilities.h	/^typedef struct st_dns$/;"	s
st_dns_a	src/mf_utilities.h	/^typedef struct st_dns_a$/;"	s
st_dns_q	src/mf_utilities.h	/^typedef struct st_dns_q$/;"	s
st_ether	src/mf_utilities.h	/^typedef struct st_ether$/;"	s
st_ethpkt_info	src/mf_utilities.h	/^typedef struct st_ethpkt_info$/;"	s
st_imcp	src/mf_utilities.h	/^typedef struct st_imcp$/;"	s
st_ip	src/mf_utilities.h	/^typedef struct st_ip$/;"	s
st_lldp	src/mf_utilities.h	/^typedef struct st_lldp$/;"	s
st_t802_1q	src/mf_utilities.h	/^typedef struct st_t802_1q$/;"	s
st_tcp	src/mf_utilities.h	/^typedef struct st_tcp$/;"	s
st_tlv	src/mf_utilities.h	/^typedef struct st_tlv$/;"	s
st_udp	src/mf_utilities.h	/^typedef struct st_udp$/;"	s
start_stopwatch_thread	src/mf_timer.c	/^void start_stopwatch_thread(struct q_node * qn)$/;"	f
start_thread	src/httpserver/wrlib/mg_compat.c	/^start_thread(void * (*func)(void *), void *param)$/;"	f
state	src/Openflow/openflow-1.0.h	/^    ovs_be32 state;         \/* Bitmap of OFPPS_* and OFPPS10_* flags. *\/$/;"	m	struct:ofp10_phy_port
state	src/Openflow/openflow-1.1.h	/^	ovs_be32 state;         \/* Bitmap of OFPPS_* and OFPPS11_* flags. *\/$/;"	m	struct:ofp11_port
state	src/Openflow/openflow-1.4.h	/^    ovs_be32 state;         \/* Bitmap of OFPPS_* flags. *\/$/;"	m	struct:ofp14_port
staticProcess	src/httpserver/wrlib/request.c	/^static int staticProcess(const WrHttp *pHttp)$/;"	f	file:
stop_sec	src/mf_timer.h	/^	float stop_sec;$/;"	m	struct:stopwatch
stopwatch	src/mf_timer.h	/^struct stopwatch$/;"	s
stopwatch_countdown	src/mf_timer.c	/^void stopwatch_countdown(struct stopwatch_list * swl)$/;"	f
stopwatch_create	src/mf_timer.c	/^struct stopwatch * stopwatch_create(float sec, stopwatch_switch_callback swc, enum STOPWATCH_TYPE type, void* callback_arg)$/;"	f
stopwatch_list	src/mf_timer.h	/^struct stopwatch_list$/;"	s
stopwatch_list_create	src/mf_timer.c	/^struct stopwatch_list * stopwatch_list_create()$/;"	f
stopwatch_list_destory	src/mf_timer.c	/^void stopwatch_list_destory(struct stopwatch_list* swl)$/;"	f
stopwatch_mutex	src/mf_timer.h	/^	pthread_mutex_t stopwatch_mutex;$/;"	m	struct:stopwatch_list
stopwatch_num	src/mf_timer.h	/^	uint8_t stopwatch_num;$/;"	m	struct:stopwatch_list
stopwatch_switch_callback	src/mf_timer.h	/^typedef void (*stopwatch_switch_callback)(void* );$/;"	t
stopwatch_worker	src/mf_timer.c	/^void* stopwatch_worker(void* arg)$/;"	f
supported	src/Openflow/openflow-1.0.h	/^    ovs_be32 supported;     \/* Features supported by the port. *\/$/;"	m	struct:ofp10_phy_port
supported	src/Openflow/openflow-1.1.h	/^	ovs_be32 supported;     \/* Features supported by the port. *\/$/;"	m	struct:ofp11_port
supported	src/Openflow/openflow-1.4.h	/^    ovs_be32 supported;     \/* Features supported by the port. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
svg	webui/odl-webui.js	/^var svg = d3.select("#graph-diagram").append("svg:svg")$/;"	v
sw	src/mf_devicemgr.h	/^	struct mf_switch * sw;$/;"	m	struct:host_hash_value	typeref:struct:host_hash_value::mf_switch
sw	src/mf_rx_queue.h	/^	struct mf_switch* sw;$/;"	m	struct:q_node	typeref:struct:q_node::mf_switch
sw	src/mf_topomgr.h	/^	struct mf_switch * sw;$/;"	m	struct:link_node	typeref:struct:link_node::mf_switch
sw_callback	src/mf_timer.h	/^	stopwatch_switch_callback sw_callback;$/;"	m	struct:stopwatch
sw_link_delete	src/mf_topomgr.c	/^void sw_link_delete(struct sw_link_list * list, struct network_link * link)$/;"	f
sw_link_insert	src/mf_topomgr.c	/^uint32_t sw_link_insert(struct sw_link_list * sw_list, struct network_link * link)$/;"	f
sw_link_list	src/mf_topomgr.h	/^struct sw_link_list$/;"	s
sw_link_next	src/mf_topomgr.h	/^	struct network_link * sw_link_next;$/;"	m	struct:network_link	typeref:struct:network_link::network_link
sw_next	src/mf_topomgr.h	/^	struct lf_list sw_next;$/;"	m	struct:network_link	typeref:struct:network_link::lf_list
swap_16	tests/inverse_memcpy_test.c	/^uint16_t swap_16(uint16_t a)$/;"	f
swap_16bit	src/mf_utilities.c	/^inline uint16_t swap_16bit(uint16_t a)$/;"	f
swap_32	tests/inverse_memcpy_test.c	/^uint32_t swap_32(uint32_t a)$/;"	f
swap_32bit	src/mf_utilities.c	/^inline uint32_t swap_32bit(uint32_t a)$/;"	f
switch_addr	src/mf_socket.c	/^struct sockaddr_in controller_addr, switch_addr;$/;"	v	typeref:struct:
switch_list	src/mf_devicemgr.h	/^	struct lf_list switch_list;$/;"	m	struct:host_hash_value	typeref:struct:host_hash_value::lf_list
switch_mutex	src/mf_switch.h	/^	pthread_mutex_t switch_mutex;$/;"	m	struct:mf_switch
switch_print	src/mf_switch.c	/^void switch_print(struct mf_switch * sw)$/;"	f
switches	src/mf_devicemgr.h	/^	struct lf_list switches;$/;"	m	struct:mf_devicemgr	typeref:struct:mf_devicemgr::lf_list
t802_1q_t	src/mf_utilities.h	/^}t802_1q_t;$/;"	t	typeref:struct:st_t802_1q
table_id	src/Openflow/openflow-1.0.h	/^    uint8_t table_id;         \/* ID of table flow came from. *\/$/;"	m	struct:ofp10_flow_stats
table_id	src/Openflow/openflow-1.0.h	/^    uint8_t table_id;         \/* ID of table to read (from ofp_table_stats)$/;"	m	struct:ofp10_flow_stats_request
table_id	src/Openflow/openflow-1.0.h	/^    uint8_t table_id;        \/* Identifier of table.  Lower numbered tables$/;"	m	struct:ofp10_table_stats
table_id	src/Openflow/openflow-1.1.h	/^    uint8_t table_id;              \/* Set next table in the lookup pipeline *\/$/;"	m	struct:ofp11_instruction_goto_table
table_id	src/Openflow/openflow-1.1.h	/^    uint8_t table_id;            \/* ID of the table to put the flow in *\/$/;"	m	struct:ofp11_flow_mod
table_id	src/Openflow/openflow-1.1.h	/^    uint8_t table_id;          \/* ID of table flow came from. *\/$/;"	m	struct:ofp11_flow_stats
table_id	src/Openflow/openflow-1.1.h	/^    uint8_t table_id;         \/* ID of table to read (from ofp_table_stats),$/;"	m	struct:ofp11_flow_stats_request
table_id	src/Openflow/openflow-1.1.h	/^    uint8_t table_id;         \/* ID of the table *\/$/;"	m	struct:ofp11_flow_removed
table_id	src/Openflow/openflow-1.1.h	/^    uint8_t table_id;        \/* Identifier of table. Lower numbered tables$/;"	m	struct:ofp11_table_stats
table_id	src/Openflow/openflow-1.1.h	/^    uint8_t table_id;       \/* ID of the table that was looked up *\/$/;"	m	struct:ofp11_packet_in
table_id	src/Openflow/openflow-1.1.h	/^    uint8_t table_id;       \/* ID of the table, 0xFF indicates all tables *\/$/;"	m	struct:ofp11_table_mod
table_id	src/Openflow/openflow-1.2.h	/^    uint8_t table_id;         \/* ID of the table *\/$/;"	m	struct:ofp12_flow_removed
table_id	src/Openflow/openflow-1.2.h	/^    uint8_t table_id;        \/* Identifier of table.  Lower numbered tables$/;"	m	struct:ofp12_table_stats
table_id	src/Openflow/openflow-1.2.h	/^    uint8_t table_id;       \/* ID of the table that was looked up *\/$/;"	m	struct:ofp12_packet_in
table_id	src/Openflow/openflow-1.3.h	/^    uint8_t  table_id;      \/* Identifier of table. Lower numbered tables are$/;"	m	struct:ofp13_table_stats
table_id	src/Openflow/openflow-1.3.h	/^    uint8_t table_id;         \/* Identifier of table. Lower numbered tables$/;"	m	struct:ofp13_table_features
table_id	src/Openflow/openflow-1.4.h	/^    uint8_t table_id;           \/* One table's ID or OFPTT_ALL (all tables). *\/$/;"	m	struct:ofp14_flow_monitor_request
table_id	src/Openflow/openflow-1.4.h	/^    uint8_t table_id;     \/* ID of the table, OFPTT_ALL indicates all tables *\/$/;"	m	struct:ofp14_table_mod
tail	src/mf_mempool.h	/^	struct q_node * tail;$/;"	m	struct:mf_queue_node_mempool	typeref:struct:mf_queue_node_mempool::q_node
tail	src/mf_rx_queue.h	/^	struct q_node* tail;$/;"	m	struct:mf_rx_queue	typeref:struct:mf_rx_queue::q_node
targetip	src/mf_utilities.h	/^    UINT4 targetip;$/;"	m	struct:st_arp
targetmac	src/mf_utilities.h	/^    UINT1 targetmac[6];$/;"	m	struct:st_arp
tcp_t	src/mf_utilities.h	/^}tcp_t;$/;"	t	typeref:struct:st_tcp
test_destory_queue	tests/queue_test.c	/^static char* test_destory_queue(){$/;"	f	file:
test_handle_flow_mod	tests/queue_test.c	/^static char* test_handle_flow_mod()$/;"	f	file:
test_pop_q_node	tests/queue_test.c	/^static char* test_pop_q_node(){$/;"	f	file:
test_push_q_node	tests/queue_test.c	/^static char* test_push_q_node(){$/;"	f	file:
test_q_node_init	tests/queue_test.c	/^static char* test_q_node_init(){$/;"	f	file:
tests_run	src/minunit.h	/^int tests_run;$/;"	v
threadCnt	src/httpserver/wrlib/http.h	/^	volatile int threadCnt;$/;"	m	struct:__anon12
thread_func	tests/lock_free_list_test.c	/^void * thread_func(void * arg)$/;"	f
thread_func_delete	tests/lock_free_list_test.c	/^void * thread_func_delete(void * arg)$/;"	f
thread_func_pop	tests/lock_free_list_test.c	/^void * thread_func_pop(void * arg)$/;"	f
thread_func_search	tests/lock_free_list_test.c	/^void * thread_func_search(void *arg)$/;"	f
tick	webui/odl-webui.js	/^function tick() {$/;"	f
time_remain	src/mf_timer.h	/^	float time_remain;$/;"	m	struct:stopwatch
tlv_t	src/mf_utilities.h	/^}tlv_t;$/;"	t	typeref:struct:st_tlv
topo	webui/odl-webui.js	/^var topo = d3.layout.force()$/;"	v
topoResize	webui/odl-webui.js	/^function topoResize() { $/;"	f
topomgr_mutex	src/mf_topomgr.h	/^	pthread_mutex_t topomgr_mutex;$/;"	m	struct:mf_topomgr
tos	src/mf_utilities.h	/^    UINT1 tos;$/;"	m	struct:st_ip
total_len	src/Openflow/openflow-1.0.h	/^    ovs_be16 total_len;     \/* Full length of frame. *\/$/;"	m	struct:ofp10_packet_in
total_len	src/Openflow/openflow-1.1.h	/^    ovs_be16 total_len;     \/* Full length of frame. *\/$/;"	m	struct:ofp11_packet_in
total_len	src/Openflow/openflow-1.2.h	/^    ovs_be16 total_len;     \/* Full length of frame. *\/$/;"	m	struct:ofp12_packet_in
total_network_link_number	src/mf_topomgr.h	/^	uint64_t total_network_link_number;$/;"	m	struct:mf_topomgr
total_node_number	src/mf_topomgr.h	/^	uint64_t total_node_number;$/;"	m	struct:mf_topomgr
total_switch_number	src/mf_devicemgr.h	/^	uint32_t total_switch_number;$/;"	m	struct:mf_devicemgr
tp_dst	src/Openflow/openflow-1.0.h	/^    ovs_be16 tp_dst;           \/* TCP\/UDP destination port. *\/$/;"	m	struct:ofp10_match
tp_dst	src/Openflow/openflow-1.1.h	/^    ovs_be16 tp_dst;           \/* TCP\/UDP\/SCTP destination port. *\/$/;"	m	struct:ofp11_match
tp_src	src/Openflow/openflow-1.0.h	/^    ovs_be16 tp_src;           \/* TCP\/UDP source port. *\/$/;"	m	struct:ofp10_match
tp_src	src/Openflow/openflow-1.1.h	/^    ovs_be16 tp_src;           \/* TCP\/UDP\/SCTP source port. *\/$/;"	m	struct:ofp11_match
ttl	src/mf_utilities.h	/^    UINT1 ttl;$/;"	m	struct:st_ip
ttl	src/mf_utilities.h	/^    UINT4 ttl;$/;"	m	struct:st_dns_a
ttl_tlv_ttl	src/mf_utilities.h	/^    UINT2 ttl_tlv_ttl;               \/\/ttl 120$/;"	m	struct:st_lldp
ttl_tlv_type_and_len	src/mf_utilities.h	/^    UINT2 ttl_tlv_type_and_len;      \/\/0x0602$/;"	m	struct:st_lldp
tx_bytes	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_bytes;       \/* Number of transmitted bytes. *\/$/;"	m	struct:ofp10_port_stats
tx_bytes	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_bytes;   \/* Number of transmitted bytes. *\/$/;"	m	struct:ofp10_queue_stats
tx_bytes	src/Openflow/openflow-1.1.h	/^    ovs_be64 tx_bytes;         \/* Number of transmitted bytes. *\/$/;"	m	struct:ofp11_queue_stats
tx_bytes	src/Openflow/openflow-1.1.h	/^    ovs_be64 tx_bytes;        \/* Number of transmitted bytes. *\/$/;"	m	struct:ofp11_port_stats
tx_bytes	src/Openflow/openflow-1.4.h	/^    ovs_be64 tx_bytes;       \/* Number of transmitted bytes. *\/$/;"	m	struct:ofp14_port_stats
tx_dropped	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_dropped;     \/* Number of packets dropped by TX. *\/$/;"	m	struct:ofp10_port_stats
tx_dropped	src/Openflow/openflow-1.1.h	/^    ovs_be64 tx_dropped;      \/* Number of packets dropped by TX. *\/$/;"	m	struct:ofp11_port_stats
tx_dropped	src/Openflow/openflow-1.4.h	/^    ovs_be64 tx_dropped;     \/* Number of packets dropped by TX. *\/$/;"	m	struct:ofp14_port_stats
tx_errors	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_errors;  \/* # of packets dropped due to overrun. *\/$/;"	m	struct:ofp10_queue_stats
tx_errors	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_errors; \/* Number of transmit errors.  This is a$/;"	m	struct:ofp10_port_stats
tx_errors	src/Openflow/openflow-1.1.h	/^    ovs_be64 tx_errors;        \/* # of packets dropped due to overrun. *\/$/;"	m	struct:ofp11_queue_stats
tx_errors	src/Openflow/openflow-1.1.h	/^    ovs_be64 tx_errors;       \/* Number of transmit errors.  This is a$/;"	m	struct:ofp11_port_stats
tx_errors	src/Openflow/openflow-1.4.h	/^    ovs_be64 tx_errors;      \/* Number of transmit errors.  This is a super-set$/;"	m	struct:ofp14_port_stats
tx_packets	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_packets;     \/* Number of transmitted packets. *\/$/;"	m	struct:ofp10_port_stats
tx_packets	src/Openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_packets; \/* Number of transmitted packets. *\/$/;"	m	struct:ofp10_queue_stats
tx_packets	src/Openflow/openflow-1.1.h	/^    ovs_be64 tx_packets;       \/* Number of transmitted packets. *\/$/;"	m	struct:ofp11_queue_stats
tx_packets	src/Openflow/openflow-1.1.h	/^    ovs_be64 tx_packets;      \/* Number of transmitted packets. *\/$/;"	m	struct:ofp11_port_stats
tx_packets	src/Openflow/openflow-1.4.h	/^    ovs_be64 tx_packets;     \/* Number of transmitted packets. *\/$/;"	m	struct:ofp14_port_stats
type	src/Openflow/openflow-1.0.h	/^    ovs_be16 type;              \/* One of the OFPST_* constants. *\/$/;"	m	struct:ofp10_stats_msg
type	src/Openflow/openflow-1.1.h	/^    ovs_be16 type;                 \/* OFPIT_GOTO_TABLE *\/$/;"	m	struct:ofp11_instruction_goto_table
type	src/Openflow/openflow-1.1.h	/^    ovs_be16 type;              \/* Instruction type *\/$/;"	m	struct:ofp11_instruction
type	src/Openflow/openflow-1.1.h	/^    ovs_be16 type;              \/* OFPIT11_EXPERIMENTER *\/$/;"	m	struct:ofp11_instruction_experimenter
type	src/Openflow/openflow-1.1.h	/^    ovs_be16 type;              \/* OFPIT_WRITE_METADATA *\/$/;"	m	struct:ofp11_instruction_write_metadata
type	src/Openflow/openflow-1.1.h	/^    ovs_be16 type;              \/* One of OFPIT_*_ACTIONS *\/$/;"	m	struct:ofp11_instruction_actions
type	src/Openflow/openflow-1.1.h	/^    ovs_be16 type;              \/* One of the OFPST_* constants. *\/$/;"	m	struct:ofp11_stats_msg
type	src/Openflow/openflow-1.1.h	/^    ovs_be16 type;             \/* One of OFPMT_* *\/$/;"	m	struct:ofp11_match_header
type	src/Openflow/openflow-1.1.h	/^    uint8_t type;                 \/* One of OFPGT11_*. *\/$/;"	m	struct:ofp11_group_mod
type	src/Openflow/openflow-1.1.h	/^    uint8_t type;               \/* One of OFPGT11_*. *\/$/;"	m	struct:ofp11_group_desc_stats
type	src/Openflow/openflow-1.3.h	/^    ovs_be16    type;        \/* OFPMBT_DROP. *\/$/;"	m	struct:ofp13_meter_band_drop
type	src/Openflow/openflow-1.3.h	/^    ovs_be16    type;        \/* OFPMBT_DSCP_REMARK. *\/$/;"	m	struct:ofp13_meter_band_dscp_remark
type	src/Openflow/openflow-1.3.h	/^    ovs_be16    type;        \/* OFPMBT_EXPERIMENTER. *\/$/;"	m	struct:ofp13_meter_band_experimenter
type	src/Openflow/openflow-1.3.h	/^    ovs_be16    type;     \/* One of OFPTFPT13_EXPERIMENTER,$/;"	m	struct:ofp13_table_feature_prop_experimenter
type	src/Openflow/openflow-1.3.h	/^    ovs_be16    type;    \/* One of OFPTFPT13_INSTRUCTIONS,$/;"	m	struct:ofp13_table_feature_prop_instructions
type	src/Openflow/openflow-1.3.h	/^    ovs_be16    type;   \/* One of OFPTFPT13_MATCH, OFPTFPT13_WILDCARDS,$/;"	m	struct:ofp13_table_feature_prop_oxm
type	src/Openflow/openflow-1.3.h	/^    ovs_be16    type;   \/* One of OFPTFPT13_NEXT_TABLES,$/;"	m	struct:ofp13_table_feature_prop_next_tables
type	src/Openflow/openflow-1.3.h	/^    ovs_be16    type;   \/* One of OFPTFPT13_WRITE_ACTIONS,$/;"	m	struct:ofp13_table_feature_prop_actions
type	src/Openflow/openflow-1.3.h	/^    ovs_be16    type;   \/* One of OFPTFPT_*. *\/$/;"	m	struct:ofp13_table_feature_prop_header
type	src/Openflow/openflow-1.3.h	/^    ovs_be16 type;              \/* OFPIT13_METER *\/$/;"	m	struct:ofp13_instruction_meter
type	src/Openflow/openflow-1.3.h	/^    ovs_be16 type;       \/* One of OFPMBT_*. *\/$/;"	m	struct:ofp13_meter_band_header
type	src/Openflow/openflow-1.4.h	/^    ovs_be16         type;    \/* OFPPDPT14_ETHERNET. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
type	src/Openflow/openflow-1.4.h	/^    ovs_be16         type;    \/* OFPPSPT14_ETHERNET. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
type	src/Openflow/openflow-1.4.h	/^    ovs_be16         type;    \/* OFPTMPT14_EVICTION. *\/$/;"	m	struct:ofp14_table_mod_prop_eviction
type	src/Openflow/openflow-1.4.h	/^    ovs_be16         type;   \/* OFPTMPT14_VACANCY. *\/$/;"	m	struct:ofp14_table_mod_prop_vacancy
type	src/Openflow/openflow-1.4.h	/^    ovs_be16        type;       \/* One of OFPRPT_EXPERIMENTER. *\/$/;"	m	struct:ofp14_role_prop_experimenter
type	src/Openflow/openflow-1.4.h	/^    ovs_be16        type;       \/* One of OFPTFPT_EXPERIMENTER_SLAVE,$/;"	m	struct:ofp14_async_config_prop_experimenter
type	src/Openflow/openflow-1.4.h	/^    ovs_be16      type;       \/* OFPPMPT14_ETHERNET. *\/$/;"	m	struct:ofp14_port_mod_prop_ethernet
type	src/Openflow/openflow-1.4.h	/^    ovs_be16    type;       \/* One of OFPACPT_*. *\/$/;"	m	struct:ofp14_async_config_prop_header
type	src/Openflow/openflow-1.4.h	/^    ovs_be16    type;$/;"	m	struct:ofp14_async_config_prop_reasons
type	src/Openflow/openflow-1.4.h	/^    ovs_be16 type;          \/* OFPT_BUNDLE_CONTROL: one of OFPBCT_*.$/;"	m	struct:ofp14_bundle_ctrl_msg
type	src/Openflow/openflow-1.4.h	/^    ovs_be16 type;   \/* One of OFPRPT_*. *\/$/;"	m	struct:ofp14_role_prop_header
type	src/Openflow/openflow-1.5.h	/^    ovs_be16         type;    \/* OFPGBPT15_WATCH_PORT or OFPGBPT15_WATCH_GROUP. *\/$/;"	m	struct:ofp15_group_bucket_prop_watch
type	src/Openflow/openflow-1.5.h	/^    ovs_be16         type;    \/* OFPGBPT15_WEIGHT. *\/$/;"	m	struct:ofp15_group_bucket_prop_weight
type	src/Openflow/openflow-1.5.h	/^    uint8_t type;                 \/* One of OFPGT11_*. *\/$/;"	m	struct:ofp15_group_desc_stats
type	src/Openflow/openflow-1.5.h	/^    uint8_t type;                 \/* One of OFPGT11_*. *\/$/;"	m	struct:ofp15_group_mod
type	src/Openflow/openflow-common.h	/^    ovs_be16    type;        \/* One of OFPHET_*. *\/$/;"	m	struct:ofp_hello_elem_header
type	src/Openflow/openflow-common.h	/^    ovs_be16 type;$/;"	m	struct:ofp_error_msg
type	src/Openflow/openflow-common.h	/^    uint16_t type; \/* OFPAT_OUTPUT. *\/$/;"	m	struct:ofp_action_output
type	src/Openflow/openflow-common.h	/^    uint16_t type; \/* One of OFPAT_*. *\/$/;"	m	struct:ofp_action_header
type	src/Openflow/openflow-common.h	/^    uint16_t type; \/* One of the OFPMP_* constants. *\/$/;"	m	struct:ofp_multipart_request
type	src/Openflow/openflow-common.h	/^    uint8_t type;       \/* One of the OFPT_ constants. *\/$/;"	m	struct:ofp_header
type	src/httpserver/wrlib/misc.h	/^	const char	*type;$/;"	m	struct:__anon9
type	src/mf_timer.h	/^	enum STOPWATCH_TYPE type;$/;"	m	struct:stopwatch	typeref:enum:stopwatch::STOPWATCH_TYPE
type	src/mf_utilities.h	/^    UINT1 type;$/;"	m	struct:st_imcp
type	src/mf_utilities.h	/^    UINT1 type;$/;"	m	struct:st_tlv
type	src/mf_utilities.h	/^    UINT2 type;         \/\/ type$/;"	m	struct:st_dns_a
typeSet	src/httpserver/wrlib/request.c	/^static int typeSet(char *buf ,const char *type)$/;"	f	file:
types	src/Openflow/openflow-1.2.h	/^    ovs_be32  types;           \/* Bitmap of OFPGT11_* values supported. *\/$/;"	m	struct:ofp12_group_features_stats
u32	src/Openflow/types.h	/^    uint32_t u32[4];$/;"	m	union:__anon4
u64	src/Openflow/types.h	/^    } u64;$/;"	m	union:__anon4	typeref:struct:__anon4::__anon5
udp_t	src/mf_utilities.h	/^}udp_t;$/;"	t	typeref:struct:st_udp
unlikely	src/mf_utilities.h	28;"	d
unregister_msg_handler	src/mf_api.h	/^void unregister_msg_handler(enum MSG_HANDLER_TYPE type, msg_handler_func func)$/;"	f
unregister_msg_handler	src/mf_msg_handler.c	/^static void unregister_msg_handler(struct single_msg_handler ** handler_list, msg_handler_func func)$/;"	f	file:
urg	src/mf_utilities.h	/^    UINT2 urg;$/;"	m	struct:st_tcp
url	src/httpserver/wrlib/http.h	/^	char *url;$/;"	m	struct:__anon10
url_decode	src/httpserver/wrlib/misc.c	/^int url_decode(const char *src ,char *dst ,int is_form_url_encoded)$/;"	f
used_link_list	src/mf_topomgr.h	/^	struct lf_list used_link_list;$/;"	m	struct:mf_topomgr	typeref:struct:mf_topomgr::lf_list
used_list	src/mf_devicemgr.h	/^	struct lf_list used_list;$/;"	m	struct:mf_devicemgr	typeref:struct:mf_devicemgr::lf_list
used_list	src/mf_topomgr.h	/^	struct lf_list used_list;$/;"	m	struct:mf_topomgr	typeref:struct:mf_topomgr::lf_list
used_slot_num	src/mf_devicemgr.h	/^	uint32_t used_slot_num;$/;"	m	struct:mf_devicemgr
used_to_available	src/mf_devicemgr.c	/^static void used_to_available(struct host_hash_value * value)$/;"	f	file:
vacancy	src/Openflow/openflow-1.4.h	/^    uint8_t vacancy;      \/* Current vacancy (%) - only in ofp14_table_desc. *\/$/;"	m	struct:ofp14_table_mod_prop_vacancy
vacancy_down	src/Openflow/openflow-1.4.h	/^    uint8_t vacancy_down;    \/* Vacancy threshold when space decreases (%). *\/$/;"	m	struct:ofp14_table_mod_prop_vacancy
vacancy_up	src/Openflow/openflow-1.4.h	/^    uint8_t vacancy_up;      \/* Vacancy threshold when space increases (%). *\/$/;"	m	struct:ofp14_table_mod_prop_vacancy
val	tests/lock_free_list_test.c	/^	int val;$/;"	m	struct:list_node	file:
value	src/httpserver/wrlib/wrhash.h	/^	void *value;$/;"	m	struct:_slist
vendor	src/Openflow/openflow-1.0.h	/^    ovs_be32 vendor;            \/* Vendor ID:$/;"	m	struct:ofp10_vendor_stats_msg
vendor	src/Openflow/openflow-1.1.h	/^    ovs_be32 vendor;            \/* Vendor ID:$/;"	m	struct:ofp11_vendor_stats_msg
vendor	src/Openflow/openflow-common.h	/^    ovs_be32 vendor;            \/* Vendor ID:$/;"	m	struct:ofp_vendor_header
version	src/Openflow/openflow-common.h	/^    uint8_t version;    \/* An OpenFlow version number, e.g. OFP10_VERSION. *\/$/;"	m	struct:ofp_header
vlan	src/mf_utilities.h	/^    UINT2 vlan; $/;"	m	struct:st_t802_1q
vlan_id	src/mf_utilities.h	/^    UINT2 vlan_id;$/;"	m	struct:st_ethpkt_info
watch	src/Openflow/openflow-1.5.h	/^    ovs_be32         watch;   \/* The port or the group.  *\/$/;"	m	struct:ofp15_group_bucket_prop_watch
watch_group	src/Openflow/openflow-1.1.h	/^    ovs_be32 watch_group;            \/* Group whose state affects whether this$/;"	m	struct:ofp11_bucket
watch_port	src/Openflow/openflow-1.1.h	/^    ovs_be32 watch_port;             \/* Port whose state affects whether this$/;"	m	struct:ofp11_bucket
weight	src/Openflow/openflow-1.1.h	/^    ovs_be16 weight;                 \/* Relative weight of bucket. Only$/;"	m	struct:ofp11_bucket
weight	src/Openflow/openflow-1.5.h	/^    ovs_be16         weight;  \/* Relative weight of bucket. *\/$/;"	m	struct:ofp15_group_bucket_prop_weight
width	webui/odl-webui.js	/^var width = $("#graph-diagram").width(),$/;"	v
wildcards	src/Openflow/openflow-1.0.h	/^    ovs_be32 wildcards;        \/* Wildcard fields. *\/$/;"	m	struct:ofp10_match
wildcards	src/Openflow/openflow-1.0.h	/^    ovs_be32 wildcards;      \/* Bitmap of OFPFW10_* wildcards that are$/;"	m	struct:ofp10_table_stats
wildcards	src/Openflow/openflow-1.1.h	/^    ovs_be32 wildcards;        \/* Wildcard fields. *\/$/;"	m	struct:ofp11_match
wildcards	src/Openflow/openflow-1.1.h	/^    ovs_be32 wildcards;      \/* Bitmap of OFPFMF_* wildcards that are$/;"	m	struct:ofp11_table_stats
wildcards	src/Openflow/openflow-1.2.h	/^    ovs_be64 wildcards;      \/* Bitmap of (1 << OFPXMT_*) wildcards that are$/;"	m	struct:ofp12_table_stats
window	src/mf_utilities.h	/^    UINT2 window;$/;"	m	struct:st_tcp
worker_thread	src/mf_msg_parser.c	/^void * worker_thread(void* arg)$/;"	f
wr_error_reply	src/httpserver/wrlib/request.c	/^int wr_error_reply(const WrHttp *pHttp ,int stscode)$/;"	f
wr_hash_add	src/httpserver/wrlib/wrhash.c	/^int wr_hash_add(wr_hashmap *hm ,const void *key ,const void *value)$/;"	f
wr_hash_clear	src/httpserver/wrlib/wrhash.c	/^void wr_hash_clear(wr_hashmap *hm)$/;"	f
wr_hash_find	src/httpserver/wrlib/wrhash.c	/^void* wr_hash_find(const wr_hashmap *hm ,const void *key)$/;"	f
wr_hash_init	src/httpserver/wrlib/wrhash.c	/^void wr_hash_init(wr_hashmap* hm ,wr_mpool *mp ,size_t _size)$/;"	f
wr_hashcasecmp_str	src/httpserver/wrlib/wrhash.h	/^static int wr_hashcasecmp_str(const char *s1 ,const char *s2)$/;"	f
wr_hashcmp_str	src/httpserver/wrlib/wrhash.h	/^static int wr_hashcmp_str(const char *s1 ,const char *s2)$/;"	f
wr_hashfun_elf	src/httpserver/wrlib/wrhash.c	/^int wr_hashfun_elf(const char *s)$/;"	f
wr_hashfun_prime	src/httpserver/wrlib/wrhash.c	/^int wr_hashfun_prime(const char *s)$/;"	f
wr_hashfun_str	src/httpserver/wrlib/wrhash.c	/^int wr_hashfun_str(const char *s)$/;"	f
wr_hashfun_uchar	src/httpserver/wrlib/wrhash.h	/^static int wr_hashfun_uchar(const char *s)$/;"	f
wr_hashlist	src/httpserver/wrlib/wrhash.h	/^}wr_hashlist;$/;"	t	typeref:struct:_slist
wr_hashmap	src/httpserver/wrlib/wrhash.h	/^}wr_hashmap;$/;"	t	typeref:struct:__anon8
wr_http_start	src/httpserver/wrlib/http.c	/^static int wr_http_start()$/;"	f	file:
wr_init	src/httpserver/wrlib/http.c	/^int wr_init()$/;"	f
wr_load_body	src/httpserver/wrlib/wrio.c	/^int wr_load_body(WrHttp *pHttp)$/;"	f
wr_mpool	src/httpserver/wrlib/wrmpool.h	/^}wr_mpool;$/;"	t	typeref:struct:__anon7
wr_mpool_clear	src/httpserver/wrlib/wrmpool.c	/^void wr_mpool_clear(wr_mpool *pmp)$/;"	f
wr_mpool_free	src/httpserver/wrlib/wrmpool.c	/^void wr_mpool_free(wr_mpool *pmp ,void *p)$/;"	f
wr_mpool_init	src/httpserver/wrlib/wrmpool.c	/^void wr_mpool_init(wr_mpool *pmp ,char *begin ,size_t len)$/;"	f
wr_mpool_malloc	src/httpserver/wrlib/wrmpool.c	/^void *wr_mpool_malloc(wr_mpool *pmp ,size_t mlen)$/;"	f
wr_read_head	src/httpserver/wrlib/wrio.c	/^int wr_read_head(SOCKET sock ,char *buf ,size_t bufsize)$/;"	f
wr_send_file	src/httpserver/wrlib/request.c	/^int wr_send_file(WrHttp *pHttp ,const char *filePath)$/;"	f
wr_send_msg	src/httpserver/wrlib/request.c	/^int wr_send_msg(WrHttp *pHttp ,const char *type ,const char *buf ,size_t len)$/;"	f
wr_sleep	src/httpserver/wrlib/http.c	/^void wr_sleep(size_t ms)$/;"	f
wr_sock_nread	src/httpserver/wrlib/wrio.c	/^int wr_sock_nread(SOCKET sock ,char *buf, size_t bufsize ,size_t n)$/;"	f
wr_sock_nwrite	src/httpserver/wrlib/wrio.c	/^int wr_sock_nwrite(SOCKET sock ,char *buf ,size_t n)$/;"	f
wr_sock_recv	src/httpserver/wrlib/wrio.c	/^static int wr_sock_recv(SOCKET sock ,char *buf ,size_t bufsize)$/;"	f	file:
wr_strcasecmp	src/httpserver/wrlib/wrstring.c	/^int wr_strcasecmp(register const char *lStr ,register const char *rStr)$/;"	f
wr_trim	src/httpserver/wrlib/wrstring.c	/^char* wr_trim(char *pBuf)$/;"	f
wr_uninit	src/httpserver/wrlib/http.c	/^int wr_uninit()$/;"	f
write	src/httpserver/wrlib/mg_compat.h	42;"	d
write_actions	src/Openflow/openflow-1.1.h	/^    ovs_be32 write_actions;  \/* Bitmap of OFPAT_* that are supported$/;"	m	struct:ofp11_table_stats
write_actions	src/Openflow/openflow-1.2.h	/^    ovs_be32 write_actions;  \/* Bitmap of OFPAT_* that are supported$/;"	m	struct:ofp12_table_stats
write_setfields	src/Openflow/openflow-1.2.h	/^    ovs_be64 write_setfields;\/* Bitmap of (1 << OFPXMT_*) header fields that$/;"	m	struct:ofp12_table_stats
xid	src/Openflow/openflow-common.h	/^    ovs_be32 xid;       \/* Transaction id associated with this packet.$/;"	m	struct:ofp_header
xid	src/mf_utilities.h	/^    UINT4 xid;$/;"	m	struct:st_dhcp
yipaddr	src/mf_utilities.h	/^    UINT4 yipaddr;  \/\/you ip addr;$/;"	m	struct:st_dhcp
